

================================================================
== Vitis HLS Report for 'ConvertInputToStream_Pipeline_VITIS_LOOP_19_1_VITIS_LOOP_22_2_VITIS_LOOP_25_3_VI'
================================================================
* Date:           Mon Mar 10 15:35:49 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        SDA
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplusHBM
* Target device:  xcvu35p_CIV-fsvh2892-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      268|      268|  2.680 us|  2.680 us|  268|  268|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                             Loop Name                             |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_19_1_VITIS_LOOP_22_2_VITIS_LOOP_25_3_VITIS_LOOP_28_4  |      266|      266|        12|          1|          1|   256|       yes|
        +-------------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 13


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 1
  Pipeline-0 : II = 1, D = 13, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.36>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%n_1 = alloca i32 1" [tools.cpp:28]   --->   Operation 15 'alloca' 'n_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%c = alloca i32 1" [tools.cpp:25]   --->   Operation 16 'alloca' 'c' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 17 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%r = alloca i32 1" [tools.cpp:22]   --->   Operation 18 'alloca' 'r' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%indvar_flatten12 = alloca i32 1"   --->   Operation 19 'alloca' 'indvar_flatten12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%indvar_flatten33 = alloca i32 1"   --->   Operation 20 'alloca' 'indvar_flatten33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%A_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %A"   --->   Operation 21 'read' 'A_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%N_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %N"   --->   Operation 22 'read' 'N_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%C_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %C"   --->   Operation 23 'read' 'C_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%bound_read = read i60 @_ssdm_op_Read.ap_auto.i60, i60 %bound"   --->   Operation 24 'read' 'bound_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%div_read = read i28 @_ssdm_op_Read.ap_auto.i28, i28 %div"   --->   Operation 25 'read' 'div_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%bound4_read = read i92 @_ssdm_op_Read.ap_auto.i92, i92 %bound4"   --->   Operation 26 'read' 'bound4_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%tmp_13 = read i28 @_ssdm_op_Read.ap_auto.i28, i28 %empty"   --->   Operation 27 'read' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%bound17_read = read i120 @_ssdm_op_Read.ap_auto.i120, i120 %bound17"   --->   Operation 28 'read' 'bound17_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%p_cast = zext i28 %tmp_13"   --->   Operation 29 'zext' 'p_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i512 %A_BUS, void @empty_17, i32 0, i32 0, void @empty_14, i32 0, i32 5000, void @empty_13, void @empty_12, void @empty_14, i32 16, i32 16, i32 16, i32 16, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 30 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i512 %conv_a, void @empty_24, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 31 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.36ns)   --->   "%store_ln0 = store i120 0, i120 %indvar_flatten33"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 33 [1/1] (0.36ns)   --->   "%store_ln0 = store i92 0, i92 %indvar_flatten12"   --->   Operation 33 'store' 'store_ln0' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 34 [1/1] (0.36ns)   --->   "%store_ln22 = store i32 0, i32 %r" [tools.cpp:22]   --->   Operation 34 'store' 'store_ln22' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 35 [1/1] (0.36ns)   --->   "%store_ln0 = store i60 0, i60 %indvar_flatten"   --->   Operation 35 'store' 'store_ln0' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 36 [1/1] (0.36ns)   --->   "%store_ln25 = store i32 0, i32 %c" [tools.cpp:25]   --->   Operation 36 'store' 'store_ln25' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 37 [1/1] (0.36ns)   --->   "%store_ln28 = store i28 0, i28 %n_1" [tools.cpp:28]   --->   Operation 37 'store' 'store_ln28' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 38 [1/1] (0.36ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 38 'br' 'br_ln0' <Predicate = true> <Delay = 0.36>

State 2 <SV = 1> <Delay = 5.06>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%first_iter_0 = phi i1 1, void %newFuncRoot, i1 0, void %for.inc.split"   --->   Operation 39 'phi' 'first_iter_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%n = load i28 %n_1" [tools.cpp:28]   --->   Operation 40 'load' 'n' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i60 %indvar_flatten" [tools.cpp:25]   --->   Operation 41 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%indvar_flatten12_load = load i92 %indvar_flatten12" [tools.cpp:22]   --->   Operation 42 'load' 'indvar_flatten12_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%indvar_flatten33_load = load i120 %indvar_flatten33" [tools.cpp:19]   --->   Operation 43 'load' 'indvar_flatten33_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (1.26ns)   --->   "%icmp_ln19 = icmp_eq  i120 %indvar_flatten33_load, i120 %bound17_read" [tools.cpp:19]   --->   Operation 44 'icmp' 'icmp_ln19' <Predicate = true> <Delay = 1.26> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (1.26ns)   --->   "%add_ln19 = add i120 %indvar_flatten33_load, i120 1" [tools.cpp:19]   --->   Operation 45 'add' 'add_ln19' <Predicate = true> <Delay = 1.26> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln19 = br i1 %icmp_ln19, void %for.inc26.loopexit, void %if.end.loopexit60.exitStub" [tools.cpp:19]   --->   Operation 46 'br' 'br_ln19' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%r_load = load i32 %r" [tools.cpp:19]   --->   Operation 47 'load' 'r_load' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.11ns)   --->   "%icmp_ln22 = icmp_eq  i92 %indvar_flatten12_load, i92 %bound4_read" [tools.cpp:22]   --->   Operation 48 'icmp' 'icmp_ln22' <Predicate = (!icmp_ln19)> <Delay = 1.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.21ns)   --->   "%select_ln19 = select i1 %icmp_ln22, i32 0, i32 %r_load" [tools.cpp:19]   --->   Operation 49 'select' 'select_ln19' <Predicate = (!icmp_ln19)> <Delay = 0.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node or_ln25)   --->   "%or_ln19 = or i1 %icmp_ln22, i1 %first_iter_0" [tools.cpp:19]   --->   Operation 50 'or' 'or_ln19' <Predicate = (!icmp_ln19)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.77ns)   --->   "%icmp_ln28 = icmp_eq  i28 %div_read, i28 0" [tools.cpp:28]   --->   Operation 51 'icmp' 'icmp_ln28' <Predicate = (!icmp_ln19)> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.77ns)   --->   "%icmp_ln28_1 = icmp_eq  i28 %n, i28 %div_read" [tools.cpp:28]   --->   Operation 52 'icmp' 'icmp_ln28_1' <Predicate = (!icmp_ln19)> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node select_ln22_1)   --->   "%select_ln19_1 = select i1 %icmp_ln22, i1 %icmp_ln28, i1 %icmp_ln28_1" [tools.cpp:19]   --->   Operation 53 'select' 'select_ln19_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.94ns)   --->   "%icmp_ln25 = icmp_eq  i60 %bound_read, i60 0" [tools.cpp:25]   --->   Operation 54 'icmp' 'icmp_ln25' <Predicate = (!icmp_ln19)> <Delay = 0.94> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.94ns)   --->   "%icmp_ln25_1 = icmp_eq  i60 %indvar_flatten_load, i60 %bound_read" [tools.cpp:25]   --->   Operation 55 'icmp' 'icmp_ln25_1' <Predicate = (!icmp_ln19)> <Delay = 0.94> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.25ns)   --->   "%select_ln19_2 = select i1 %icmp_ln22, i1 %icmp_ln25, i1 %icmp_ln25_1" [tools.cpp:19]   --->   Operation 56 'select' 'select_ln19_2' <Predicate = (!icmp_ln19)> <Delay = 0.25> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.79ns)   --->   "%r_4 = add i32 %select_ln19, i32 1" [tools.cpp:22]   --->   Operation 57 'add' 'r_4' <Predicate = (!icmp_ln19)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.11ns)   --->   "%or_ln22 = or i1 %select_ln19_2, i1 %icmp_ln22" [tools.cpp:22]   --->   Operation 58 'or' 'or_ln22' <Predicate = (!icmp_ln19)> <Delay = 0.11> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node or_ln25)   --->   "%or_ln22_1 = or i1 %select_ln19_2, i1 %or_ln19" [tools.cpp:22]   --->   Operation 59 'or' 'or_ln22_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.25ns) (out node of the LUT)   --->   "%select_ln22_1 = select i1 %select_ln19_2, i1 %icmp_ln28, i1 %select_ln19_1" [tools.cpp:22]   --->   Operation 60 'select' 'select_ln22_1' <Predicate = (!icmp_ln19)> <Delay = 0.25> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.21ns)   --->   "%select_ln22_2 = select i1 %select_ln19_2, i32 %r_4, i32 %select_ln19" [tools.cpp:22]   --->   Operation 61 'select' 'select_ln22_2' <Predicate = (!icmp_ln19)> <Delay = 0.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.11ns) (out node of the LUT)   --->   "%or_ln25 = or i1 %select_ln22_1, i1 %or_ln22_1" [tools.cpp:25]   --->   Operation 62 'or' 'or_ln25' <Predicate = (!icmp_ln19)> <Delay = 0.11> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (2.73ns)   --->   "%tmp = mul i32 %select_ln22_2, i32 %C_read" [tools.cpp:22]   --->   Operation 63 'mul' 'tmp' <Predicate = (!icmp_ln19)> <Delay = 2.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 2.73> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%br_ln28 = br i1 %or_ln25, void %for.inc.split, void %new.body.VITIS_LOOP_28_4" [tools.cpp:28]   --->   Operation 64 'br' 'br_ln28' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.77ns)   --->   "%add_ln28 = add i28 %n, i28 1" [tools.cpp:28]   --->   Operation 65 'add' 'add_ln28' <Predicate = (!icmp_ln19)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node select_ln28)   --->   "%or_ln28 = or i1 %select_ln22_1, i1 %select_ln19_2" [tools.cpp:28]   --->   Operation 66 'or' 'or_ln28' <Predicate = (!icmp_ln19)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node select_ln28)   --->   "%or_ln28_1 = or i1 %or_ln28, i1 %icmp_ln22" [tools.cpp:28]   --->   Operation 67 'or' 'or_ln28_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.30ns) (out node of the LUT)   --->   "%select_ln28 = select i1 %or_ln28_1, i28 1, i28 %add_ln28" [tools.cpp:28]   --->   Operation 68 'select' 'select_ln28' <Predicate = (!icmp_ln19)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.94ns)   --->   "%add_ln25_1 = add i60 %indvar_flatten_load, i60 1" [tools.cpp:25]   --->   Operation 69 'add' 'add_ln25_1' <Predicate = (!icmp_ln19)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.27ns)   --->   "%select_ln25_1 = select i1 %or_ln22, i60 1, i60 %add_ln25_1" [tools.cpp:25]   --->   Operation 70 'select' 'select_ln25_1' <Predicate = (!icmp_ln19)> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (1.11ns)   --->   "%add_ln22_1 = add i92 %indvar_flatten12_load, i92 1" [tools.cpp:22]   --->   Operation 71 'add' 'add_ln22_1' <Predicate = (!icmp_ln19)> <Delay = 1.11> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.34ns)   --->   "%select_ln22_3 = select i1 %icmp_ln22, i92 1, i92 %add_ln22_1" [tools.cpp:22]   --->   Operation 72 'select' 'select_ln22_3' <Predicate = (!icmp_ln19)> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.36ns)   --->   "%store_ln19 = store i120 %add_ln19, i120 %indvar_flatten33" [tools.cpp:19]   --->   Operation 73 'store' 'store_ln19' <Predicate = (!icmp_ln19)> <Delay = 0.36>
ST_2 : Operation 74 [1/1] (0.36ns)   --->   "%store_ln22 = store i92 %select_ln22_3, i92 %indvar_flatten12" [tools.cpp:22]   --->   Operation 74 'store' 'store_ln22' <Predicate = (!icmp_ln19)> <Delay = 0.36>
ST_2 : Operation 75 [1/1] (0.36ns)   --->   "%store_ln22 = store i32 %select_ln22_2, i32 %r" [tools.cpp:22]   --->   Operation 75 'store' 'store_ln22' <Predicate = (!icmp_ln19)> <Delay = 0.36>
ST_2 : Operation 76 [1/1] (0.36ns)   --->   "%store_ln25 = store i60 %select_ln25_1, i60 %indvar_flatten" [tools.cpp:25]   --->   Operation 76 'store' 'store_ln25' <Predicate = (!icmp_ln19)> <Delay = 0.36>
ST_2 : Operation 77 [1/1] (0.36ns)   --->   "%store_ln28 = store i28 %select_ln28, i28 %n_1" [tools.cpp:28]   --->   Operation 77 'store' 'store_ln28' <Predicate = (!icmp_ln19)> <Delay = 0.36>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%br_ln28 = br void %for.inc" [tools.cpp:28]   --->   Operation 78 'br' 'br_ln28' <Predicate = (!icmp_ln19)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 5.68>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%c_load = load i32 %c" [tools.cpp:22]   --->   Operation 79 'load' 'c_load' <Predicate = (!or_ln22)> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.21ns)   --->   "%select_ln22 = select i1 %or_ln22, i32 0, i32 %c_load" [tools.cpp:22]   --->   Operation 80 'select' 'select_ln22' <Predicate = true> <Delay = 0.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 81 [1/1] (0.79ns)   --->   "%c_2 = add i32 %select_ln22, i32 1" [tools.cpp:25]   --->   Operation 81 'add' 'c_2' <Predicate = (select_ln22_1)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 82 [1/1] (0.21ns)   --->   "%select_ln25 = select i1 %select_ln22_1, i32 %c_2, i32 %select_ln22" [tools.cpp:25]   --->   Operation 82 'select' 'select_ln25' <Predicate = true> <Delay = 0.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 83 [1/1] (2.73ns)   --->   "%empty_1060 = mul i32 %tmp, i32 %N_read" [tools.cpp:22]   --->   Operation 83 'mul' 'empty_1060' <Predicate = true> <Delay = 2.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 2.73> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_s = partselect i28 @_ssdm_op_PartSelect.i28.i32.i32.i32, i32 %empty_1060, i32 4, i32 31" [tools.cpp:25]   --->   Operation 84 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln25 = zext i28 %tmp_s" [tools.cpp:25]   --->   Operation 85 'zext' 'zext_ln25' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (2.73ns)   --->   "%empty_1061 = mul i32 %select_ln25, i32 %N_read" [tools.cpp:25]   --->   Operation 86 'mul' 'empty_1061' <Predicate = true> <Delay = 2.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 2.73> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i28 @_ssdm_op_PartSelect.i28.i32.i32.i32, i32 %empty_1061, i32 4, i32 31" [tools.cpp:25]   --->   Operation 87 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%p_cast5 = zext i28 %tmp_3" [tools.cpp:25]   --->   Operation 88 'zext' 'p_cast5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.77ns)   --->   "%empty_1062 = add i29 %p_cast5, i29 %zext_ln25" [tools.cpp:25]   --->   Operation 89 'add' 'empty_1062' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_4 = bitconcatenate i35 @_ssdm_op_BitConcatenate.i35.i29.i6, i29 %empty_1062, i6 0" [tools.cpp:25]   --->   Operation 90 'bitconcatenate' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%p_cast9 = zext i35 %tmp_4" [tools.cpp:25]   --->   Operation 91 'zext' 'p_cast9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.96ns)   --->   "%empty_1063 = add i64 %p_cast9, i64 %A_read" [tools.cpp:25]   --->   Operation 92 'add' 'empty_1063' <Predicate = true> <Delay = 0.96> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i58 @_ssdm_op_PartSelect.i58.i64.i32.i32, i64 %empty_1063, i32 6, i32 63" [tools.cpp:28]   --->   Operation 93 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.36ns)   --->   "%store_ln25 = store i32 %select_ln25, i32 %c" [tools.cpp:25]   --->   Operation 94 'store' 'store_ln25' <Predicate = (!icmp_ln19)> <Delay = 0.36>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 95 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_19_1_VITIS_LOOP_22_2_VITIS_LOOP_25_3_VITIS_LOOP_28_4_str"   --->   Operation 95 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 96 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 256, i64 256, i64 256"   --->   Operation 96 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 97 [1/1] (0.00ns)   --->   "%sext_ln28 = sext i58 %trunc_ln" [tools.cpp:28]   --->   Operation 97 'sext' 'sext_ln28' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%A_BUS_addr = getelementptr i512 %A_BUS, i64 %sext_ln28" [tools.cpp:28]   --->   Operation 98 'getelementptr' 'A_BUS_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 99 [8/8] (7.30ns)   --->   "%empty_1059 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i512, i512 %A_BUS_addr, i32 %p_cast" [tools.cpp:28]   --->   Operation 99 'readreq' 'empty_1059' <Predicate = (or_ln25)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 100 [7/8] (7.30ns)   --->   "%empty_1059 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i512, i512 %A_BUS_addr, i32 %p_cast" [tools.cpp:28]   --->   Operation 100 'readreq' 'empty_1059' <Predicate = (or_ln25)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 101 [6/8] (7.30ns)   --->   "%empty_1059 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i512, i512 %A_BUS_addr, i32 %p_cast" [tools.cpp:28]   --->   Operation 101 'readreq' 'empty_1059' <Predicate = (or_ln25)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 102 [5/8] (7.30ns)   --->   "%empty_1059 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i512, i512 %A_BUS_addr, i32 %p_cast" [tools.cpp:28]   --->   Operation 102 'readreq' 'empty_1059' <Predicate = (or_ln25)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 103 [4/8] (7.30ns)   --->   "%empty_1059 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i512, i512 %A_BUS_addr, i32 %p_cast" [tools.cpp:28]   --->   Operation 103 'readreq' 'empty_1059' <Predicate = (or_ln25)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 104 [3/8] (7.30ns)   --->   "%empty_1059 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i512, i512 %A_BUS_addr, i32 %p_cast" [tools.cpp:28]   --->   Operation 104 'readreq' 'empty_1059' <Predicate = (or_ln25)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 105 [2/8] (7.30ns)   --->   "%empty_1059 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i512, i512 %A_BUS_addr, i32 %p_cast" [tools.cpp:28]   --->   Operation 105 'readreq' 'empty_1059' <Predicate = (or_ln25)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 106 [1/8] (7.30ns)   --->   "%empty_1059 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i512, i512 %A_BUS_addr, i32 %p_cast" [tools.cpp:28]   --->   Operation 106 'readreq' 'empty_1059' <Predicate = (or_ln25)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 107 [1/1] (0.00ns)   --->   "%br_ln28 = br void %for.inc.split" [tools.cpp:28]   --->   Operation 107 'br' 'br_ln28' <Predicate = (or_ln25)> <Delay = 0.00>

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 108 [1/1] (7.30ns)   --->   "%A_BUS_addr_read = read i512 @_ssdm_op_Read.m_axi.p1i512, i512 %A_BUS_addr" [tools.cpp:32]   --->   Operation 108 'read' 'A_BUS_addr_read' <Predicate = (!icmp_ln19)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 111 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 111 'ret' 'ret_ln0' <Predicate = (icmp_ln19)> <Delay = 0.00>

State 13 <SV = 12> <Delay = 1.46>
ST_13 : Operation 109 [1/1] (0.00ns)   --->   "%specpipeline_ln30 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_14" [tools.cpp:30]   --->   Operation 109 'specpipeline' 'specpipeline_ln30' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_13 : Operation 110 [1/1] (1.46ns)   --->   "%write_ln32 = write void @_ssdm_op_Write.ap_fifo.volatile.i512P0A, i512 %conv_a, i512 %A_BUS_addr_read" [tools.cpp:32]   --->   Operation 110 'write' 'write_ln32' <Predicate = (!icmp_ln19)> <Delay = 1.46> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 1.46> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 512> <Depth = 128> <FIFO>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.362ns
The critical path consists of the following:
	'alloca' operation 120 bit ('indvar_flatten33') [16]  (0.000 ns)
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'indvar_flatten33' [28]  (0.362 ns)

 <State 2>: 5.061ns
The critical path consists of the following:
	'load' operation 92 bit ('indvar_flatten12_load', tools.cpp:22) on local variable 'indvar_flatten12' [39]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln22', tools.cpp:22) [49]  (1.112 ns)
	'select' operation 32 bit ('select_ln19', tools.cpp:19) [50]  (0.213 ns)
	'add' operation 32 bit ('r_4', tools.cpp:22) [58]  (0.793 ns)
	'select' operation 32 bit ('select_ln22_2', tools.cpp:22) [63]  (0.213 ns)
	'mul' operation 32 bit ('tmp', tools.cpp:22) [67]  (2.730 ns)

 <State 3>: 5.686ns
The critical path consists of the following:
	'load' operation 32 bit ('c_load', tools.cpp:22) on local variable 'c', tools.cpp:25 [45]  (0.000 ns)
	'select' operation 32 bit ('select_ln22', tools.cpp:22) [60]  (0.213 ns)
	'add' operation 32 bit ('c_2', tools.cpp:25) [64]  (0.793 ns)
	'select' operation 32 bit ('select_ln25', tools.cpp:25) [66]  (0.213 ns)
	'mul' operation 32 bit ('empty_1061', tools.cpp:25) [71]  (2.730 ns)
	'add' operation 29 bit ('empty_1062', tools.cpp:25) [74]  (0.774 ns)
	'add' operation 64 bit ('empty_1063', tools.cpp:25) [77]  (0.963 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation 512 bit ('A_BUS_addr', tools.cpp:28) [80]  (0.000 ns)
	bus request operation ('empty_1059', tools.cpp:28) on port 'A_BUS' (tools.cpp:28) [83]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_1059', tools.cpp:28) on port 'A_BUS' (tools.cpp:28) [83]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_1059', tools.cpp:28) on port 'A_BUS' (tools.cpp:28) [83]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_1059', tools.cpp:28) on port 'A_BUS' (tools.cpp:28) [83]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_1059', tools.cpp:28) on port 'A_BUS' (tools.cpp:28) [83]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_1059', tools.cpp:28) on port 'A_BUS' (tools.cpp:28) [83]  (7.300 ns)

 <State 10>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_1059', tools.cpp:28) on port 'A_BUS' (tools.cpp:28) [83]  (7.300 ns)

 <State 11>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_1059', tools.cpp:28) on port 'A_BUS' (tools.cpp:28) [83]  (7.300 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	bus read operation ('A_BUS_addr_read', tools.cpp:32) on port 'A_BUS' (tools.cpp:32) [87]  (7.300 ns)

 <State 13>: 1.466ns
The critical path consists of the following:
	fifo write operation ('write_ln32', tools.cpp:32) on port 'conv_a' (tools.cpp:32) [88]  (1.466 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
