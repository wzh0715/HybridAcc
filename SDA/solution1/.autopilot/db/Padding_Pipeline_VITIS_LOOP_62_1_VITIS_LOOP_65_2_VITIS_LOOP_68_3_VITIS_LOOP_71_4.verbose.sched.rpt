

================================================================
== Vitis HLS Report for 'Padding_Pipeline_VITIS_LOOP_62_1_VITIS_LOOP_65_2_VITIS_LOOP_68_3_VITIS_LOOP_71_4'
================================================================
* Date:           Mon Mar 10 15:35:50 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        SDA
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplusHBM
* Target device:  xcvu35p_CIV-fsvh2892-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.965 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      326|      326|  3.260 us|  3.260 us|  326|  326|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                             Loop Name                             |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_62_1_VITIS_LOOP_65_2_VITIS_LOOP_68_3_VITIS_LOOP_71_4  |      324|      324|         2|          1|          1|   324|       yes|
        +-------------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.36>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%k = alloca i32 1" [tools.cpp:71]   --->   Operation 5 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%x = alloca i32 1" [tools.cpp:68]   --->   Operation 6 'alloca' 'x' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 7 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%y = alloca i32 1" [tools.cpp:65]   --->   Operation 8 'alloca' 'y' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%indvar_flatten12 = alloca i32 1"   --->   Operation 9 'alloca' 'indvar_flatten12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten33 = alloca i32 1"   --->   Operation 10 'alloca' 'indvar_flatten33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i512 %conv_a, void @empty_24, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 11 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i512 %conv3_samepad, void @empty_24, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%add18_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %add18" [tools.cpp:57]   --->   Operation 13 'read' 'add18_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%add23_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %add23" [tools.cpp:57]   --->   Operation 14 'read' 'add23_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%P_3_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %P_3" [tools.cpp:57]   --->   Operation 15 'read' 'P_3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%bound_read = read i60 @_ssdm_op_Read.ap_auto.i60, i60 %bound" [tools.cpp:57]   --->   Operation 16 'read' 'bound_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%div13_cast_read = read i28 @_ssdm_op_Read.ap_auto.i28, i28 %div13_cast" [tools.cpp:57]   --->   Operation 17 'read' 'div13_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%bound4_read = read i92 @_ssdm_op_Read.ap_auto.i92, i92 %bound4" [tools.cpp:57]   --->   Operation 18 'read' 'bound4_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%bound17_read = read i120 @_ssdm_op_Read.ap_auto.i120, i120 %bound17" [tools.cpp:57]   --->   Operation 19 'read' 'bound17_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.36ns)   --->   "%store_ln0 = store i120 0, i120 %indvar_flatten33"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 21 [1/1] (0.36ns)   --->   "%store_ln0 = store i92 0, i92 %indvar_flatten12"   --->   Operation 21 'store' 'store_ln0' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 22 [1/1] (0.36ns)   --->   "%store_ln65 = store i32 0, i32 %y" [tools.cpp:65]   --->   Operation 22 'store' 'store_ln65' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 23 [1/1] (0.36ns)   --->   "%store_ln0 = store i60 0, i60 %indvar_flatten"   --->   Operation 23 'store' 'store_ln0' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 24 [1/1] (0.36ns)   --->   "%store_ln68 = store i32 0, i32 %x" [tools.cpp:68]   --->   Operation 24 'store' 'store_ln68' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 25 [1/1] (0.36ns)   --->   "%store_ln71 = store i28 0, i28 %k" [tools.cpp:71]   --->   Operation 25 'store' 'store_ln71' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body16"   --->   Operation 26 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.96>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%k_2 = load i28 %k" [tools.cpp:71]   --->   Operation 27 'load' 'k_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i60 %indvar_flatten" [tools.cpp:68]   --->   Operation 28 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%indvar_flatten12_load = load i92 %indvar_flatten12" [tools.cpp:65]   --->   Operation 29 'load' 'indvar_flatten12_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%indvar_flatten33_load = load i120 %indvar_flatten33" [tools.cpp:62]   --->   Operation 30 'load' 'indvar_flatten33_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (1.26ns)   --->   "%icmp_ln62 = icmp_eq  i120 %indvar_flatten33_load, i120 %bound17_read" [tools.cpp:62]   --->   Operation 31 'icmp' 'icmp_ln62' <Predicate = true> <Delay = 1.26> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (1.26ns)   --->   "%add_ln62 = add i120 %indvar_flatten33_load, i120 1" [tools.cpp:62]   --->   Operation 32 'add' 'add_ln62' <Predicate = true> <Delay = 1.26> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln62 = br i1 %icmp_ln62, void %for.inc34.loopexit, void %return.loopexit.exitStub" [tools.cpp:62]   --->   Operation 33 'br' 'br_ln62' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%x_load = load i32 %x" [tools.cpp:65]   --->   Operation 34 'load' 'x_load' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%y_load = load i32 %y" [tools.cpp:62]   --->   Operation 35 'load' 'y_load' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_62_1_VITIS_LOOP_65_2_VITIS_LOOP_68_3_VITIS_LOOP_71_4_str"   --->   Operation 36 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 324, i64 324, i64 324"   --->   Operation 37 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (1.11ns)   --->   "%icmp_ln65 = icmp_eq  i92 %indvar_flatten12_load, i92 %bound4_read" [tools.cpp:65]   --->   Operation 38 'icmp' 'icmp_ln65' <Predicate = (!icmp_ln62)> <Delay = 1.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.21ns)   --->   "%select_ln62 = select i1 %icmp_ln65, i32 0, i32 %y_load" [tools.cpp:62]   --->   Operation 39 'select' 'select_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.77ns)   --->   "%icmp_ln71 = icmp_eq  i28 %div13_cast_read, i28 0" [tools.cpp:71]   --->   Operation 40 'icmp' 'icmp_ln71' <Predicate = (!icmp_ln62)> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.77ns)   --->   "%icmp_ln71_1 = icmp_eq  i28 %k_2, i28 %div13_cast_read" [tools.cpp:71]   --->   Operation 41 'icmp' 'icmp_ln71_1' <Predicate = (!icmp_ln62)> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_1)   --->   "%select_ln62_1 = select i1 %icmp_ln65, i1 %icmp_ln71, i1 %icmp_ln71_1" [tools.cpp:62]   --->   Operation 42 'select' 'select_ln62_1' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.94ns)   --->   "%icmp_ln68 = icmp_eq  i60 %bound_read, i60 0" [tools.cpp:68]   --->   Operation 43 'icmp' 'icmp_ln68' <Predicate = (!icmp_ln62)> <Delay = 0.94> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.94ns)   --->   "%icmp_ln68_1 = icmp_eq  i60 %indvar_flatten_load, i60 %bound_read" [tools.cpp:68]   --->   Operation 44 'icmp' 'icmp_ln68_1' <Predicate = (!icmp_ln62)> <Delay = 0.94> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.25ns)   --->   "%select_ln62_2 = select i1 %icmp_ln65, i1 %icmp_ln68, i1 %icmp_ln68_1" [tools.cpp:62]   --->   Operation 45 'select' 'select_ln62_2' <Predicate = (!icmp_ln62)> <Delay = 0.25> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.79ns)   --->   "%y_2 = add i32 %select_ln62, i32 1" [tools.cpp:65]   --->   Operation 46 'add' 'y_2' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.11ns)   --->   "%or_ln65 = or i1 %select_ln62_2, i1 %icmp_ln65" [tools.cpp:65]   --->   Operation 47 'or' 'or_ln65' <Predicate = (!icmp_ln62)> <Delay = 0.11> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.21ns)   --->   "%select_ln65 = select i1 %or_ln65, i32 0, i32 %x_load" [tools.cpp:65]   --->   Operation 48 'select' 'select_ln65' <Predicate = (!icmp_ln62)> <Delay = 0.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.25ns) (out node of the LUT)   --->   "%select_ln65_1 = select i1 %select_ln62_2, i1 %icmp_ln71, i1 %select_ln62_1" [tools.cpp:65]   --->   Operation 49 'select' 'select_ln65_1' <Predicate = (!icmp_ln62)> <Delay = 0.25> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.21ns)   --->   "%select_ln65_2 = select i1 %select_ln62_2, i32 %y_2, i32 %select_ln62" [tools.cpp:65]   --->   Operation 50 'select' 'select_ln65_2' <Predicate = (!icmp_ln62)> <Delay = 0.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.79ns)   --->   "%x_2 = add i32 %select_ln65, i32 1" [tools.cpp:68]   --->   Operation 51 'add' 'x_2' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.21ns)   --->   "%select_ln68 = select i1 %select_ln65_1, i32 %x_2, i32 %select_ln65" [tools.cpp:68]   --->   Operation 52 'select' 'select_ln68' <Predicate = (!icmp_ln62)> <Delay = 0.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.79ns)   --->   "%cmp21 = icmp_ult  i32 %select_ln65_2, i32 %P_3_read" [tools.cpp:65]   --->   Operation 53 'icmp' 'cmp21' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.79ns)   --->   "%ult = icmp_ult  i32 %select_ln65_2, i32 %add23_read" [tools.cpp:65]   --->   Operation 54 'icmp' 'ult' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node brmerge11)   --->   "%rev = xor i1 %ult, i1 1" [tools.cpp:65]   --->   Operation 55 'xor' 'rev' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node brmerge11)   --->   "%tmp1 = or i1 %cmp21, i1 %rev" [tools.cpp:65]   --->   Operation 56 'or' 'tmp1' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.79ns)   --->   "%cmp17 = icmp_ult  i32 %select_ln68, i32 %P_3_read" [tools.cpp:68]   --->   Operation 57 'icmp' 'cmp17' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.79ns)   --->   "%ult13 = icmp_ult  i32 %select_ln68, i32 %add18_read" [tools.cpp:68]   --->   Operation 58 'icmp' 'ult13' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node brmerge11)   --->   "%rev14 = xor i1 %ult13, i1 1" [tools.cpp:68]   --->   Operation 59 'xor' 'rev14' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node brmerge11)   --->   "%tmp = or i1 %rev14, i1 %cmp17" [tools.cpp:68]   --->   Operation 60 'or' 'tmp' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.11ns) (out node of the LUT)   --->   "%brmerge11 = or i1 %tmp, i1 %tmp1" [tools.cpp:68]   --->   Operation 61 'or' 'brmerge11' <Predicate = (!icmp_ln62)> <Delay = 0.11> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%specpipeline_ln71 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_14" [tools.cpp:71]   --->   Operation 62 'specpipeline' 'specpipeline_ln71' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.36ns)   --->   "%br_ln74 = br i1 %brmerge11, void %if.else, void %for.inc" [tools.cpp:74]   --->   Operation 63 'br' 'br_ln74' <Predicate = (!icmp_ln62)> <Delay = 0.36>
ST_2 : Operation 64 [1/1] (0.77ns)   --->   "%add_ln71 = add i28 %k_2, i28 1" [tools.cpp:71]   --->   Operation 64 'add' 'add_ln71' <Predicate = (!icmp_ln62)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node k_3)   --->   "%or_ln71 = or i1 %select_ln65_1, i1 %select_ln62_2" [tools.cpp:71]   --->   Operation 65 'or' 'or_ln71' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node k_3)   --->   "%or_ln71_1 = or i1 %or_ln71, i1 %icmp_ln65" [tools.cpp:71]   --->   Operation 66 'or' 'or_ln71_1' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.30ns) (out node of the LUT)   --->   "%k_3 = select i1 %or_ln71_1, i28 1, i28 %add_ln71" [tools.cpp:71]   --->   Operation 67 'select' 'k_3' <Predicate = (!icmp_ln62)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.94ns)   --->   "%add_ln68_1 = add i60 %indvar_flatten_load, i60 1" [tools.cpp:68]   --->   Operation 68 'add' 'add_ln68_1' <Predicate = (!icmp_ln62)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.27ns)   --->   "%select_ln68_1 = select i1 %or_ln65, i60 1, i60 %add_ln68_1" [tools.cpp:68]   --->   Operation 69 'select' 'select_ln68_1' <Predicate = (!icmp_ln62)> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (1.11ns)   --->   "%add_ln65_1 = add i92 %indvar_flatten12_load, i92 1" [tools.cpp:65]   --->   Operation 70 'add' 'add_ln65_1' <Predicate = (!icmp_ln62)> <Delay = 1.11> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.34ns)   --->   "%select_ln65_3 = select i1 %icmp_ln65, i92 1, i92 %add_ln65_1" [tools.cpp:65]   --->   Operation 71 'select' 'select_ln65_3' <Predicate = (!icmp_ln62)> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.36ns)   --->   "%store_ln62 = store i120 %add_ln62, i120 %indvar_flatten33" [tools.cpp:62]   --->   Operation 72 'store' 'store_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.36>
ST_2 : Operation 73 [1/1] (0.36ns)   --->   "%store_ln65 = store i92 %select_ln65_3, i92 %indvar_flatten12" [tools.cpp:65]   --->   Operation 73 'store' 'store_ln65' <Predicate = (!icmp_ln62)> <Delay = 0.36>
ST_2 : Operation 74 [1/1] (0.36ns)   --->   "%store_ln65 = store i32 %select_ln65_2, i32 %y" [tools.cpp:65]   --->   Operation 74 'store' 'store_ln65' <Predicate = (!icmp_ln62)> <Delay = 0.36>
ST_2 : Operation 75 [1/1] (0.36ns)   --->   "%store_ln68 = store i60 %select_ln68_1, i60 %indvar_flatten" [tools.cpp:68]   --->   Operation 75 'store' 'store_ln68' <Predicate = (!icmp_ln62)> <Delay = 0.36>
ST_2 : Operation 76 [1/1] (0.36ns)   --->   "%store_ln68 = store i32 %select_ln68, i32 %x" [tools.cpp:68]   --->   Operation 76 'store' 'store_ln68' <Predicate = (!icmp_ln62)> <Delay = 0.36>
ST_2 : Operation 77 [1/1] (0.36ns)   --->   "%store_ln71 = store i28 %k_3, i28 %k" [tools.cpp:71]   --->   Operation 77 'store' 'store_ln71' <Predicate = (!icmp_ln62)> <Delay = 0.36>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 83 'ret' 'ret_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.19>
ST_3 : Operation 78 [1/1] (1.46ns)   --->   "%conv_a_read = read i512 @_ssdm_op_Read.ap_fifo.volatile.i512P0A, i512 %conv_a" [tools.cpp:80]   --->   Operation 78 'read' 'conv_a_read' <Predicate = (!icmp_ln62 & !brmerge11)> <Delay = 1.46> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 1.46> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 512> <Depth = 128> <FIFO>
ST_3 : Operation 79 [1/1] (0.36ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 79 'br' 'br_ln0' <Predicate = (!icmp_ln62 & !brmerge11)> <Delay = 0.36>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%outData = phi i512 %conv_a_read, void %if.else, i512 0, void %for.inc34.loopexit" [tools.cpp:80]   --->   Operation 80 'phi' 'outData' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (1.36ns)   --->   "%write_ln82 = write void @_ssdm_op_Write.ap_fifo.volatile.i512P0A, i512 %conv3_samepad, i512 %outData" [tools.cpp:82]   --->   Operation 81 'write' 'write_ln82' <Predicate = true> <Delay = 1.36> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 1.36> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 512> <Depth = 8> <FIFO>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%br_ln71 = br void %for.body16" [tools.cpp:71]   --->   Operation 82 'br' 'br_ln71' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.362ns
The critical path consists of the following:
	'alloca' operation 120 bit ('indvar_flatten33') [15]  (0.000 ns)
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'indvar_flatten33' [25]  (0.362 ns)

 <State 2>: 3.965ns
The critical path consists of the following:
	'load' operation 92 bit ('indvar_flatten12_load', tools.cpp:65) on local variable 'indvar_flatten12' [35]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln65', tools.cpp:65) [45]  (1.112 ns)
	'select' operation 1 bit ('select_ln62_2', tools.cpp:62) [52]  (0.255 ns)
	'or' operation 1 bit ('or_ln65', tools.cpp:65) [54]  (0.112 ns)
	'select' operation 32 bit ('select_ln65', tools.cpp:65) [55]  (0.213 ns)
	'add' operation 32 bit ('x_2', tools.cpp:68) [58]  (0.793 ns)
	'select' operation 32 bit ('select_ln68', tools.cpp:68) [59]  (0.213 ns)
	'icmp' operation 1 bit ('cmp17', tools.cpp:68) [64]  (0.793 ns)
	'or' operation 1 bit ('tmp', tools.cpp:68) [67]  (0.000 ns)
	'or' operation 1 bit ('brmerge11', tools.cpp:68) [68]  (0.112 ns)
	multiplexor before 'phi' operation 512 bit ('outData', tools.cpp:80) with incoming values : ('conv_a_read', tools.cpp:80) [75]  (0.362 ns)

 <State 3>: 3.195ns
The critical path consists of the following:
	fifo read operation ('conv_a_read', tools.cpp:80) on port 'conv_a' (tools.cpp:80) [72]  (1.466 ns)
	multiplexor before 'phi' operation 512 bit ('outData', tools.cpp:80) with incoming values : ('conv_a_read', tools.cpp:80) [75]  (0.362 ns)
	'phi' operation 512 bit ('outData', tools.cpp:80) with incoming values : ('conv_a_read', tools.cpp:80) [75]  (0.000 ns)
	fifo write operation ('write_ln82', tools.cpp:82) on port 'conv3_samepad' (tools.cpp:82) [76]  (1.367 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
