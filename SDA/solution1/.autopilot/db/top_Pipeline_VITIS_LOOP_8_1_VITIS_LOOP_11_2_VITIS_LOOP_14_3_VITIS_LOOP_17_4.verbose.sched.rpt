

================================================================
== Vitis HLS Report for 'top_Pipeline_VITIS_LOOP_8_1_VITIS_LOOP_11_2_VITIS_LOOP_14_3_VITIS_LOOP_17_4'
================================================================
* Date:           Tue Feb 25 14:23:46 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        SDA
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplusHBM
* Target device:  xcvu35p_CIV-fsvh2892-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     1036|     1036|  10.360 us|  10.360 us|  1036|  1036|       no|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                             Loop Name                            |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_8_1_VITIS_LOOP_11_2_VITIS_LOOP_14_3_VITIS_LOOP_17_4  |     1034|     1034|        12|          1|          1|  1024|       yes|
        +------------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 13


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 1
  Pipeline-0 : II = 1, D = 13, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.36>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%n = alloca i32 1" [tools.cpp:17->top.cpp:42]   --->   Operation 15 'alloca' 'n' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%c = alloca i32 1" [tools.cpp:14->top.cpp:42]   --->   Operation 16 'alloca' 'c' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 17 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%r = alloca i32 1" [tools.cpp:11->top.cpp:42]   --->   Operation 18 'alloca' 'r' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%indvar_flatten12 = alloca i32 1"   --->   Operation 19 'alloca' 'indvar_flatten12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%indvar_flatten33 = alloca i32 1"   --->   Operation 20 'alloca' 'indvar_flatten33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%Conv_MM_A_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %Conv_MM_A"   --->   Operation 21 'read' 'Conv_MM_A_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%N_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %N"   --->   Operation 22 'read' 'N_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%C_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %C"   --->   Operation 23 'read' 'C_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%mul_ln25_5_read = read i60 @_ssdm_op_Read.ap_auto.i60, i60 %mul_ln25_5"   --->   Operation 24 'read' 'mul_ln25_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%lshr_ln_read = read i28 @_ssdm_op_Read.ap_auto.i28, i28 %lshr_ln"   --->   Operation 25 'read' 'lshr_ln_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%mul_ln25_6_read = read i92 @_ssdm_op_Read.ap_auto.i92, i92 %mul_ln25_6"   --->   Operation 26 'read' 'mul_ln25_6_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln25_read = read i28 @_ssdm_op_Read.ap_auto.i28, i28 %zext_ln25"   --->   Operation 27 'read' 'zext_ln25_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%mul_ln25_7_read = read i120 @_ssdm_op_Read.ap_auto.i120, i120 %mul_ln25_7"   --->   Operation 28 'read' 'mul_ln25_7_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln25_cast = zext i28 %zext_ln25_read"   --->   Operation 29 'zext' 'zext_ln25_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i128 %conv_a, void @empty_21, i32 0, i32 0, void @empty_12, i32 0, i32 0, void @empty_12, void @empty_12, void @empty_12, i32 0, i32 0, i32 0, i32 0, void @empty_12, void @empty_12, i32 4294967295, i32 0"   --->   Operation 30 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i128 %A_BUS, void @empty_20, i32 0, i32 0, void @empty_12, i32 0, i32 5000, void @empty_11, void @empty_10, void @empty_12, i32 16, i32 16, i32 16, i32 16, void @empty_12, void @empty_12, i32 4294967295, i32 0"   --->   Operation 31 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.36ns)   --->   "%store_ln0 = store i120 0, i120 %indvar_flatten33"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 33 [1/1] (0.36ns)   --->   "%store_ln0 = store i92 0, i92 %indvar_flatten12"   --->   Operation 33 'store' 'store_ln0' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 34 [1/1] (0.36ns)   --->   "%store_ln11 = store i32 0, i32 %r" [tools.cpp:11->top.cpp:42]   --->   Operation 34 'store' 'store_ln11' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 35 [1/1] (0.36ns)   --->   "%store_ln0 = store i60 0, i60 %indvar_flatten"   --->   Operation 35 'store' 'store_ln0' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 36 [1/1] (0.36ns)   --->   "%store_ln14 = store i32 0, i32 %c" [tools.cpp:14->top.cpp:42]   --->   Operation 36 'store' 'store_ln14' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 37 [1/1] (0.36ns)   --->   "%store_ln17 = store i28 0, i28 %n" [tools.cpp:17->top.cpp:42]   --->   Operation 37 'store' 'store_ln17' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 38 [1/1] (0.36ns)   --->   "%br_ln0 = br void %for.inc.i"   --->   Operation 38 'br' 'br_ln0' <Predicate = true> <Delay = 0.36>

State 2 <SV = 1> <Delay = 5.06>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%first_iter_0 = phi i1 1, void %newFuncRoot, i1 0, void %for.inc.i.split"   --->   Operation 39 'phi' 'first_iter_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%n_1 = load i28 %n" [tools.cpp:17->top.cpp:42]   --->   Operation 40 'load' 'n_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i60 %indvar_flatten" [tools.cpp:14->top.cpp:42]   --->   Operation 41 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%indvar_flatten12_load = load i92 %indvar_flatten12" [tools.cpp:11->top.cpp:42]   --->   Operation 42 'load' 'indvar_flatten12_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%indvar_flatten33_load = load i120 %indvar_flatten33" [tools.cpp:8->top.cpp:42]   --->   Operation 43 'load' 'indvar_flatten33_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i128 %A_BUS"   --->   Operation 44 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (1.26ns)   --->   "%icmp_ln8 = icmp_eq  i120 %indvar_flatten33_load, i120 %mul_ln25_7_read" [tools.cpp:8->top.cpp:42]   --->   Operation 45 'icmp' 'icmp_ln8' <Predicate = true> <Delay = 1.26> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (1.26ns)   --->   "%add_ln8 = add i120 %indvar_flatten33_load, i120 1" [tools.cpp:8->top.cpp:42]   --->   Operation 46 'add' 'add_ln8' <Predicate = true> <Delay = 1.26> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln8 = br i1 %icmp_ln8, void %for.inc26.i.loopexit, void %_Z20ConvertInputToStreamP7ap_uintILi128EERN3hls6streamIS0_Li0EEES5_bjjjj.exit.loopexit98.exitStub" [tools.cpp:8->top.cpp:42]   --->   Operation 47 'br' 'br_ln8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%r_load = load i32 %r" [tools.cpp:8->top.cpp:42]   --->   Operation 48 'load' 'r_load' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (1.11ns)   --->   "%icmp_ln11 = icmp_eq  i92 %indvar_flatten12_load, i92 %mul_ln25_6_read" [tools.cpp:11->top.cpp:42]   --->   Operation 49 'icmp' 'icmp_ln11' <Predicate = (!icmp_ln8)> <Delay = 1.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.21ns)   --->   "%select_ln8 = select i1 %icmp_ln11, i32 0, i32 %r_load" [tools.cpp:8->top.cpp:42]   --->   Operation 50 'select' 'select_ln8' <Predicate = (!icmp_ln8)> <Delay = 0.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node or_ln14)   --->   "%or_ln8 = or i1 %icmp_ln11, i1 %first_iter_0" [tools.cpp:8->top.cpp:42]   --->   Operation 51 'or' 'or_ln8' <Predicate = (!icmp_ln8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.77ns)   --->   "%icmp_ln17 = icmp_eq  i28 %lshr_ln_read, i28 0" [tools.cpp:17->top.cpp:42]   --->   Operation 52 'icmp' 'icmp_ln17' <Predicate = (!icmp_ln8)> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.77ns)   --->   "%icmp_ln17_1 = icmp_eq  i28 %n_1, i28 %lshr_ln_read" [tools.cpp:17->top.cpp:42]   --->   Operation 53 'icmp' 'icmp_ln17_1' <Predicate = (!icmp_ln8)> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node select_ln11_1)   --->   "%select_ln8_1 = select i1 %icmp_ln11, i1 %icmp_ln17, i1 %icmp_ln17_1" [tools.cpp:8->top.cpp:42]   --->   Operation 54 'select' 'select_ln8_1' <Predicate = (!icmp_ln8)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.94ns)   --->   "%icmp_ln14 = icmp_eq  i60 %mul_ln25_5_read, i60 0" [tools.cpp:14->top.cpp:42]   --->   Operation 55 'icmp' 'icmp_ln14' <Predicate = (!icmp_ln8)> <Delay = 0.94> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.94ns)   --->   "%icmp_ln14_1 = icmp_eq  i60 %indvar_flatten_load, i60 %mul_ln25_5_read" [tools.cpp:14->top.cpp:42]   --->   Operation 56 'icmp' 'icmp_ln14_1' <Predicate = (!icmp_ln8)> <Delay = 0.94> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.25ns)   --->   "%select_ln8_2 = select i1 %icmp_ln11, i1 %icmp_ln14, i1 %icmp_ln14_1" [tools.cpp:8->top.cpp:42]   --->   Operation 57 'select' 'select_ln8_2' <Predicate = (!icmp_ln8)> <Delay = 0.25> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.79ns)   --->   "%r_2 = add i32 %select_ln8, i32 1" [tools.cpp:11->top.cpp:42]   --->   Operation 58 'add' 'r_2' <Predicate = (!icmp_ln8)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.11ns)   --->   "%or_ln11 = or i1 %select_ln8_2, i1 %icmp_ln11" [tools.cpp:11->top.cpp:42]   --->   Operation 59 'or' 'or_ln11' <Predicate = (!icmp_ln8)> <Delay = 0.11> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node or_ln14)   --->   "%or_ln11_1 = or i1 %select_ln8_2, i1 %or_ln8" [tools.cpp:11->top.cpp:42]   --->   Operation 60 'or' 'or_ln11_1' <Predicate = (!icmp_ln8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.25ns) (out node of the LUT)   --->   "%select_ln11_1 = select i1 %select_ln8_2, i1 %icmp_ln17, i1 %select_ln8_1" [tools.cpp:11->top.cpp:42]   --->   Operation 61 'select' 'select_ln11_1' <Predicate = (!icmp_ln8)> <Delay = 0.25> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.21ns)   --->   "%select_ln11_2 = select i1 %select_ln8_2, i32 %r_2, i32 %select_ln8" [tools.cpp:11->top.cpp:42]   --->   Operation 62 'select' 'select_ln11_2' <Predicate = (!icmp_ln8)> <Delay = 0.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.11ns) (out node of the LUT)   --->   "%or_ln14 = or i1 %select_ln11_1, i1 %or_ln11_1" [tools.cpp:14->top.cpp:42]   --->   Operation 63 'or' 'or_ln14' <Predicate = (!icmp_ln8)> <Delay = 0.11> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (2.73ns)   --->   "%tmp7 = mul i32 %select_ln11_2, i32 %C_read" [tools.cpp:11->top.cpp:42]   --->   Operation 64 'mul' 'tmp7' <Predicate = (!icmp_ln8)> <Delay = 2.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 2.73> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%br_ln17 = br i1 %or_ln14, void %for.inc.i.split, void %new.body.VITIS_LOOP_17_4.i" [tools.cpp:17->top.cpp:42]   --->   Operation 65 'br' 'br_ln17' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.77ns)   --->   "%add_ln17 = add i28 %n_1, i28 1" [tools.cpp:17->top.cpp:42]   --->   Operation 66 'add' 'add_ln17' <Predicate = (!icmp_ln8)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node select_ln17)   --->   "%or_ln17 = or i1 %select_ln11_1, i1 %select_ln8_2" [tools.cpp:17->top.cpp:42]   --->   Operation 67 'or' 'or_ln17' <Predicate = (!icmp_ln8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node select_ln17)   --->   "%or_ln17_1 = or i1 %or_ln17, i1 %icmp_ln11" [tools.cpp:17->top.cpp:42]   --->   Operation 68 'or' 'or_ln17_1' <Predicate = (!icmp_ln8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.30ns) (out node of the LUT)   --->   "%select_ln17 = select i1 %or_ln17_1, i28 1, i28 %add_ln17" [tools.cpp:17->top.cpp:42]   --->   Operation 69 'select' 'select_ln17' <Predicate = (!icmp_ln8)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.94ns)   --->   "%add_ln14_1 = add i60 %indvar_flatten_load, i60 1" [tools.cpp:14->top.cpp:42]   --->   Operation 70 'add' 'add_ln14_1' <Predicate = (!icmp_ln8)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.27ns)   --->   "%select_ln14_1 = select i1 %or_ln11, i60 1, i60 %add_ln14_1" [tools.cpp:14->top.cpp:42]   --->   Operation 71 'select' 'select_ln14_1' <Predicate = (!icmp_ln8)> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (1.11ns)   --->   "%add_ln11_1 = add i92 %indvar_flatten12_load, i92 1" [tools.cpp:11->top.cpp:42]   --->   Operation 72 'add' 'add_ln11_1' <Predicate = (!icmp_ln8)> <Delay = 1.11> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.34ns)   --->   "%select_ln11_3 = select i1 %icmp_ln11, i92 1, i92 %add_ln11_1" [tools.cpp:11->top.cpp:42]   --->   Operation 73 'select' 'select_ln11_3' <Predicate = (!icmp_ln8)> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.36ns)   --->   "%store_ln8 = store i120 %add_ln8, i120 %indvar_flatten33" [tools.cpp:8->top.cpp:42]   --->   Operation 74 'store' 'store_ln8' <Predicate = (!icmp_ln8)> <Delay = 0.36>
ST_2 : Operation 75 [1/1] (0.36ns)   --->   "%store_ln11 = store i92 %select_ln11_3, i92 %indvar_flatten12" [tools.cpp:11->top.cpp:42]   --->   Operation 75 'store' 'store_ln11' <Predicate = (!icmp_ln8)> <Delay = 0.36>
ST_2 : Operation 76 [1/1] (0.36ns)   --->   "%store_ln11 = store i32 %select_ln11_2, i32 %r" [tools.cpp:11->top.cpp:42]   --->   Operation 76 'store' 'store_ln11' <Predicate = (!icmp_ln8)> <Delay = 0.36>
ST_2 : Operation 77 [1/1] (0.36ns)   --->   "%store_ln14 = store i60 %select_ln14_1, i60 %indvar_flatten" [tools.cpp:14->top.cpp:42]   --->   Operation 77 'store' 'store_ln14' <Predicate = (!icmp_ln8)> <Delay = 0.36>
ST_2 : Operation 78 [1/1] (0.36ns)   --->   "%store_ln17 = store i28 %select_ln17, i28 %n" [tools.cpp:17->top.cpp:42]   --->   Operation 78 'store' 'store_ln17' <Predicate = (!icmp_ln8)> <Delay = 0.36>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%br_ln17 = br void %for.inc.i" [tools.cpp:17->top.cpp:42]   --->   Operation 79 'br' 'br_ln17' <Predicate = (!icmp_ln8)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 5.68>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%c_load = load i32 %c" [tools.cpp:11->top.cpp:42]   --->   Operation 80 'load' 'c_load' <Predicate = (!or_ln11)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.21ns)   --->   "%select_ln11 = select i1 %or_ln11, i32 0, i32 %c_load" [tools.cpp:11->top.cpp:42]   --->   Operation 81 'select' 'select_ln11' <Predicate = true> <Delay = 0.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 82 [1/1] (0.79ns)   --->   "%c_2 = add i32 %select_ln11, i32 1" [tools.cpp:14->top.cpp:42]   --->   Operation 82 'add' 'c_2' <Predicate = (select_ln11_1)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 83 [1/1] (0.21ns)   --->   "%select_ln14 = select i1 %select_ln11_1, i32 %c_2, i32 %select_ln11" [tools.cpp:14->top.cpp:42]   --->   Operation 83 'select' 'select_ln14' <Predicate = true> <Delay = 0.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 84 [1/1] (2.73ns)   --->   "%empty_37 = mul i32 %tmp7, i32 %N_read" [tools.cpp:11->top.cpp:42]   --->   Operation 84 'mul' 'empty_37' <Predicate = true> <Delay = 2.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 2.73> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_s = partselect i28 @_ssdm_op_PartSelect.i28.i32.i32.i32, i32 %empty_37, i32 4, i32 31" [tools.cpp:14->top.cpp:42]   --->   Operation 85 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i28 %tmp_s" [tools.cpp:14->top.cpp:42]   --->   Operation 86 'zext' 'zext_ln14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (2.73ns)   --->   "%empty_38 = mul i32 %select_ln14, i32 %N_read" [tools.cpp:14->top.cpp:42]   --->   Operation 87 'mul' 'empty_38' <Predicate = true> <Delay = 2.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 2.73> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i28 @_ssdm_op_PartSelect.i28.i32.i32.i32, i32 %empty_38, i32 4, i32 31" [tools.cpp:14->top.cpp:42]   --->   Operation 88 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%p_cast11 = zext i28 %tmp_1" [tools.cpp:14->top.cpp:42]   --->   Operation 89 'zext' 'p_cast11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.77ns)   --->   "%empty_39 = add i29 %p_cast11, i29 %zext_ln14" [tools.cpp:14->top.cpp:42]   --->   Operation 90 'add' 'empty_39' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_2 = bitconcatenate i33 @_ssdm_op_BitConcatenate.i33.i29.i4, i29 %empty_39, i4 0" [tools.cpp:14->top.cpp:42]   --->   Operation 91 'bitconcatenate' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%p_cast15 = zext i33 %tmp_2" [tools.cpp:14->top.cpp:42]   --->   Operation 92 'zext' 'p_cast15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.96ns)   --->   "%empty_40 = add i64 %p_cast15, i64 %Conv_MM_A_read" [tools.cpp:14->top.cpp:42]   --->   Operation 93 'add' 'empty_40' <Predicate = true> <Delay = 0.96> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i60 @_ssdm_op_PartSelect.i60.i64.i32.i32, i64 %empty_40, i32 4, i32 63" [tools.cpp:17->top.cpp:42]   --->   Operation 94 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.36ns)   --->   "%store_ln14 = store i32 %select_ln14, i32 %c" [tools.cpp:14->top.cpp:42]   --->   Operation 95 'store' 'store_ln14' <Predicate = (!icmp_ln8)> <Delay = 0.36>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 96 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_8_1_VITIS_LOOP_11_2_VITIS_LOOP_14_3_VITIS_LOOP_17_4_str"   --->   Operation 96 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 97 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 1024, i64 1024, i64 1024"   --->   Operation 97 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%sext_ln17 = sext i60 %trunc_ln2" [tools.cpp:17->top.cpp:42]   --->   Operation 98 'sext' 'sext_ln17' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%A_BUS_addr = getelementptr i128 %A_BUS, i64 %sext_ln17" [tools.cpp:17->top.cpp:42]   --->   Operation 99 'getelementptr' 'A_BUS_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 100 [8/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i128, i128 %A_BUS_addr, i32 %zext_ln25_cast" [tools.cpp:17->top.cpp:42]   --->   Operation 100 'readreq' 'empty' <Predicate = (or_ln14)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 101 [7/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i128, i128 %A_BUS_addr, i32 %zext_ln25_cast" [tools.cpp:17->top.cpp:42]   --->   Operation 101 'readreq' 'empty' <Predicate = (or_ln14)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 102 [6/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i128, i128 %A_BUS_addr, i32 %zext_ln25_cast" [tools.cpp:17->top.cpp:42]   --->   Operation 102 'readreq' 'empty' <Predicate = (or_ln14)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 103 [5/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i128, i128 %A_BUS_addr, i32 %zext_ln25_cast" [tools.cpp:17->top.cpp:42]   --->   Operation 103 'readreq' 'empty' <Predicate = (or_ln14)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 104 [4/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i128, i128 %A_BUS_addr, i32 %zext_ln25_cast" [tools.cpp:17->top.cpp:42]   --->   Operation 104 'readreq' 'empty' <Predicate = (or_ln14)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 105 [3/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i128, i128 %A_BUS_addr, i32 %zext_ln25_cast" [tools.cpp:17->top.cpp:42]   --->   Operation 105 'readreq' 'empty' <Predicate = (or_ln14)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 106 [2/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i128, i128 %A_BUS_addr, i32 %zext_ln25_cast" [tools.cpp:17->top.cpp:42]   --->   Operation 106 'readreq' 'empty' <Predicate = (or_ln14)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 107 [1/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i128, i128 %A_BUS_addr, i32 %zext_ln25_cast" [tools.cpp:17->top.cpp:42]   --->   Operation 107 'readreq' 'empty' <Predicate = (or_ln14)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 108 [1/1] (0.00ns)   --->   "%br_ln17 = br void %for.inc.i.split" [tools.cpp:17->top.cpp:42]   --->   Operation 108 'br' 'br_ln17' <Predicate = (or_ln14)> <Delay = 0.00>

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 109 [1/1] (7.30ns)   --->   "%A_BUS_addr_read = read i128 @_ssdm_op_Read.m_axi.p1i128, i128 %A_BUS_addr" [tools.cpp:21->top.cpp:42]   --->   Operation 109 'read' 'A_BUS_addr_read' <Predicate = (!icmp_ln8)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 112 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 112 'ret' 'ret_ln0' <Predicate = (icmp_ln8)> <Delay = 0.00>

State 13 <SV = 12> <Delay = 1.46>
ST_13 : Operation 110 [1/1] (0.00ns)   --->   "%specpipeline_ln19 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_12" [tools.cpp:19->top.cpp:42]   --->   Operation 110 'specpipeline' 'specpipeline_ln19' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_13 : Operation 111 [1/1] (1.46ns)   --->   "%write_ln22 = write void @_ssdm_op_Write.ap_fifo.volatile.i128P0A, i128 %conv_a, i128 %A_BUS_addr_read" [tools.cpp:22->top.cpp:42]   --->   Operation 111 'write' 'write_ln22' <Predicate = (!icmp_ln8)> <Delay = 1.46> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 1.46> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 128> <Depth = 128> <FIFO>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.362ns
The critical path consists of the following:
	'alloca' operation 120 bit ('indvar_flatten33') [16]  (0.000 ns)
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'indvar_flatten33' [28]  (0.362 ns)

 <State 2>: 5.061ns
The critical path consists of the following:
	'load' operation 92 bit ('indvar_flatten12_load', tools.cpp:11->top.cpp:42) on local variable 'indvar_flatten12' [39]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln11', tools.cpp:11->top.cpp:42) [50]  (1.112 ns)
	'select' operation 32 bit ('select_ln8', tools.cpp:8->top.cpp:42) [51]  (0.213 ns)
	'add' operation 32 bit ('r_2', tools.cpp:11->top.cpp:42) [59]  (0.793 ns)
	'select' operation 32 bit ('select_ln11_2', tools.cpp:11->top.cpp:42) [64]  (0.213 ns)
	'mul' operation 32 bit ('tmp7', tools.cpp:11->top.cpp:42) [68]  (2.730 ns)

 <State 3>: 5.686ns
The critical path consists of the following:
	'load' operation 32 bit ('c_load', tools.cpp:11->top.cpp:42) on local variable 'c', tools.cpp:14->top.cpp:42 [46]  (0.000 ns)
	'select' operation 32 bit ('select_ln11', tools.cpp:11->top.cpp:42) [61]  (0.213 ns)
	'add' operation 32 bit ('c_2', tools.cpp:14->top.cpp:42) [65]  (0.793 ns)
	'select' operation 32 bit ('select_ln14', tools.cpp:14->top.cpp:42) [67]  (0.213 ns)
	'mul' operation 32 bit ('empty_38', tools.cpp:14->top.cpp:42) [72]  (2.730 ns)
	'add' operation 29 bit ('empty_39', tools.cpp:14->top.cpp:42) [75]  (0.774 ns)
	'add' operation 64 bit ('empty_40', tools.cpp:14->top.cpp:42) [78]  (0.963 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation 128 bit ('A_BUS_addr', tools.cpp:17->top.cpp:42) [81]  (0.000 ns)
	bus request operation ('empty', tools.cpp:17->top.cpp:42) on port 'A_BUS' (tools.cpp:17->top.cpp:42) [84]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', tools.cpp:17->top.cpp:42) on port 'A_BUS' (tools.cpp:17->top.cpp:42) [84]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', tools.cpp:17->top.cpp:42) on port 'A_BUS' (tools.cpp:17->top.cpp:42) [84]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', tools.cpp:17->top.cpp:42) on port 'A_BUS' (tools.cpp:17->top.cpp:42) [84]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', tools.cpp:17->top.cpp:42) on port 'A_BUS' (tools.cpp:17->top.cpp:42) [84]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', tools.cpp:17->top.cpp:42) on port 'A_BUS' (tools.cpp:17->top.cpp:42) [84]  (7.300 ns)

 <State 10>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', tools.cpp:17->top.cpp:42) on port 'A_BUS' (tools.cpp:17->top.cpp:42) [84]  (7.300 ns)

 <State 11>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', tools.cpp:17->top.cpp:42) on port 'A_BUS' (tools.cpp:17->top.cpp:42) [84]  (7.300 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	bus read operation ('A_BUS_addr_read', tools.cpp:21->top.cpp:42) on port 'A_BUS' (tools.cpp:21->top.cpp:42) [88]  (7.300 ns)

 <State 13>: 1.466ns
The critical path consists of the following:
	fifo write operation ('write_ln22', tools.cpp:22->top.cpp:42) on port 'conv_a' (tools.cpp:22->top.cpp:42) [89]  (1.466 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
