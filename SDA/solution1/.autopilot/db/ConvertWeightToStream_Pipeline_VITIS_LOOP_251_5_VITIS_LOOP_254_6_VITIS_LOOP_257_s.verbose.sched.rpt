

================================================================
== Vitis HLS Report for 'ConvertWeightToStream_Pipeline_VITIS_LOOP_251_5_VITIS_LOOP_254_6_VITIS_LOOP_257_s'
================================================================
* Date:           Mon Mar 10 15:35:51 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        SDA
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplusHBM
* Target device:  xcvu35p_CIV-fsvh2892-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       27|       27|  0.270 us|  0.270 us|   27|   27|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                      |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                       Loop Name                      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_251_5_VITIS_LOOP_254_6_VITIS_LOOP_257_7  |       25|       25|        11|          1|          1|    16|       yes|
        +------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 12


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 12
* Pipeline : 1
  Pipeline-0 : II = 1, D = 12, States = { 1 2 3 4 5 6 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.36>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%n = alloca i32 1" [tools.cpp:257]   --->   Operation 14 'alloca' 'n' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%m = alloca i32 1" [tools.cpp:254]   --->   Operation 15 'alloca' 'm' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%indvar_flatten41 = alloca i32 1"   --->   Operation 16 'alloca' 'indvar_flatten41' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%indvar_flatten53 = alloca i32 1"   --->   Operation 17 'alloca' 'indvar_flatten53' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i512 %MM_BUS, void @empty_17, i32 0, i32 0, void @empty_14, i32 0, i32 5000, void @empty_10, void @empty_12, void @empty_14, i32 16, i32 16, i32 16, i32 16, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i512 %fifo_mm_w, void @empty_24, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 19 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%MM_Weight_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %MM_Weight" [tools.cpp:224]   --->   Operation 20 'read' 'MM_Weight_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%bound39_read = read i60 @_ssdm_op_Read.ap_auto.i60, i60 %bound39" [tools.cpp:224]   --->   Operation 21 'read' 'bound39_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%N_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %N" [tools.cpp:224]   --->   Operation 22 'read' 'N_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%bound46_read = read i88 @_ssdm_op_Read.ap_auto.i88, i88 %bound46" [tools.cpp:224]   --->   Operation 23 'read' 'bound46_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.36ns)   --->   "%store_ln0 = store i88 0, i88 %indvar_flatten53"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 25 [1/1] (0.36ns)   --->   "%store_ln0 = store i60 0, i60 %indvar_flatten41"   --->   Operation 25 'store' 'store_ln0' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 26 [1/1] (0.36ns)   --->   "%store_ln254 = store i28 0, i28 %m" [tools.cpp:254]   --->   Operation 26 'store' 'store_ln254' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 27 [1/1] (0.36ns)   --->   "%store_ln257 = store i32 0, i32 %n" [tools.cpp:257]   --->   Operation 27 'store' 'store_ln257' <Predicate = true> <Delay = 0.36>
ST_1 : Operation 28 [1/1] (0.36ns)   --->   "%br_ln0 = br void %for.inc65"   --->   Operation 28 'br' 'br_ln0' <Predicate = true> <Delay = 0.36>

State 2 <SV = 1> <Delay = 6.01>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%first_iter_3 = phi i1 1, void %newFuncRoot, i1 0, void %for.inc65.split"   --->   Operation 29 'phi' 'first_iter_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%n_1 = load i32 %n" [tools.cpp:257]   --->   Operation 30 'load' 'n_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%indvar_flatten41_load = load i60 %indvar_flatten41" [tools.cpp:254]   --->   Operation 31 'load' 'indvar_flatten41_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%indvar_flatten53_load = load i88 %indvar_flatten53" [tools.cpp:251]   --->   Operation 32 'load' 'indvar_flatten53_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (1.09ns)   --->   "%icmp_ln251 = icmp_eq  i88 %indvar_flatten53_load, i88 %bound46_read" [tools.cpp:251]   --->   Operation 33 'icmp' 'icmp_ln251' <Predicate = true> <Delay = 1.09> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (1.09ns)   --->   "%add_ln251 = add i88 %indvar_flatten53_load, i88 1" [tools.cpp:251]   --->   Operation 34 'add' 'add_ln251' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln251 = br i1 %icmp_ln251, void %for.inc71.loopexit, void %if.end.loopexit.exitStub" [tools.cpp:251]   --->   Operation 35 'br' 'br_ln251' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%m_load = load i28 %m" [tools.cpp:251]   --->   Operation 36 'load' 'm_load' <Predicate = (!icmp_ln251)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.94ns)   --->   "%icmp_ln254 = icmp_eq  i60 %indvar_flatten41_load, i60 %bound39_read" [tools.cpp:254]   --->   Operation 37 'icmp' 'icmp_ln254' <Predicate = (!icmp_ln251)> <Delay = 0.94> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.30ns)   --->   "%select_ln251 = select i1 %icmp_ln254, i28 0, i28 %m_load" [tools.cpp:251]   --->   Operation 38 'select' 'select_ln251' <Predicate = (!icmp_ln251)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node or_ln254)   --->   "%or_ln251 = or i1 %icmp_ln254, i1 %first_iter_3" [tools.cpp:251]   --->   Operation 39 'or' 'or_ln251' <Predicate = (!icmp_ln251)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.79ns)   --->   "%icmp_ln257 = icmp_eq  i32 %N_read, i32 0" [tools.cpp:257]   --->   Operation 40 'icmp' 'icmp_ln257' <Predicate = (!icmp_ln251)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.79ns)   --->   "%icmp_ln257_1 = icmp_eq  i32 %n_1, i32 %N_read" [tools.cpp:257]   --->   Operation 41 'icmp' 'icmp_ln257_1' <Predicate = (!icmp_ln251)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.25ns)   --->   "%select_ln251_1 = select i1 %icmp_ln254, i1 %icmp_ln257, i1 %icmp_ln257_1" [tools.cpp:251]   --->   Operation 42 'select' 'select_ln251_1' <Predicate = (!icmp_ln251)> <Delay = 0.25> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.77ns)   --->   "%add_ln254 = add i28 %select_ln251, i28 1" [tools.cpp:254]   --->   Operation 43 'add' 'add_ln254' <Predicate = (!icmp_ln251)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.11ns) (out node of the LUT)   --->   "%or_ln254 = or i1 %select_ln251_1, i1 %or_ln251" [tools.cpp:254]   --->   Operation 44 'or' 'or_ln254' <Predicate = (!icmp_ln251)> <Delay = 0.11> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.30ns)   --->   "%select_ln254 = select i1 %select_ln251_1, i28 %add_ln254, i28 %select_ln251" [tools.cpp:254]   --->   Operation 45 'select' 'select_ln254' <Predicate = (!icmp_ln251)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%m_2_cast = zext i28 %select_ln254" [tools.cpp:254]   --->   Operation 46 'zext' 'm_2_cast' <Predicate = (!icmp_ln251)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (2.73ns)   --->   "%empty_1050 = mul i32 %m_2_cast, i32 %N_read" [tools.cpp:254]   --->   Operation 47 'mul' 'empty_1050' <Predicate = (!icmp_ln251)> <Delay = 2.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 2.73> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i38 @_ssdm_op_BitConcatenate.i38.i32.i6, i32 %empty_1050, i6 0" [tools.cpp:254]   --->   Operation 48 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln251)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%p_cast7 = zext i38 %tmp_s" [tools.cpp:254]   --->   Operation 49 'zext' 'p_cast7' <Predicate = (!icmp_ln251)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.96ns)   --->   "%empty_1051 = add i64 %p_cast7, i64 %MM_Weight_read" [tools.cpp:254]   --->   Operation 50 'add' 'empty_1051' <Predicate = (!icmp_ln251)> <Delay = 0.96> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%trunc_ln9 = partselect i58 @_ssdm_op_PartSelect.i58.i64.i32.i32, i64 %empty_1051, i32 6, i32 63" [tools.cpp:257]   --->   Operation 51 'partselect' 'trunc_ln9' <Predicate = (!icmp_ln251)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln257 = br i1 %or_ln254, void %for.inc65.split, void %for.first.iter.for.inc65" [tools.cpp:257]   --->   Operation 52 'br' 'br_ln257' <Predicate = (!icmp_ln251)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.79ns)   --->   "%add_ln257 = add i32 %n_1, i32 1" [tools.cpp:257]   --->   Operation 53 'add' 'add_ln257' <Predicate = (!icmp_ln251)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node select_ln257)   --->   "%or_ln257 = or i1 %select_ln251_1, i1 %icmp_ln254" [tools.cpp:257]   --->   Operation 54 'or' 'or_ln257' <Predicate = (!icmp_ln251)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.11> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.21ns) (out node of the LUT)   --->   "%select_ln257 = select i1 %or_ln257, i32 1, i32 %add_ln257" [tools.cpp:257]   --->   Operation 55 'select' 'select_ln257' <Predicate = (!icmp_ln251)> <Delay = 0.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.94ns)   --->   "%add_ln254_1 = add i60 %indvar_flatten41_load, i60 1" [tools.cpp:254]   --->   Operation 56 'add' 'add_ln254_1' <Predicate = (!icmp_ln251)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.27ns)   --->   "%select_ln254_1 = select i1 %icmp_ln254, i60 1, i60 %add_ln254_1" [tools.cpp:254]   --->   Operation 57 'select' 'select_ln254_1' <Predicate = (!icmp_ln251)> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.36ns)   --->   "%store_ln251 = store i88 %add_ln251, i88 %indvar_flatten53" [tools.cpp:251]   --->   Operation 58 'store' 'store_ln251' <Predicate = (!icmp_ln251)> <Delay = 0.36>
ST_2 : Operation 59 [1/1] (0.36ns)   --->   "%store_ln254 = store i60 %select_ln254_1, i60 %indvar_flatten41" [tools.cpp:254]   --->   Operation 59 'store' 'store_ln254' <Predicate = (!icmp_ln251)> <Delay = 0.36>
ST_2 : Operation 60 [1/1] (0.36ns)   --->   "%store_ln254 = store i28 %select_ln254, i28 %m" [tools.cpp:254]   --->   Operation 60 'store' 'store_ln254' <Predicate = (!icmp_ln251)> <Delay = 0.36>
ST_2 : Operation 61 [1/1] (0.36ns)   --->   "%store_ln257 = store i32 %select_ln257, i32 %n" [tools.cpp:257]   --->   Operation 61 'store' 'store_ln257' <Predicate = (!icmp_ln251)> <Delay = 0.36>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%br_ln257 = br void %for.inc65" [tools.cpp:257]   --->   Operation 62 'br' 'br_ln257' <Predicate = (!icmp_ln251)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_251_5_VITIS_LOOP_254_6_VITIS_LOOP_257_7_str"   --->   Operation 63 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 16, i64 16, i64 16"   --->   Operation 64 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%sext_ln257 = sext i58 %trunc_ln9" [tools.cpp:257]   --->   Operation 65 'sext' 'sext_ln257' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%MM_BUS_addr = getelementptr i512 %MM_BUS, i64 %sext_ln257" [tools.cpp:257]   --->   Operation 66 'getelementptr' 'MM_BUS_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 67 [8/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i512, i512 %MM_BUS_addr, i32 %N_read" [tools.cpp:257]   --->   Operation 67 'readreq' 'empty' <Predicate = (or_ln254)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 68 [7/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i512, i512 %MM_BUS_addr, i32 %N_read" [tools.cpp:257]   --->   Operation 68 'readreq' 'empty' <Predicate = (or_ln254)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 69 [6/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i512, i512 %MM_BUS_addr, i32 %N_read" [tools.cpp:257]   --->   Operation 69 'readreq' 'empty' <Predicate = (or_ln254)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 70 [5/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i512, i512 %MM_BUS_addr, i32 %N_read" [tools.cpp:257]   --->   Operation 70 'readreq' 'empty' <Predicate = (or_ln254)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 71 [4/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i512, i512 %MM_BUS_addr, i32 %N_read" [tools.cpp:257]   --->   Operation 71 'readreq' 'empty' <Predicate = (or_ln254)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 72 [3/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i512, i512 %MM_BUS_addr, i32 %N_read" [tools.cpp:257]   --->   Operation 72 'readreq' 'empty' <Predicate = (or_ln254)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 73 [2/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i512, i512 %MM_BUS_addr, i32 %N_read" [tools.cpp:257]   --->   Operation 73 'readreq' 'empty' <Predicate = (or_ln254)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 74 [1/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i512, i512 %MM_BUS_addr, i32 %N_read" [tools.cpp:257]   --->   Operation 74 'readreq' 'empty' <Predicate = (or_ln254)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 75 [1/1] (0.00ns)   --->   "%br_ln257 = br void %for.inc65.split" [tools.cpp:257]   --->   Operation 75 'br' 'br_ln257' <Predicate = (or_ln254)> <Delay = 0.00>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 76 [1/1] (7.30ns)   --->   "%MM_BUS_addr_read = read i512 @_ssdm_op_Read.m_axi.p1i512, i512 %MM_BUS_addr" [tools.cpp:261]   --->   Operation 76 'read' 'MM_BUS_addr_read' <Predicate = (!icmp_ln251)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 79 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 79 'ret' 'ret_ln0' <Predicate = (icmp_ln251)> <Delay = 0.00>

State 12 <SV = 11> <Delay = 1.46>
ST_12 : Operation 77 [1/1] (0.00ns)   --->   "%specpipeline_ln260 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_14" [tools.cpp:260]   --->   Operation 77 'specpipeline' 'specpipeline_ln260' <Predicate = (!icmp_ln251)> <Delay = 0.00>
ST_12 : Operation 78 [1/1] (1.46ns)   --->   "%write_ln262 = write void @_ssdm_op_Write.ap_fifo.volatile.i512P0A, i512 %fifo_mm_w, i512 %MM_BUS_addr_read" [tools.cpp:262]   --->   Operation 78 'write' 'write_ln262' <Predicate = (!icmp_ln251)> <Delay = 1.46> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 1.46> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 512> <Depth = 128> <FIFO>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.362ns
The critical path consists of the following:
	'alloca' operation 88 bit ('indvar_flatten53') [10]  (0.000 ns)
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'indvar_flatten53' [17]  (0.362 ns)

 <State 2>: 6.013ns
The critical path consists of the following:
	'load' operation 60 bit ('indvar_flatten41_load', tools.cpp:254) on local variable 'indvar_flatten41' [25]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln254', tools.cpp:254) [34]  (0.944 ns)
	'select' operation 28 bit ('select_ln251', tools.cpp:251) [35]  (0.301 ns)
	'add' operation 28 bit ('add_ln254', tools.cpp:254) [40]  (0.774 ns)
	'select' operation 28 bit ('select_ln254', tools.cpp:254) [42]  (0.301 ns)
	'mul' operation 32 bit ('empty_1050', tools.cpp:254) [44]  (2.730 ns)
	'add' operation 64 bit ('empty_1051', tools.cpp:254) [47]  (0.963 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation 512 bit ('MM_BUS_addr', tools.cpp:257) [50]  (0.000 ns)
	bus request operation ('empty', tools.cpp:257) on port 'MM_BUS' (tools.cpp:257) [53]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', tools.cpp:257) on port 'MM_BUS' (tools.cpp:257) [53]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', tools.cpp:257) on port 'MM_BUS' (tools.cpp:257) [53]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', tools.cpp:257) on port 'MM_BUS' (tools.cpp:257) [53]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', tools.cpp:257) on port 'MM_BUS' (tools.cpp:257) [53]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', tools.cpp:257) on port 'MM_BUS' (tools.cpp:257) [53]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', tools.cpp:257) on port 'MM_BUS' (tools.cpp:257) [53]  (7.300 ns)

 <State 10>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', tools.cpp:257) on port 'MM_BUS' (tools.cpp:257) [53]  (7.300 ns)

 <State 11>: 7.300ns
The critical path consists of the following:
	bus read operation ('MM_BUS_addr_read', tools.cpp:261) on port 'MM_BUS' (tools.cpp:261) [57]  (7.300 ns)

 <State 12>: 1.466ns
The critical path consists of the following:
	fifo write operation ('write_ln262', tools.cpp:262) on port 'fifo_mm_w' (tools.cpp:262) [58]  (1.466 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
