-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_top_Pipeline_VITIS_LOOP_192_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    mm_a_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    mm_a_empty_n : IN STD_LOGIC;
    mm_a_read : OUT STD_LOGIC;
    conv3_sild_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    conv3_sild_empty_n : IN STD_LOGIC;
    conv3_sild_read : OUT STD_LOGIC;
    fifo_SA_A_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_SA_A_full_n : IN STD_LOGIC;
    fifo_SA_A_write : OUT STD_LOGIC;
    fifo_SA_A_16_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_SA_A_16_full_n : IN STD_LOGIC;
    fifo_SA_A_16_write : OUT STD_LOGIC;
    fifo_SA_A_17_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_SA_A_17_full_n : IN STD_LOGIC;
    fifo_SA_A_17_write : OUT STD_LOGIC;
    fifo_SA_A_18_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_SA_A_18_full_n : IN STD_LOGIC;
    fifo_SA_A_18_write : OUT STD_LOGIC;
    fifo_SA_A_19_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_SA_A_19_full_n : IN STD_LOGIC;
    fifo_SA_A_19_write : OUT STD_LOGIC;
    fifo_SA_A_20_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_SA_A_20_full_n : IN STD_LOGIC;
    fifo_SA_A_20_write : OUT STD_LOGIC;
    fifo_SA_A_21_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_SA_A_21_full_n : IN STD_LOGIC;
    fifo_SA_A_21_write : OUT STD_LOGIC;
    fifo_SA_A_22_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_SA_A_22_full_n : IN STD_LOGIC;
    fifo_SA_A_22_write : OUT STD_LOGIC;
    fifo_SA_A_23_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_SA_A_23_full_n : IN STD_LOGIC;
    fifo_SA_A_23_write : OUT STD_LOGIC;
    fifo_SA_A_24_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_SA_A_24_full_n : IN STD_LOGIC;
    fifo_SA_A_24_write : OUT STD_LOGIC;
    fifo_SA_A_25_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_SA_A_25_full_n : IN STD_LOGIC;
    fifo_SA_A_25_write : OUT STD_LOGIC;
    fifo_SA_A_26_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_SA_A_26_full_n : IN STD_LOGIC;
    fifo_SA_A_26_write : OUT STD_LOGIC;
    fifo_SA_A_27_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_SA_A_27_full_n : IN STD_LOGIC;
    fifo_SA_A_27_write : OUT STD_LOGIC;
    fifo_SA_A_28_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_SA_A_28_full_n : IN STD_LOGIC;
    fifo_SA_A_28_write : OUT STD_LOGIC;
    fifo_SA_A_29_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_SA_A_29_full_n : IN STD_LOGIC;
    fifo_SA_A_29_write : OUT STD_LOGIC;
    fifo_SA_A_30_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_SA_A_30_full_n : IN STD_LOGIC;
    fifo_SA_A_30_write : OUT STD_LOGIC;
    num_a_sa_089 : IN STD_LOGIC_VECTOR (31 downto 0);
    mode : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of top_top_Pipeline_VITIS_LOOP_192_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln192_reg_321 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op37_read_state2 : BOOLEAN;
    signal ap_predicate_op39_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln192_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal fifo_SA_A_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal fifo_SA_A_16_blk_n : STD_LOGIC;
    signal fifo_SA_A_17_blk_n : STD_LOGIC;
    signal fifo_SA_A_18_blk_n : STD_LOGIC;
    signal fifo_SA_A_19_blk_n : STD_LOGIC;
    signal fifo_SA_A_20_blk_n : STD_LOGIC;
    signal fifo_SA_A_21_blk_n : STD_LOGIC;
    signal fifo_SA_A_22_blk_n : STD_LOGIC;
    signal fifo_SA_A_23_blk_n : STD_LOGIC;
    signal fifo_SA_A_24_blk_n : STD_LOGIC;
    signal fifo_SA_A_25_blk_n : STD_LOGIC;
    signal fifo_SA_A_26_blk_n : STD_LOGIC;
    signal fifo_SA_A_27_blk_n : STD_LOGIC;
    signal fifo_SA_A_28_blk_n : STD_LOGIC;
    signal fifo_SA_A_29_blk_n : STD_LOGIC;
    signal fifo_SA_A_30_blk_n : STD_LOGIC;
    signal conv3_sild_blk_n : STD_LOGIC;
    signal mm_a_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_phi_mux_temp_2_phi_fu_227_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp0_iter1_temp_2_reg_224 : STD_LOGIC_VECTOR (127 downto 0);
    signal rep_fu_84 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rep_4_fu_249_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_rep_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln206_fu_260_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component top_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    rep_fu_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln192_fu_243_p2 = ap_const_lv1_0))) then 
                    rep_fu_84 <= rep_4_fu_249_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    rep_fu_84 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln192_reg_321 <= icmp_ln192_fu_243_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state2_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state2_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state2_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(mm_a_empty_n, ap_predicate_op37_read_state2, conv3_sild_empty_n, ap_predicate_op39_read_state2, fifo_SA_A_full_n, fifo_SA_A_16_full_n, fifo_SA_A_17_full_n, fifo_SA_A_18_full_n, fifo_SA_A_19_full_n, fifo_SA_A_20_full_n, fifo_SA_A_21_full_n, fifo_SA_A_22_full_n, fifo_SA_A_23_full_n, fifo_SA_A_24_full_n, fifo_SA_A_25_full_n, fifo_SA_A_26_full_n, fifo_SA_A_27_full_n, fifo_SA_A_28_full_n, fifo_SA_A_29_full_n, fifo_SA_A_30_full_n)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((fifo_SA_A_22_full_n = ap_const_logic_0) or (fifo_SA_A_21_full_n = ap_const_logic_0) or (fifo_SA_A_20_full_n = ap_const_logic_0) or (fifo_SA_A_19_full_n = ap_const_logic_0) or (fifo_SA_A_18_full_n = ap_const_logic_0) or (fifo_SA_A_17_full_n = ap_const_logic_0) or (fifo_SA_A_16_full_n = ap_const_logic_0) or (fifo_SA_A_full_n = ap_const_logic_0) or (fifo_SA_A_30_full_n = ap_const_logic_0) or (fifo_SA_A_29_full_n = ap_const_logic_0) or (fifo_SA_A_28_full_n = ap_const_logic_0) or (fifo_SA_A_27_full_n = ap_const_logic_0) or (fifo_SA_A_26_full_n = ap_const_logic_0) or (fifo_SA_A_25_full_n = ap_const_logic_0) or (fifo_SA_A_24_full_n = ap_const_logic_0) or (fifo_SA_A_23_full_n = ap_const_logic_0) or ((ap_predicate_op39_read_state2 = ap_const_boolean_1) and (conv3_sild_empty_n = ap_const_logic_0)) or ((ap_predicate_op37_read_state2 = ap_const_boolean_1) and (mm_a_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln192_fu_243_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln192_fu_243_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_temp_2_phi_fu_227_p4_assign_proc : process(mm_a_dout, icmp_ln192_reg_321, conv3_sild_dout, mode, ap_phi_reg_pp0_iter1_temp_2_reg_224)
    begin
        if ((icmp_ln192_reg_321 = ap_const_lv1_0)) then
            if ((mode = ap_const_lv1_0)) then 
                ap_phi_mux_temp_2_phi_fu_227_p4 <= mm_a_dout;
            elsif ((mode = ap_const_lv1_1)) then 
                ap_phi_mux_temp_2_phi_fu_227_p4 <= conv3_sild_dout;
            else 
                ap_phi_mux_temp_2_phi_fu_227_p4 <= ap_phi_reg_pp0_iter1_temp_2_reg_224;
            end if;
        else 
            ap_phi_mux_temp_2_phi_fu_227_p4 <= ap_phi_reg_pp0_iter1_temp_2_reg_224;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_temp_2_reg_224 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op37_read_state2_assign_proc : process(icmp_ln192_reg_321, mode)
    begin
                ap_predicate_op37_read_state2 <= ((mode = ap_const_lv1_0) and (icmp_ln192_reg_321 = ap_const_lv1_0));
    end process;


    ap_predicate_op39_read_state2_assign_proc : process(icmp_ln192_reg_321, mode)
    begin
                ap_predicate_op39_read_state2 <= ((mode = ap_const_lv1_1) and (icmp_ln192_reg_321 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_rep_3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, rep_fu_84, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_rep_3 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_rep_3 <= rep_fu_84;
        end if; 
    end process;


    conv3_sild_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, conv3_sild_empty_n, ap_predicate_op39_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op39_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            conv3_sild_blk_n <= conv3_sild_empty_n;
        else 
            conv3_sild_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    conv3_sild_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op39_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op39_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv3_sild_read <= ap_const_logic_1;
        else 
            conv3_sild_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_SA_A_16_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_SA_A_16_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_SA_A_16_blk_n <= fifo_SA_A_16_full_n;
        else 
            fifo_SA_A_16_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_SA_A_16_din <= trunc_ln206_fu_260_p1;

    fifo_SA_A_16_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_SA_A_16_write <= ap_const_logic_1;
        else 
            fifo_SA_A_16_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_SA_A_17_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_SA_A_17_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_SA_A_17_blk_n <= fifo_SA_A_17_full_n;
        else 
            fifo_SA_A_17_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_SA_A_17_din <= trunc_ln206_fu_260_p1;

    fifo_SA_A_17_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_SA_A_17_write <= ap_const_logic_1;
        else 
            fifo_SA_A_17_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_SA_A_18_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_SA_A_18_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_SA_A_18_blk_n <= fifo_SA_A_18_full_n;
        else 
            fifo_SA_A_18_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_SA_A_18_din <= trunc_ln206_fu_260_p1;

    fifo_SA_A_18_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_SA_A_18_write <= ap_const_logic_1;
        else 
            fifo_SA_A_18_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_SA_A_19_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_SA_A_19_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_SA_A_19_blk_n <= fifo_SA_A_19_full_n;
        else 
            fifo_SA_A_19_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_SA_A_19_din <= ap_phi_mux_temp_2_phi_fu_227_p4(63 downto 32);

    fifo_SA_A_19_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_SA_A_19_write <= ap_const_logic_1;
        else 
            fifo_SA_A_19_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_SA_A_20_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_SA_A_20_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_SA_A_20_blk_n <= fifo_SA_A_20_full_n;
        else 
            fifo_SA_A_20_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_SA_A_20_din <= ap_phi_mux_temp_2_phi_fu_227_p4(63 downto 32);

    fifo_SA_A_20_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_SA_A_20_write <= ap_const_logic_1;
        else 
            fifo_SA_A_20_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_SA_A_21_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_SA_A_21_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_SA_A_21_blk_n <= fifo_SA_A_21_full_n;
        else 
            fifo_SA_A_21_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_SA_A_21_din <= ap_phi_mux_temp_2_phi_fu_227_p4(63 downto 32);

    fifo_SA_A_21_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_SA_A_21_write <= ap_const_logic_1;
        else 
            fifo_SA_A_21_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_SA_A_22_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_SA_A_22_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_SA_A_22_blk_n <= fifo_SA_A_22_full_n;
        else 
            fifo_SA_A_22_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_SA_A_22_din <= ap_phi_mux_temp_2_phi_fu_227_p4(63 downto 32);

    fifo_SA_A_22_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_SA_A_22_write <= ap_const_logic_1;
        else 
            fifo_SA_A_22_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_SA_A_23_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_SA_A_23_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_SA_A_23_blk_n <= fifo_SA_A_23_full_n;
        else 
            fifo_SA_A_23_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_SA_A_23_din <= ap_phi_mux_temp_2_phi_fu_227_p4(95 downto 64);

    fifo_SA_A_23_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_SA_A_23_write <= ap_const_logic_1;
        else 
            fifo_SA_A_23_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_SA_A_24_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_SA_A_24_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_SA_A_24_blk_n <= fifo_SA_A_24_full_n;
        else 
            fifo_SA_A_24_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_SA_A_24_din <= ap_phi_mux_temp_2_phi_fu_227_p4(95 downto 64);

    fifo_SA_A_24_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_SA_A_24_write <= ap_const_logic_1;
        else 
            fifo_SA_A_24_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_SA_A_25_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_SA_A_25_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_SA_A_25_blk_n <= fifo_SA_A_25_full_n;
        else 
            fifo_SA_A_25_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_SA_A_25_din <= ap_phi_mux_temp_2_phi_fu_227_p4(95 downto 64);

    fifo_SA_A_25_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_SA_A_25_write <= ap_const_logic_1;
        else 
            fifo_SA_A_25_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_SA_A_26_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_SA_A_26_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_SA_A_26_blk_n <= fifo_SA_A_26_full_n;
        else 
            fifo_SA_A_26_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_SA_A_26_din <= ap_phi_mux_temp_2_phi_fu_227_p4(95 downto 64);

    fifo_SA_A_26_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_SA_A_26_write <= ap_const_logic_1;
        else 
            fifo_SA_A_26_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_SA_A_27_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_SA_A_27_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_SA_A_27_blk_n <= fifo_SA_A_27_full_n;
        else 
            fifo_SA_A_27_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_SA_A_27_din <= ap_phi_mux_temp_2_phi_fu_227_p4(127 downto 96);

    fifo_SA_A_27_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_SA_A_27_write <= ap_const_logic_1;
        else 
            fifo_SA_A_27_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_SA_A_28_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_SA_A_28_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_SA_A_28_blk_n <= fifo_SA_A_28_full_n;
        else 
            fifo_SA_A_28_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_SA_A_28_din <= ap_phi_mux_temp_2_phi_fu_227_p4(127 downto 96);

    fifo_SA_A_28_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_SA_A_28_write <= ap_const_logic_1;
        else 
            fifo_SA_A_28_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_SA_A_29_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_SA_A_29_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_SA_A_29_blk_n <= fifo_SA_A_29_full_n;
        else 
            fifo_SA_A_29_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_SA_A_29_din <= ap_phi_mux_temp_2_phi_fu_227_p4(127 downto 96);

    fifo_SA_A_29_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_SA_A_29_write <= ap_const_logic_1;
        else 
            fifo_SA_A_29_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_SA_A_30_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_SA_A_30_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_SA_A_30_blk_n <= fifo_SA_A_30_full_n;
        else 
            fifo_SA_A_30_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_SA_A_30_din <= ap_phi_mux_temp_2_phi_fu_227_p4(127 downto 96);

    fifo_SA_A_30_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_SA_A_30_write <= ap_const_logic_1;
        else 
            fifo_SA_A_30_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_SA_A_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_SA_A_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_SA_A_blk_n <= fifo_SA_A_full_n;
        else 
            fifo_SA_A_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_SA_A_din <= trunc_ln206_fu_260_p1;

    fifo_SA_A_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_SA_A_write <= ap_const_logic_1;
        else 
            fifo_SA_A_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln192_fu_243_p2 <= "1" when (ap_sig_allocacmp_rep_3 = num_a_sa_089) else "0";

    mm_a_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, mm_a_empty_n, ap_predicate_op37_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op37_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            mm_a_blk_n <= mm_a_empty_n;
        else 
            mm_a_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    mm_a_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op37_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op37_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mm_a_read <= ap_const_logic_1;
        else 
            mm_a_read <= ap_const_logic_0;
        end if; 
    end process;

    rep_4_fu_249_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_rep_3) + unsigned(ap_const_lv32_1));
    trunc_ln206_fu_260_p1 <= ap_phi_mux_temp_2_phi_fu_227_p4(32 - 1 downto 0);
end behav;
