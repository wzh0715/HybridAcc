-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_ConvWeightToArray_Pipeline_VITIS_LOOP_275_1_VITIS_LOOP_278_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_conv_w_2_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    fifo_conv_w_2_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    fifo_conv_w_2_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    fifo_conv_w_2_empty_n : IN STD_LOGIC;
    fifo_conv_w_2_read : OUT STD_LOGIC;
    Conv_SA_W_2_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    Conv_SA_W_2_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_2_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_2_full_n : IN STD_LOGIC;
    Conv_SA_W_2_write : OUT STD_LOGIC;
    Conv_SA_W_6_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    Conv_SA_W_6_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_6_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_6_full_n : IN STD_LOGIC;
    Conv_SA_W_6_write : OUT STD_LOGIC;
    Conv_SA_W_10_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    Conv_SA_W_10_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_10_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_10_full_n : IN STD_LOGIC;
    Conv_SA_W_10_write : OUT STD_LOGIC;
    Conv_SA_W_14_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    Conv_SA_W_14_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_14_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_14_full_n : IN STD_LOGIC;
    Conv_SA_W_14_write : OUT STD_LOGIC;
    fifo_conv_w_1_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    fifo_conv_w_1_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    fifo_conv_w_1_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    fifo_conv_w_1_empty_n : IN STD_LOGIC;
    fifo_conv_w_1_read : OUT STD_LOGIC;
    Conv_SA_W_1_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    Conv_SA_W_1_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_1_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_1_full_n : IN STD_LOGIC;
    Conv_SA_W_1_write : OUT STD_LOGIC;
    Conv_SA_W_5_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    Conv_SA_W_5_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_5_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_5_full_n : IN STD_LOGIC;
    Conv_SA_W_5_write : OUT STD_LOGIC;
    Conv_SA_W_9_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    Conv_SA_W_9_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_9_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_9_full_n : IN STD_LOGIC;
    Conv_SA_W_9_write : OUT STD_LOGIC;
    Conv_SA_W_13_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    Conv_SA_W_13_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_13_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_13_full_n : IN STD_LOGIC;
    Conv_SA_W_13_write : OUT STD_LOGIC;
    fifo_conv_w_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    fifo_conv_w_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    fifo_conv_w_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    fifo_conv_w_empty_n : IN STD_LOGIC;
    fifo_conv_w_read : OUT STD_LOGIC;
    Conv_SA_W_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    Conv_SA_W_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_full_n : IN STD_LOGIC;
    Conv_SA_W_write : OUT STD_LOGIC;
    Conv_SA_W_4_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    Conv_SA_W_4_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_4_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_4_full_n : IN STD_LOGIC;
    Conv_SA_W_4_write : OUT STD_LOGIC;
    Conv_SA_W_8_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    Conv_SA_W_8_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_8_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_8_full_n : IN STD_LOGIC;
    Conv_SA_W_8_write : OUT STD_LOGIC;
    Conv_SA_W_12_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    Conv_SA_W_12_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_12_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_12_full_n : IN STD_LOGIC;
    Conv_SA_W_12_write : OUT STD_LOGIC;
    fifo_conv_w_3_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    fifo_conv_w_3_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    fifo_conv_w_3_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    fifo_conv_w_3_empty_n : IN STD_LOGIC;
    fifo_conv_w_3_read : OUT STD_LOGIC;
    Conv_SA_W_3_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    Conv_SA_W_3_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_3_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_3_full_n : IN STD_LOGIC;
    Conv_SA_W_3_write : OUT STD_LOGIC;
    Conv_SA_W_7_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    Conv_SA_W_7_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_7_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_7_full_n : IN STD_LOGIC;
    Conv_SA_W_7_write : OUT STD_LOGIC;
    Conv_SA_W_11_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    Conv_SA_W_11_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_11_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_11_full_n : IN STD_LOGIC;
    Conv_SA_W_11_write : OUT STD_LOGIC;
    Conv_SA_W_15_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    Conv_SA_W_15_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_15_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    Conv_SA_W_15_full_n : IN STD_LOGIC;
    Conv_SA_W_15_write : OUT STD_LOGIC;
    zext_ln275 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of top_ConvWeightToArray_Pipeline_VITIS_LOOP_275_1_VITIS_LOOP_278_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal trunc_ln278_reg_481 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln275_fu_259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal fifo_conv_w_2_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal Conv_SA_W_2_blk_n : STD_LOGIC;
    signal Conv_SA_W_6_blk_n : STD_LOGIC;
    signal Conv_SA_W_10_blk_n : STD_LOGIC;
    signal Conv_SA_W_14_blk_n : STD_LOGIC;
    signal fifo_conv_w_1_blk_n : STD_LOGIC;
    signal Conv_SA_W_1_blk_n : STD_LOGIC;
    signal Conv_SA_W_5_blk_n : STD_LOGIC;
    signal Conv_SA_W_9_blk_n : STD_LOGIC;
    signal Conv_SA_W_13_blk_n : STD_LOGIC;
    signal fifo_conv_w_blk_n : STD_LOGIC;
    signal Conv_SA_W_blk_n : STD_LOGIC;
    signal Conv_SA_W_4_blk_n : STD_LOGIC;
    signal Conv_SA_W_8_blk_n : STD_LOGIC;
    signal Conv_SA_W_12_blk_n : STD_LOGIC;
    signal fifo_conv_w_3_blk_n : STD_LOGIC;
    signal Conv_SA_W_3_blk_n : STD_LOGIC;
    signal Conv_SA_W_7_blk_n : STD_LOGIC;
    signal Conv_SA_W_11_blk_n : STD_LOGIC;
    signal Conv_SA_W_15_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln278_fu_287_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal c_fu_96 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln278_fu_291_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal indvar_flatten_fu_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal add_ln275_fu_264_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln278_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln275_fu_279_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component top_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    c_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    c_fu_96 <= ap_const_lv3_0;
                elsif (((icmp_ln275_fu_259_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    c_fu_96 <= add_ln278_fu_291_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_100 <= ap_const_lv32_0;
                elsif (((icmp_ln275_fu_259_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten_fu_100 <= add_ln275_fu_264_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln278_reg_481 <= trunc_ln278_fu_287_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    Conv_SA_W_10_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, Conv_SA_W_10_full_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Conv_SA_W_10_blk_n <= Conv_SA_W_10_full_n;
        else 
            Conv_SA_W_10_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Conv_SA_W_10_din <= fifo_conv_w_2_dout(383 downto 256);

    Conv_SA_W_10_write_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Conv_SA_W_10_write <= ap_const_logic_1;
        else 
            Conv_SA_W_10_write <= ap_const_logic_0;
        end if; 
    end process;


    Conv_SA_W_11_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, Conv_SA_W_11_full_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Conv_SA_W_11_blk_n <= Conv_SA_W_11_full_n;
        else 
            Conv_SA_W_11_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Conv_SA_W_11_din <= fifo_conv_w_3_dout(383 downto 256);

    Conv_SA_W_11_write_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Conv_SA_W_11_write <= ap_const_logic_1;
        else 
            Conv_SA_W_11_write <= ap_const_logic_0;
        end if; 
    end process;


    Conv_SA_W_12_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, Conv_SA_W_12_full_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Conv_SA_W_12_blk_n <= Conv_SA_W_12_full_n;
        else 
            Conv_SA_W_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Conv_SA_W_12_din <= fifo_conv_w_dout(511 downto 384);

    Conv_SA_W_12_write_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Conv_SA_W_12_write <= ap_const_logic_1;
        else 
            Conv_SA_W_12_write <= ap_const_logic_0;
        end if; 
    end process;


    Conv_SA_W_13_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, Conv_SA_W_13_full_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Conv_SA_W_13_blk_n <= Conv_SA_W_13_full_n;
        else 
            Conv_SA_W_13_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Conv_SA_W_13_din <= fifo_conv_w_1_dout(511 downto 384);

    Conv_SA_W_13_write_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Conv_SA_W_13_write <= ap_const_logic_1;
        else 
            Conv_SA_W_13_write <= ap_const_logic_0;
        end if; 
    end process;


    Conv_SA_W_14_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, Conv_SA_W_14_full_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Conv_SA_W_14_blk_n <= Conv_SA_W_14_full_n;
        else 
            Conv_SA_W_14_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Conv_SA_W_14_din <= fifo_conv_w_2_dout(511 downto 384);

    Conv_SA_W_14_write_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Conv_SA_W_14_write <= ap_const_logic_1;
        else 
            Conv_SA_W_14_write <= ap_const_logic_0;
        end if; 
    end process;


    Conv_SA_W_15_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, Conv_SA_W_15_full_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Conv_SA_W_15_blk_n <= Conv_SA_W_15_full_n;
        else 
            Conv_SA_W_15_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Conv_SA_W_15_din <= fifo_conv_w_3_dout(511 downto 384);

    Conv_SA_W_15_write_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Conv_SA_W_15_write <= ap_const_logic_1;
        else 
            Conv_SA_W_15_write <= ap_const_logic_0;
        end if; 
    end process;


    Conv_SA_W_1_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, Conv_SA_W_1_full_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Conv_SA_W_1_blk_n <= Conv_SA_W_1_full_n;
        else 
            Conv_SA_W_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Conv_SA_W_1_din <= fifo_conv_w_1_dout(128 - 1 downto 0);

    Conv_SA_W_1_write_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Conv_SA_W_1_write <= ap_const_logic_1;
        else 
            Conv_SA_W_1_write <= ap_const_logic_0;
        end if; 
    end process;


    Conv_SA_W_2_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, Conv_SA_W_2_full_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Conv_SA_W_2_blk_n <= Conv_SA_W_2_full_n;
        else 
            Conv_SA_W_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Conv_SA_W_2_din <= fifo_conv_w_2_dout(128 - 1 downto 0);

    Conv_SA_W_2_write_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Conv_SA_W_2_write <= ap_const_logic_1;
        else 
            Conv_SA_W_2_write <= ap_const_logic_0;
        end if; 
    end process;


    Conv_SA_W_3_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, Conv_SA_W_3_full_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Conv_SA_W_3_blk_n <= Conv_SA_W_3_full_n;
        else 
            Conv_SA_W_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Conv_SA_W_3_din <= fifo_conv_w_3_dout(128 - 1 downto 0);

    Conv_SA_W_3_write_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Conv_SA_W_3_write <= ap_const_logic_1;
        else 
            Conv_SA_W_3_write <= ap_const_logic_0;
        end if; 
    end process;


    Conv_SA_W_4_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, Conv_SA_W_4_full_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Conv_SA_W_4_blk_n <= Conv_SA_W_4_full_n;
        else 
            Conv_SA_W_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Conv_SA_W_4_din <= fifo_conv_w_dout(255 downto 128);

    Conv_SA_W_4_write_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Conv_SA_W_4_write <= ap_const_logic_1;
        else 
            Conv_SA_W_4_write <= ap_const_logic_0;
        end if; 
    end process;


    Conv_SA_W_5_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, Conv_SA_W_5_full_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Conv_SA_W_5_blk_n <= Conv_SA_W_5_full_n;
        else 
            Conv_SA_W_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Conv_SA_W_5_din <= fifo_conv_w_1_dout(255 downto 128);

    Conv_SA_W_5_write_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Conv_SA_W_5_write <= ap_const_logic_1;
        else 
            Conv_SA_W_5_write <= ap_const_logic_0;
        end if; 
    end process;


    Conv_SA_W_6_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, Conv_SA_W_6_full_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Conv_SA_W_6_blk_n <= Conv_SA_W_6_full_n;
        else 
            Conv_SA_W_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Conv_SA_W_6_din <= fifo_conv_w_2_dout(255 downto 128);

    Conv_SA_W_6_write_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Conv_SA_W_6_write <= ap_const_logic_1;
        else 
            Conv_SA_W_6_write <= ap_const_logic_0;
        end if; 
    end process;


    Conv_SA_W_7_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, Conv_SA_W_7_full_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Conv_SA_W_7_blk_n <= Conv_SA_W_7_full_n;
        else 
            Conv_SA_W_7_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Conv_SA_W_7_din <= fifo_conv_w_3_dout(255 downto 128);

    Conv_SA_W_7_write_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Conv_SA_W_7_write <= ap_const_logic_1;
        else 
            Conv_SA_W_7_write <= ap_const_logic_0;
        end if; 
    end process;


    Conv_SA_W_8_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, Conv_SA_W_8_full_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Conv_SA_W_8_blk_n <= Conv_SA_W_8_full_n;
        else 
            Conv_SA_W_8_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Conv_SA_W_8_din <= fifo_conv_w_dout(383 downto 256);

    Conv_SA_W_8_write_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Conv_SA_W_8_write <= ap_const_logic_1;
        else 
            Conv_SA_W_8_write <= ap_const_logic_0;
        end if; 
    end process;


    Conv_SA_W_9_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, Conv_SA_W_9_full_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Conv_SA_W_9_blk_n <= Conv_SA_W_9_full_n;
        else 
            Conv_SA_W_9_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Conv_SA_W_9_din <= fifo_conv_w_1_dout(383 downto 256);

    Conv_SA_W_9_write_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Conv_SA_W_9_write <= ap_const_logic_1;
        else 
            Conv_SA_W_9_write <= ap_const_logic_0;
        end if; 
    end process;


    Conv_SA_W_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, Conv_SA_W_full_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Conv_SA_W_blk_n <= Conv_SA_W_full_n;
        else 
            Conv_SA_W_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Conv_SA_W_din <= fifo_conv_w_dout(128 - 1 downto 0);

    Conv_SA_W_write_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Conv_SA_W_write <= ap_const_logic_1;
        else 
            Conv_SA_W_write <= ap_const_logic_0;
        end if; 
    end process;

    add_ln275_fu_264_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_100) + unsigned(ap_const_lv32_1));
    add_ln278_fu_291_p2 <= std_logic_vector(unsigned(select_ln275_fu_279_p3) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(fifo_conv_w_2_empty_n, trunc_ln278_reg_481, Conv_SA_W_2_full_n, Conv_SA_W_6_full_n, Conv_SA_W_10_full_n, Conv_SA_W_14_full_n, fifo_conv_w_1_empty_n, Conv_SA_W_1_full_n, Conv_SA_W_5_full_n, Conv_SA_W_9_full_n, Conv_SA_W_13_full_n, fifo_conv_w_empty_n, Conv_SA_W_full_n, Conv_SA_W_4_full_n, Conv_SA_W_8_full_n, Conv_SA_W_12_full_n, fifo_conv_w_3_empty_n, Conv_SA_W_3_full_n, Conv_SA_W_7_full_n, Conv_SA_W_11_full_n, Conv_SA_W_15_full_n)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (((trunc_ln278_reg_481 = ap_const_lv2_1) and (ap_const_logic_0 = Conv_SA_W_1_full_n)) or ((trunc_ln278_reg_481 = ap_const_lv2_1) and (ap_const_logic_0 = Conv_SA_W_13_full_n)) or ((trunc_ln278_reg_481 = ap_const_lv2_1) and (ap_const_logic_0 = Conv_SA_W_9_full_n)) or ((trunc_ln278_reg_481 = ap_const_lv2_1) and (ap_const_logic_0 = Conv_SA_W_5_full_n)) or ((fifo_conv_w_1_empty_n = ap_const_logic_0) and (trunc_ln278_reg_481 = ap_const_lv2_1)) or ((trunc_ln278_reg_481 = ap_const_lv2_2) and (ap_const_logic_0 = Conv_SA_W_14_full_n)) or ((trunc_ln278_reg_481 = ap_const_lv2_2) and (ap_const_logic_0 = Conv_SA_W_10_full_n)) or ((trunc_ln278_reg_481 = ap_const_lv2_2) and (ap_const_logic_0 = Conv_SA_W_6_full_n)) or ((trunc_ln278_reg_481 = ap_const_lv2_2) and (ap_const_logic_0 = Conv_SA_W_2_full_n)) or ((trunc_ln278_reg_481 = ap_const_lv2_2) and (fifo_conv_w_2_empty_n = ap_const_logic_0)) or ((trunc_ln278_reg_481 = ap_const_lv2_3) and (ap_const_logic_0 = Conv_SA_W_15_full_n)) or ((trunc_ln278_reg_481 = ap_const_lv2_3) and (ap_const_logic_0 
    = Conv_SA_W_11_full_n)) or ((trunc_ln278_reg_481 = ap_const_lv2_3) and (ap_const_logic_0 = Conv_SA_W_7_full_n)) or ((trunc_ln278_reg_481 = ap_const_lv2_3) and (ap_const_logic_0 = Conv_SA_W_3_full_n)) or ((trunc_ln278_reg_481 = ap_const_lv2_3) and (fifo_conv_w_3_empty_n = ap_const_logic_0)) or ((trunc_ln278_reg_481 = ap_const_lv2_0) and (ap_const_logic_0 = Conv_SA_W_12_full_n)) or ((trunc_ln278_reg_481 = ap_const_lv2_0) and (ap_const_logic_0 = Conv_SA_W_8_full_n)) or ((trunc_ln278_reg_481 = ap_const_lv2_0) and (ap_const_logic_0 = Conv_SA_W_4_full_n)) or ((trunc_ln278_reg_481 = ap_const_lv2_0) and (ap_const_logic_0 = Conv_SA_W_full_n)) or ((trunc_ln278_reg_481 = ap_const_lv2_0) and (fifo_conv_w_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln275_fu_259_p2)
    begin
        if (((icmp_ln275_fu_259_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    fifo_conv_w_1_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, fifo_conv_w_1_empty_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_conv_w_1_blk_n <= fifo_conv_w_1_empty_n;
        else 
            fifo_conv_w_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_conv_w_1_read_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_conv_w_1_read <= ap_const_logic_1;
        else 
            fifo_conv_w_1_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_conv_w_2_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, fifo_conv_w_2_empty_n, trunc_ln278_reg_481, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_conv_w_2_blk_n <= fifo_conv_w_2_empty_n;
        else 
            fifo_conv_w_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_conv_w_2_read_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_conv_w_2_read <= ap_const_logic_1;
        else 
            fifo_conv_w_2_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_conv_w_3_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, fifo_conv_w_3_empty_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_conv_w_3_blk_n <= fifo_conv_w_3_empty_n;
        else 
            fifo_conv_w_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_conv_w_3_read_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_conv_w_3_read <= ap_const_logic_1;
        else 
            fifo_conv_w_3_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_conv_w_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, fifo_conv_w_empty_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fifo_conv_w_blk_n <= fifo_conv_w_empty_n;
        else 
            fifo_conv_w_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_conv_w_read_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln278_reg_481, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln278_reg_481 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_conv_w_read <= ap_const_logic_1;
        else 
            fifo_conv_w_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln275_fu_259_p2 <= "1" when (indvar_flatten_fu_100 = zext_ln275) else "0";
    icmp_ln278_fu_273_p2 <= "1" when (c_fu_96 = ap_const_lv3_4) else "0";
    select_ln275_fu_279_p3 <= 
        ap_const_lv3_0 when (icmp_ln278_fu_273_p2(0) = '1') else 
        c_fu_96;
    trunc_ln278_fu_287_p1 <= select_ln275_fu_279_p3(2 - 1 downto 0);
end behav;
