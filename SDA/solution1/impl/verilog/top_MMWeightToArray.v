// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_MMWeightToArray (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_mm_w_dout,
        fifo_mm_w_num_data_valid,
        fifo_mm_w_fifo_cap,
        fifo_mm_w_empty_n,
        fifo_mm_w_read,
        MM_SA_W_din,
        MM_SA_W_num_data_valid,
        MM_SA_W_fifo_cap,
        MM_SA_W_full_n,
        MM_SA_W_write,
        MM_SA_W_1_din,
        MM_SA_W_1_num_data_valid,
        MM_SA_W_1_fifo_cap,
        MM_SA_W_1_full_n,
        MM_SA_W_1_write,
        MM_SA_W_2_din,
        MM_SA_W_2_num_data_valid,
        MM_SA_W_2_fifo_cap,
        MM_SA_W_2_full_n,
        MM_SA_W_2_write,
        MM_SA_W_3_din,
        MM_SA_W_3_num_data_valid,
        MM_SA_W_3_fifo_cap,
        MM_SA_W_3_full_n,
        MM_SA_W_3_write,
        MM_SA_W_4_din,
        MM_SA_W_4_num_data_valid,
        MM_SA_W_4_fifo_cap,
        MM_SA_W_4_full_n,
        MM_SA_W_4_write,
        MM_SA_W_5_din,
        MM_SA_W_5_num_data_valid,
        MM_SA_W_5_fifo_cap,
        MM_SA_W_5_full_n,
        MM_SA_W_5_write,
        MM_SA_W_6_din,
        MM_SA_W_6_num_data_valid,
        MM_SA_W_6_fifo_cap,
        MM_SA_W_6_full_n,
        MM_SA_W_6_write,
        MM_SA_W_7_din,
        MM_SA_W_7_num_data_valid,
        MM_SA_W_7_fifo_cap,
        MM_SA_W_7_full_n,
        MM_SA_W_7_write,
        MM_SA_W_8_din,
        MM_SA_W_8_num_data_valid,
        MM_SA_W_8_fifo_cap,
        MM_SA_W_8_full_n,
        MM_SA_W_8_write,
        MM_SA_W_9_din,
        MM_SA_W_9_num_data_valid,
        MM_SA_W_9_fifo_cap,
        MM_SA_W_9_full_n,
        MM_SA_W_9_write,
        MM_SA_W_10_din,
        MM_SA_W_10_num_data_valid,
        MM_SA_W_10_fifo_cap,
        MM_SA_W_10_full_n,
        MM_SA_W_10_write,
        MM_SA_W_11_din,
        MM_SA_W_11_num_data_valid,
        MM_SA_W_11_fifo_cap,
        MM_SA_W_11_full_n,
        MM_SA_W_11_write,
        MM_SA_W_12_din,
        MM_SA_W_12_num_data_valid,
        MM_SA_W_12_fifo_cap,
        MM_SA_W_12_full_n,
        MM_SA_W_12_write,
        MM_SA_W_13_din,
        MM_SA_W_13_num_data_valid,
        MM_SA_W_13_fifo_cap,
        MM_SA_W_13_full_n,
        MM_SA_W_13_write,
        MM_SA_W_14_din,
        MM_SA_W_14_num_data_valid,
        MM_SA_W_14_fifo_cap,
        MM_SA_W_14_full_n,
        MM_SA_W_14_write,
        MM_SA_W_15_din,
        MM_SA_W_15_num_data_valid,
        MM_SA_W_15_fifo_cap,
        MM_SA_W_15_full_n,
        MM_SA_W_15_write,
        p_read,
        mode_dout,
        mode_num_data_valid,
        mode_fifo_cap,
        mode_empty_n,
        mode_read
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] fifo_mm_w_dout;
input  [7:0] fifo_mm_w_num_data_valid;
input  [7:0] fifo_mm_w_fifo_cap;
input   fifo_mm_w_empty_n;
output   fifo_mm_w_read;
output  [127:0] MM_SA_W_din;
input  [2:0] MM_SA_W_num_data_valid;
input  [2:0] MM_SA_W_fifo_cap;
input   MM_SA_W_full_n;
output   MM_SA_W_write;
output  [127:0] MM_SA_W_1_din;
input  [2:0] MM_SA_W_1_num_data_valid;
input  [2:0] MM_SA_W_1_fifo_cap;
input   MM_SA_W_1_full_n;
output   MM_SA_W_1_write;
output  [127:0] MM_SA_W_2_din;
input  [2:0] MM_SA_W_2_num_data_valid;
input  [2:0] MM_SA_W_2_fifo_cap;
input   MM_SA_W_2_full_n;
output   MM_SA_W_2_write;
output  [127:0] MM_SA_W_3_din;
input  [2:0] MM_SA_W_3_num_data_valid;
input  [2:0] MM_SA_W_3_fifo_cap;
input   MM_SA_W_3_full_n;
output   MM_SA_W_3_write;
output  [127:0] MM_SA_W_4_din;
input  [2:0] MM_SA_W_4_num_data_valid;
input  [2:0] MM_SA_W_4_fifo_cap;
input   MM_SA_W_4_full_n;
output   MM_SA_W_4_write;
output  [127:0] MM_SA_W_5_din;
input  [2:0] MM_SA_W_5_num_data_valid;
input  [2:0] MM_SA_W_5_fifo_cap;
input   MM_SA_W_5_full_n;
output   MM_SA_W_5_write;
output  [127:0] MM_SA_W_6_din;
input  [2:0] MM_SA_W_6_num_data_valid;
input  [2:0] MM_SA_W_6_fifo_cap;
input   MM_SA_W_6_full_n;
output   MM_SA_W_6_write;
output  [127:0] MM_SA_W_7_din;
input  [2:0] MM_SA_W_7_num_data_valid;
input  [2:0] MM_SA_W_7_fifo_cap;
input   MM_SA_W_7_full_n;
output   MM_SA_W_7_write;
output  [127:0] MM_SA_W_8_din;
input  [2:0] MM_SA_W_8_num_data_valid;
input  [2:0] MM_SA_W_8_fifo_cap;
input   MM_SA_W_8_full_n;
output   MM_SA_W_8_write;
output  [127:0] MM_SA_W_9_din;
input  [2:0] MM_SA_W_9_num_data_valid;
input  [2:0] MM_SA_W_9_fifo_cap;
input   MM_SA_W_9_full_n;
output   MM_SA_W_9_write;
output  [127:0] MM_SA_W_10_din;
input  [2:0] MM_SA_W_10_num_data_valid;
input  [2:0] MM_SA_W_10_fifo_cap;
input   MM_SA_W_10_full_n;
output   MM_SA_W_10_write;
output  [127:0] MM_SA_W_11_din;
input  [2:0] MM_SA_W_11_num_data_valid;
input  [2:0] MM_SA_W_11_fifo_cap;
input   MM_SA_W_11_full_n;
output   MM_SA_W_11_write;
output  [127:0] MM_SA_W_12_din;
input  [2:0] MM_SA_W_12_num_data_valid;
input  [2:0] MM_SA_W_12_fifo_cap;
input   MM_SA_W_12_full_n;
output   MM_SA_W_12_write;
output  [127:0] MM_SA_W_13_din;
input  [2:0] MM_SA_W_13_num_data_valid;
input  [2:0] MM_SA_W_13_fifo_cap;
input   MM_SA_W_13_full_n;
output   MM_SA_W_13_write;
output  [127:0] MM_SA_W_14_din;
input  [2:0] MM_SA_W_14_num_data_valid;
input  [2:0] MM_SA_W_14_fifo_cap;
input   MM_SA_W_14_full_n;
output   MM_SA_W_14_write;
output  [127:0] MM_SA_W_15_din;
input  [2:0] MM_SA_W_15_num_data_valid;
input  [2:0] MM_SA_W_15_fifo_cap;
input   MM_SA_W_15_full_n;
output   MM_SA_W_15_write;
input  [29:0] p_read;
input  [0:0] mode_dout;
input  [2:0] mode_num_data_valid;
input  [2:0] mode_fifo_cap;
input   mode_empty_n;
output   mode_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_mm_w_read;
reg MM_SA_W_write;
reg MM_SA_W_1_write;
reg MM_SA_W_2_write;
reg MM_SA_W_3_write;
reg MM_SA_W_4_write;
reg MM_SA_W_5_write;
reg MM_SA_W_6_write;
reg MM_SA_W_7_write;
reg MM_SA_W_8_write;
reg MM_SA_W_9_write;
reg MM_SA_W_10_write;
reg MM_SA_W_11_write;
reg MM_SA_W_12_write;
reg MM_SA_W_13_write;
reg MM_SA_W_14_write;
reg MM_SA_W_15_write;
reg mode_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    mode_blk_n;
reg    ap_block_state1;
wire   [0:0] mode_5_read_fu_72_p2;
reg   [0:0] mode_5_reg_123;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_start;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_done;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_idle;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_ready;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_fifo_mm_w_read;
wire   [127:0] grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_din;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_write;
wire   [127:0] grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_4_din;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_4_write;
wire   [127:0] grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_8_din;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_8_write;
wire   [127:0] grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_12_din;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_12_write;
wire   [127:0] grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_1_din;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_1_write;
wire   [127:0] grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_5_din;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_5_write;
wire   [127:0] grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_9_din;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_9_write;
wire   [127:0] grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_13_din;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_13_write;
wire   [127:0] grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_2_din;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_2_write;
wire   [127:0] grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_6_din;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_6_write;
wire   [127:0] grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_10_din;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_10_write;
wire   [127:0] grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_14_din;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_14_write;
wire   [127:0] grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_3_din;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_3_write;
wire   [127:0] grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_7_din;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_7_write;
wire   [127:0] grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_11_din;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_11_write;
wire   [127:0] grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_15_din;
wire    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_15_write;
reg    grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_start_reg;
reg    ap_block_state1_ignore_call1;
wire    ap_CS_fsm_state2;
reg    ap_block_state2_on_subcall_done;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_start_reg = 1'b0;
end

top_MMWeightToArray_Pipeline_VITIS_LOOP_295_1 grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_start),
    .ap_done(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_done),
    .ap_idle(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_idle),
    .ap_ready(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_ready),
    .fifo_mm_w_dout(fifo_mm_w_dout),
    .fifo_mm_w_num_data_valid(8'd0),
    .fifo_mm_w_fifo_cap(8'd0),
    .fifo_mm_w_empty_n(fifo_mm_w_empty_n),
    .fifo_mm_w_read(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_fifo_mm_w_read),
    .MM_SA_W_din(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_din),
    .MM_SA_W_num_data_valid(3'd0),
    .MM_SA_W_fifo_cap(3'd0),
    .MM_SA_W_full_n(MM_SA_W_full_n),
    .MM_SA_W_write(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_write),
    .MM_SA_W_4_din(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_4_din),
    .MM_SA_W_4_num_data_valid(3'd0),
    .MM_SA_W_4_fifo_cap(3'd0),
    .MM_SA_W_4_full_n(MM_SA_W_4_full_n),
    .MM_SA_W_4_write(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_4_write),
    .MM_SA_W_8_din(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_8_din),
    .MM_SA_W_8_num_data_valid(3'd0),
    .MM_SA_W_8_fifo_cap(3'd0),
    .MM_SA_W_8_full_n(MM_SA_W_8_full_n),
    .MM_SA_W_8_write(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_8_write),
    .MM_SA_W_12_din(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_12_din),
    .MM_SA_W_12_num_data_valid(3'd0),
    .MM_SA_W_12_fifo_cap(3'd0),
    .MM_SA_W_12_full_n(MM_SA_W_12_full_n),
    .MM_SA_W_12_write(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_12_write),
    .MM_SA_W_1_din(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_1_din),
    .MM_SA_W_1_num_data_valid(3'd0),
    .MM_SA_W_1_fifo_cap(3'd0),
    .MM_SA_W_1_full_n(MM_SA_W_1_full_n),
    .MM_SA_W_1_write(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_1_write),
    .MM_SA_W_5_din(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_5_din),
    .MM_SA_W_5_num_data_valid(3'd0),
    .MM_SA_W_5_fifo_cap(3'd0),
    .MM_SA_W_5_full_n(MM_SA_W_5_full_n),
    .MM_SA_W_5_write(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_5_write),
    .MM_SA_W_9_din(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_9_din),
    .MM_SA_W_9_num_data_valid(3'd0),
    .MM_SA_W_9_fifo_cap(3'd0),
    .MM_SA_W_9_full_n(MM_SA_W_9_full_n),
    .MM_SA_W_9_write(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_9_write),
    .MM_SA_W_13_din(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_13_din),
    .MM_SA_W_13_num_data_valid(3'd0),
    .MM_SA_W_13_fifo_cap(3'd0),
    .MM_SA_W_13_full_n(MM_SA_W_13_full_n),
    .MM_SA_W_13_write(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_13_write),
    .MM_SA_W_2_din(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_2_din),
    .MM_SA_W_2_num_data_valid(3'd0),
    .MM_SA_W_2_fifo_cap(3'd0),
    .MM_SA_W_2_full_n(MM_SA_W_2_full_n),
    .MM_SA_W_2_write(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_2_write),
    .MM_SA_W_6_din(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_6_din),
    .MM_SA_W_6_num_data_valid(3'd0),
    .MM_SA_W_6_fifo_cap(3'd0),
    .MM_SA_W_6_full_n(MM_SA_W_6_full_n),
    .MM_SA_W_6_write(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_6_write),
    .MM_SA_W_10_din(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_10_din),
    .MM_SA_W_10_num_data_valid(3'd0),
    .MM_SA_W_10_fifo_cap(3'd0),
    .MM_SA_W_10_full_n(MM_SA_W_10_full_n),
    .MM_SA_W_10_write(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_10_write),
    .MM_SA_W_14_din(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_14_din),
    .MM_SA_W_14_num_data_valid(3'd0),
    .MM_SA_W_14_fifo_cap(3'd0),
    .MM_SA_W_14_full_n(MM_SA_W_14_full_n),
    .MM_SA_W_14_write(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_14_write),
    .MM_SA_W_3_din(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_3_din),
    .MM_SA_W_3_num_data_valid(3'd0),
    .MM_SA_W_3_fifo_cap(3'd0),
    .MM_SA_W_3_full_n(MM_SA_W_3_full_n),
    .MM_SA_W_3_write(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_3_write),
    .MM_SA_W_7_din(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_7_din),
    .MM_SA_W_7_num_data_valid(3'd0),
    .MM_SA_W_7_fifo_cap(3'd0),
    .MM_SA_W_7_full_n(MM_SA_W_7_full_n),
    .MM_SA_W_7_write(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_7_write),
    .MM_SA_W_11_din(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_11_din),
    .MM_SA_W_11_num_data_valid(3'd0),
    .MM_SA_W_11_fifo_cap(3'd0),
    .MM_SA_W_11_full_n(MM_SA_W_11_full_n),
    .MM_SA_W_11_write(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_11_write),
    .MM_SA_W_15_din(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_15_din),
    .MM_SA_W_15_num_data_valid(3'd0),
    .MM_SA_W_15_fifo_cap(3'd0),
    .MM_SA_W_15_full_n(MM_SA_W_15_full_n),
    .MM_SA_W_15_write(grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_15_write),
    .p_read(p_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (mode_5_read_fu_72_p2 == 1'd0) & (1'b0 == ap_block_state1_ignore_call1))) begin
            grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_start_reg <= 1'b1;
        end else if ((grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_ready == 1'b1)) begin
            grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mode_5_reg_123 <= mode_dout;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        MM_SA_W_10_write = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_10_write;
    end else begin
        MM_SA_W_10_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        MM_SA_W_11_write = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_11_write;
    end else begin
        MM_SA_W_11_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        MM_SA_W_12_write = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_12_write;
    end else begin
        MM_SA_W_12_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        MM_SA_W_13_write = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_13_write;
    end else begin
        MM_SA_W_13_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        MM_SA_W_14_write = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_14_write;
    end else begin
        MM_SA_W_14_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        MM_SA_W_15_write = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_15_write;
    end else begin
        MM_SA_W_15_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        MM_SA_W_1_write = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_1_write;
    end else begin
        MM_SA_W_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        MM_SA_W_2_write = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_2_write;
    end else begin
        MM_SA_W_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        MM_SA_W_3_write = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_3_write;
    end else begin
        MM_SA_W_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        MM_SA_W_4_write = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_4_write;
    end else begin
        MM_SA_W_4_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        MM_SA_W_5_write = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_5_write;
    end else begin
        MM_SA_W_5_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        MM_SA_W_6_write = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_6_write;
    end else begin
        MM_SA_W_6_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        MM_SA_W_7_write = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_7_write;
    end else begin
        MM_SA_W_7_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        MM_SA_W_8_write = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_8_write;
    end else begin
        MM_SA_W_8_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        MM_SA_W_9_write = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_9_write;
    end else begin
        MM_SA_W_9_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        MM_SA_W_write = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_write;
    end else begin
        MM_SA_W_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (mode_5_reg_123 == 1'd0))) begin
        fifo_mm_w_read = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_fifo_mm_w_read;
    end else begin
        fifo_mm_w_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        mode_blk_n = mode_empty_n;
    end else begin
        mode_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mode_read = 1'b1;
    end else begin
        mode_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign MM_SA_W_10_din = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_10_din;

assign MM_SA_W_11_din = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_11_din;

assign MM_SA_W_12_din = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_12_din;

assign MM_SA_W_13_din = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_13_din;

assign MM_SA_W_14_din = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_14_din;

assign MM_SA_W_15_din = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_15_din;

assign MM_SA_W_1_din = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_1_din;

assign MM_SA_W_2_din = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_2_din;

assign MM_SA_W_3_din = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_3_din;

assign MM_SA_W_4_din = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_4_din;

assign MM_SA_W_5_din = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_5_din;

assign MM_SA_W_6_din = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_6_din;

assign MM_SA_W_7_din = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_7_din;

assign MM_SA_W_8_din = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_8_din;

assign MM_SA_W_9_din = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_9_din;

assign MM_SA_W_din = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_MM_SA_W_din;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (mode_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call1 = ((ap_start == 1'b0) | (mode_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_done == 1'b0) & (mode_5_reg_123 == 1'd0));
end

assign grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_start = grp_MMWeightToArray_Pipeline_VITIS_LOOP_295_1_fu_78_ap_start_reg;

assign mode_5_read_fu_72_p2 = mode_dout;

endmodule //top_MMWeightToArray
