// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_PE (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_SA_A_0_0_dout,
        fifo_SA_A_0_0_num_data_valid,
        fifo_SA_A_0_0_fifo_cap,
        fifo_SA_A_0_0_empty_n,
        fifo_SA_A_0_0_read,
        fifo_SA_W_0_0_dout,
        fifo_SA_W_0_0_num_data_valid,
        fifo_SA_W_0_0_fifo_cap,
        fifo_SA_W_0_0_empty_n,
        fifo_SA_W_0_0_read,
        fifo_SA_O_0_0_0_din,
        fifo_SA_O_0_0_0_num_data_valid,
        fifo_SA_O_0_0_0_fifo_cap,
        fifo_SA_O_0_0_0_full_n,
        fifo_SA_O_0_0_0_write,
        fifo_SA_O_0_0_1_din,
        fifo_SA_O_0_0_1_num_data_valid,
        fifo_SA_O_0_0_1_fifo_cap,
        fifo_SA_O_0_0_1_full_n,
        fifo_SA_O_0_0_1_write,
        fifo_SA_O_0_0_2_din,
        fifo_SA_O_0_0_2_num_data_valid,
        fifo_SA_O_0_0_2_fifo_cap,
        fifo_SA_O_0_0_2_full_n,
        fifo_SA_O_0_0_2_write,
        fifo_SA_O_0_0_3_din,
        fifo_SA_O_0_0_3_num_data_valid,
        fifo_SA_O_0_0_3_fifo_cap,
        fifo_SA_O_0_0_3_full_n,
        fifo_SA_O_0_0_3_write,
        num,
        num_a_sa,
        mode
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [127:0] fifo_SA_A_0_0_dout;
input  [2:0] fifo_SA_A_0_0_num_data_valid;
input  [2:0] fifo_SA_A_0_0_fifo_cap;
input   fifo_SA_A_0_0_empty_n;
output   fifo_SA_A_0_0_read;
input  [127:0] fifo_SA_W_0_0_dout;
input  [3:0] fifo_SA_W_0_0_num_data_valid;
input  [3:0] fifo_SA_W_0_0_fifo_cap;
input   fifo_SA_W_0_0_empty_n;
output   fifo_SA_W_0_0_read;
output  [31:0] fifo_SA_O_0_0_0_din;
input  [4:0] fifo_SA_O_0_0_0_num_data_valid;
input  [4:0] fifo_SA_O_0_0_0_fifo_cap;
input   fifo_SA_O_0_0_0_full_n;
output   fifo_SA_O_0_0_0_write;
output  [31:0] fifo_SA_O_0_0_1_din;
input  [4:0] fifo_SA_O_0_0_1_num_data_valid;
input  [4:0] fifo_SA_O_0_0_1_fifo_cap;
input   fifo_SA_O_0_0_1_full_n;
output   fifo_SA_O_0_0_1_write;
output  [31:0] fifo_SA_O_0_0_2_din;
input  [4:0] fifo_SA_O_0_0_2_num_data_valid;
input  [4:0] fifo_SA_O_0_0_2_fifo_cap;
input   fifo_SA_O_0_0_2_full_n;
output   fifo_SA_O_0_0_2_write;
output  [31:0] fifo_SA_O_0_0_3_din;
input  [4:0] fifo_SA_O_0_0_3_num_data_valid;
input  [4:0] fifo_SA_O_0_0_3_fifo_cap;
input   fifo_SA_O_0_0_3_full_n;
output   fifo_SA_O_0_0_3_write;
input  [31:0] num;
input  [31:0] num_a_sa;
input  [0:0] mode;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_SA_A_0_0_read;
reg fifo_SA_W_0_0_read;
reg fifo_SA_O_0_0_0_write;
reg fifo_SA_O_0_0_1_write;
reg fifo_SA_O_0_0_2_write;
reg fifo_SA_O_0_0_3_write;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] sub_fu_89_p2;
reg   [31:0] sub_reg_146;
wire    ap_CS_fsm_state2;
wire   [0:0] cmp47_fu_95_p2;
reg   [0:0] cmp47_reg_151;
wire   [31:0] sub267_fu_101_p2;
reg   [31:0] sub267_reg_156;
wire   [31:0] add304_1_fu_107_p2;
reg   [31:0] add304_1_reg_161;
wire   [31:0] add304_2_fu_113_p2;
reg   [31:0] add304_2_reg_166;
wire   [31:0] add304_3_fu_119_p2;
reg   [31:0] add304_3_reg_171;
wire    grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_start;
wire    grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_done;
wire    grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_idle;
wire    grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_ready;
wire    grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_A_0_0_read;
wire    grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_W_0_0_read;
wire   [31:0] grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_3_din;
wire    grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_3_write;
wire   [31:0] grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_0_din;
wire    grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_0_write;
wire   [31:0] grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_1_din;
wire    grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_1_write;
wire   [31:0] grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_2_din;
wire    grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_2_write;
reg    grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_start_reg;
wire    ap_CS_fsm_state3;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_start_reg = 1'b0;
end

top_PE_Pipeline_VITIS_LOOP_385_5 grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_start),
    .ap_done(grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_done),
    .ap_idle(grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_idle),
    .ap_ready(grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_ready),
    .fifo_SA_A_0_0_dout(fifo_SA_A_0_0_dout),
    .fifo_SA_A_0_0_num_data_valid(3'd0),
    .fifo_SA_A_0_0_fifo_cap(3'd0),
    .fifo_SA_A_0_0_empty_n(fifo_SA_A_0_0_empty_n),
    .fifo_SA_A_0_0_read(grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_A_0_0_read),
    .fifo_SA_W_0_0_dout(fifo_SA_W_0_0_dout),
    .fifo_SA_W_0_0_num_data_valid(4'd0),
    .fifo_SA_W_0_0_fifo_cap(4'd0),
    .fifo_SA_W_0_0_empty_n(fifo_SA_W_0_0_empty_n),
    .fifo_SA_W_0_0_read(grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_W_0_0_read),
    .fifo_SA_O_0_0_3_din(grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_3_din),
    .fifo_SA_O_0_0_3_num_data_valid(5'd0),
    .fifo_SA_O_0_0_3_fifo_cap(5'd0),
    .fifo_SA_O_0_0_3_full_n(fifo_SA_O_0_0_3_full_n),
    .fifo_SA_O_0_0_3_write(grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_3_write),
    .fifo_SA_O_0_0_0_din(grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_0_din),
    .fifo_SA_O_0_0_0_num_data_valid(5'd0),
    .fifo_SA_O_0_0_0_fifo_cap(5'd0),
    .fifo_SA_O_0_0_0_full_n(fifo_SA_O_0_0_0_full_n),
    .fifo_SA_O_0_0_0_write(grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_0_write),
    .fifo_SA_O_0_0_1_din(grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_1_din),
    .fifo_SA_O_0_0_1_num_data_valid(5'd0),
    .fifo_SA_O_0_0_1_fifo_cap(5'd0),
    .fifo_SA_O_0_0_1_full_n(fifo_SA_O_0_0_1_full_n),
    .fifo_SA_O_0_0_1_write(grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_1_write),
    .fifo_SA_O_0_0_2_din(grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_2_din),
    .fifo_SA_O_0_0_2_num_data_valid(5'd0),
    .fifo_SA_O_0_0_2_fifo_cap(5'd0),
    .fifo_SA_O_0_0_2_full_n(fifo_SA_O_0_0_2_full_n),
    .fifo_SA_O_0_0_2_write(grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_2_write),
    .sub(sub_reg_146),
    .sub267(sub267_reg_156),
    .mode(mode),
    .num(num),
    .cmp47(cmp47_reg_151),
    .num_a_sa(num_a_sa),
    .add304_3(add304_3_reg_171),
    .add304_2(add304_2_reg_166),
    .add304_1(add304_1_reg_161)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_start_reg <= 1'b1;
        end else if ((grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_ready == 1'b1)) begin
            grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add304_1_reg_161 <= add304_1_fu_107_p2;
        add304_2_reg_166 <= add304_2_fu_113_p2;
        add304_3_reg_171 <= add304_3_fu_119_p2;
        cmp47_reg_151 <= cmp47_fu_95_p2;
        sub267_reg_156 <= sub267_fu_101_p2;
        sub_reg_146 <= sub_fu_89_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fifo_SA_A_0_0_read = grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_A_0_0_read;
    end else begin
        fifo_SA_A_0_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fifo_SA_O_0_0_0_write = grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_0_write;
    end else begin
        fifo_SA_O_0_0_0_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fifo_SA_O_0_0_1_write = grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_1_write;
    end else begin
        fifo_SA_O_0_0_1_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fifo_SA_O_0_0_2_write = grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_2_write;
    end else begin
        fifo_SA_O_0_0_2_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fifo_SA_O_0_0_3_write = grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_3_write;
    end else begin
        fifo_SA_O_0_0_3_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fifo_SA_W_0_0_read = grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_W_0_0_read;
    end else begin
        fifo_SA_W_0_0_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add304_1_fu_107_p2 = (num_a_sa + 32'd1);

assign add304_2_fu_113_p2 = (num_a_sa + 32'd2);

assign add304_3_fu_119_p2 = (num_a_sa + 32'd3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign cmp47_fu_95_p2 = (mode ^ 1'd1);

assign fifo_SA_O_0_0_0_din = grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_0_din;

assign fifo_SA_O_0_0_1_din = grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_1_din;

assign fifo_SA_O_0_0_2_din = grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_2_din;

assign fifo_SA_O_0_0_3_din = grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_fifo_SA_O_0_0_3_din;

assign grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_start = grp_PE_Pipeline_VITIS_LOOP_385_5_fu_64_ap_start_reg;

assign sub267_fu_101_p2 = ($signed(num) + $signed(32'd4294967295));

assign sub_fu_89_p2 = (num_a_sa + 32'd6);

endmodule //top_PE
