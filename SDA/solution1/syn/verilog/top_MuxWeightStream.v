// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_MuxWeightStream (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        MM_SA_W_0_0_dout,
        MM_SA_W_0_0_empty_n,
        MM_SA_W_0_0_read,
        MM_SA_W_0_1_dout,
        MM_SA_W_0_1_empty_n,
        MM_SA_W_0_1_read,
        MM_SA_W_0_2_dout,
        MM_SA_W_0_2_empty_n,
        MM_SA_W_0_2_read,
        MM_SA_W_0_3_dout,
        MM_SA_W_0_3_empty_n,
        MM_SA_W_0_3_read,
        MM_SA_W_1_0_dout,
        MM_SA_W_1_0_empty_n,
        MM_SA_W_1_0_read,
        MM_SA_W_1_1_dout,
        MM_SA_W_1_1_empty_n,
        MM_SA_W_1_1_read,
        MM_SA_W_1_2_dout,
        MM_SA_W_1_2_empty_n,
        MM_SA_W_1_2_read,
        MM_SA_W_1_3_dout,
        MM_SA_W_1_3_empty_n,
        MM_SA_W_1_3_read,
        MM_SA_W_2_0_dout,
        MM_SA_W_2_0_empty_n,
        MM_SA_W_2_0_read,
        MM_SA_W_2_1_dout,
        MM_SA_W_2_1_empty_n,
        MM_SA_W_2_1_read,
        MM_SA_W_2_2_dout,
        MM_SA_W_2_2_empty_n,
        MM_SA_W_2_2_read,
        MM_SA_W_2_3_dout,
        MM_SA_W_2_3_empty_n,
        MM_SA_W_2_3_read,
        MM_SA_W_3_0_dout,
        MM_SA_W_3_0_empty_n,
        MM_SA_W_3_0_read,
        MM_SA_W_3_1_dout,
        MM_SA_W_3_1_empty_n,
        MM_SA_W_3_1_read,
        MM_SA_W_3_2_dout,
        MM_SA_W_3_2_empty_n,
        MM_SA_W_3_2_read,
        MM_SA_W_3_3_dout,
        MM_SA_W_3_3_empty_n,
        MM_SA_W_3_3_read,
        Conv_SA_W_0_0_dout,
        Conv_SA_W_0_0_empty_n,
        Conv_SA_W_0_0_read,
        Conv_SA_W_0_1_dout,
        Conv_SA_W_0_1_empty_n,
        Conv_SA_W_0_1_read,
        Conv_SA_W_0_2_dout,
        Conv_SA_W_0_2_empty_n,
        Conv_SA_W_0_2_read,
        Conv_SA_W_0_3_dout,
        Conv_SA_W_0_3_empty_n,
        Conv_SA_W_0_3_read,
        Conv_SA_W_1_0_dout,
        Conv_SA_W_1_0_empty_n,
        Conv_SA_W_1_0_read,
        Conv_SA_W_1_1_dout,
        Conv_SA_W_1_1_empty_n,
        Conv_SA_W_1_1_read,
        Conv_SA_W_1_2_dout,
        Conv_SA_W_1_2_empty_n,
        Conv_SA_W_1_2_read,
        Conv_SA_W_1_3_dout,
        Conv_SA_W_1_3_empty_n,
        Conv_SA_W_1_3_read,
        Conv_SA_W_2_0_dout,
        Conv_SA_W_2_0_empty_n,
        Conv_SA_W_2_0_read,
        Conv_SA_W_2_1_dout,
        Conv_SA_W_2_1_empty_n,
        Conv_SA_W_2_1_read,
        Conv_SA_W_2_2_dout,
        Conv_SA_W_2_2_empty_n,
        Conv_SA_W_2_2_read,
        Conv_SA_W_2_3_dout,
        Conv_SA_W_2_3_empty_n,
        Conv_SA_W_2_3_read,
        Conv_SA_W_3_0_dout,
        Conv_SA_W_3_0_empty_n,
        Conv_SA_W_3_0_read,
        Conv_SA_W_3_1_dout,
        Conv_SA_W_3_1_empty_n,
        Conv_SA_W_3_1_read,
        Conv_SA_W_3_2_dout,
        Conv_SA_W_3_2_empty_n,
        Conv_SA_W_3_2_read,
        Conv_SA_W_3_3_dout,
        Conv_SA_W_3_3_empty_n,
        Conv_SA_W_3_3_read,
        fifo_SA_W_0_0_din,
        fifo_SA_W_0_0_full_n,
        fifo_SA_W_0_0_write,
        fifo_SA_W_0_1_din,
        fifo_SA_W_0_1_full_n,
        fifo_SA_W_0_1_write,
        fifo_SA_W_0_2_din,
        fifo_SA_W_0_2_full_n,
        fifo_SA_W_0_2_write,
        fifo_SA_W_0_3_din,
        fifo_SA_W_0_3_full_n,
        fifo_SA_W_0_3_write,
        fifo_SA_W_1_0_din,
        fifo_SA_W_1_0_full_n,
        fifo_SA_W_1_0_write,
        fifo_SA_W_1_1_din,
        fifo_SA_W_1_1_full_n,
        fifo_SA_W_1_1_write,
        fifo_SA_W_1_2_din,
        fifo_SA_W_1_2_full_n,
        fifo_SA_W_1_2_write,
        fifo_SA_W_1_3_din,
        fifo_SA_W_1_3_full_n,
        fifo_SA_W_1_3_write,
        fifo_SA_W_2_0_din,
        fifo_SA_W_2_0_full_n,
        fifo_SA_W_2_0_write,
        fifo_SA_W_2_1_din,
        fifo_SA_W_2_1_full_n,
        fifo_SA_W_2_1_write,
        fifo_SA_W_2_2_din,
        fifo_SA_W_2_2_full_n,
        fifo_SA_W_2_2_write,
        fifo_SA_W_2_3_din,
        fifo_SA_W_2_3_full_n,
        fifo_SA_W_2_3_write,
        fifo_SA_W_3_0_din,
        fifo_SA_W_3_0_full_n,
        fifo_SA_W_3_0_write,
        fifo_SA_W_3_1_din,
        fifo_SA_W_3_1_full_n,
        fifo_SA_W_3_1_write,
        fifo_SA_W_3_2_din,
        fifo_SA_W_3_2_full_n,
        fifo_SA_W_3_2_write,
        fifo_SA_W_3_3_din,
        fifo_SA_W_3_3_full_n,
        fifo_SA_W_3_3_write,
        num_w_sa,
        mode
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] MM_SA_W_0_0_dout;
input   MM_SA_W_0_0_empty_n;
output   MM_SA_W_0_0_read;
input  [31:0] MM_SA_W_0_1_dout;
input   MM_SA_W_0_1_empty_n;
output   MM_SA_W_0_1_read;
input  [31:0] MM_SA_W_0_2_dout;
input   MM_SA_W_0_2_empty_n;
output   MM_SA_W_0_2_read;
input  [31:0] MM_SA_W_0_3_dout;
input   MM_SA_W_0_3_empty_n;
output   MM_SA_W_0_3_read;
input  [31:0] MM_SA_W_1_0_dout;
input   MM_SA_W_1_0_empty_n;
output   MM_SA_W_1_0_read;
input  [31:0] MM_SA_W_1_1_dout;
input   MM_SA_W_1_1_empty_n;
output   MM_SA_W_1_1_read;
input  [31:0] MM_SA_W_1_2_dout;
input   MM_SA_W_1_2_empty_n;
output   MM_SA_W_1_2_read;
input  [31:0] MM_SA_W_1_3_dout;
input   MM_SA_W_1_3_empty_n;
output   MM_SA_W_1_3_read;
input  [31:0] MM_SA_W_2_0_dout;
input   MM_SA_W_2_0_empty_n;
output   MM_SA_W_2_0_read;
input  [31:0] MM_SA_W_2_1_dout;
input   MM_SA_W_2_1_empty_n;
output   MM_SA_W_2_1_read;
input  [31:0] MM_SA_W_2_2_dout;
input   MM_SA_W_2_2_empty_n;
output   MM_SA_W_2_2_read;
input  [31:0] MM_SA_W_2_3_dout;
input   MM_SA_W_2_3_empty_n;
output   MM_SA_W_2_3_read;
input  [31:0] MM_SA_W_3_0_dout;
input   MM_SA_W_3_0_empty_n;
output   MM_SA_W_3_0_read;
input  [31:0] MM_SA_W_3_1_dout;
input   MM_SA_W_3_1_empty_n;
output   MM_SA_W_3_1_read;
input  [31:0] MM_SA_W_3_2_dout;
input   MM_SA_W_3_2_empty_n;
output   MM_SA_W_3_2_read;
input  [31:0] MM_SA_W_3_3_dout;
input   MM_SA_W_3_3_empty_n;
output   MM_SA_W_3_3_read;
input  [31:0] Conv_SA_W_0_0_dout;
input   Conv_SA_W_0_0_empty_n;
output   Conv_SA_W_0_0_read;
input  [31:0] Conv_SA_W_0_1_dout;
input   Conv_SA_W_0_1_empty_n;
output   Conv_SA_W_0_1_read;
input  [31:0] Conv_SA_W_0_2_dout;
input   Conv_SA_W_0_2_empty_n;
output   Conv_SA_W_0_2_read;
input  [31:0] Conv_SA_W_0_3_dout;
input   Conv_SA_W_0_3_empty_n;
output   Conv_SA_W_0_3_read;
input  [31:0] Conv_SA_W_1_0_dout;
input   Conv_SA_W_1_0_empty_n;
output   Conv_SA_W_1_0_read;
input  [31:0] Conv_SA_W_1_1_dout;
input   Conv_SA_W_1_1_empty_n;
output   Conv_SA_W_1_1_read;
input  [31:0] Conv_SA_W_1_2_dout;
input   Conv_SA_W_1_2_empty_n;
output   Conv_SA_W_1_2_read;
input  [31:0] Conv_SA_W_1_3_dout;
input   Conv_SA_W_1_3_empty_n;
output   Conv_SA_W_1_3_read;
input  [31:0] Conv_SA_W_2_0_dout;
input   Conv_SA_W_2_0_empty_n;
output   Conv_SA_W_2_0_read;
input  [31:0] Conv_SA_W_2_1_dout;
input   Conv_SA_W_2_1_empty_n;
output   Conv_SA_W_2_1_read;
input  [31:0] Conv_SA_W_2_2_dout;
input   Conv_SA_W_2_2_empty_n;
output   Conv_SA_W_2_2_read;
input  [31:0] Conv_SA_W_2_3_dout;
input   Conv_SA_W_2_3_empty_n;
output   Conv_SA_W_2_3_read;
input  [31:0] Conv_SA_W_3_0_dout;
input   Conv_SA_W_3_0_empty_n;
output   Conv_SA_W_3_0_read;
input  [31:0] Conv_SA_W_3_1_dout;
input   Conv_SA_W_3_1_empty_n;
output   Conv_SA_W_3_1_read;
input  [31:0] Conv_SA_W_3_2_dout;
input   Conv_SA_W_3_2_empty_n;
output   Conv_SA_W_3_2_read;
input  [31:0] Conv_SA_W_3_3_dout;
input   Conv_SA_W_3_3_empty_n;
output   Conv_SA_W_3_3_read;
output  [31:0] fifo_SA_W_0_0_din;
input   fifo_SA_W_0_0_full_n;
output   fifo_SA_W_0_0_write;
output  [31:0] fifo_SA_W_0_1_din;
input   fifo_SA_W_0_1_full_n;
output   fifo_SA_W_0_1_write;
output  [31:0] fifo_SA_W_0_2_din;
input   fifo_SA_W_0_2_full_n;
output   fifo_SA_W_0_2_write;
output  [31:0] fifo_SA_W_0_3_din;
input   fifo_SA_W_0_3_full_n;
output   fifo_SA_W_0_3_write;
output  [31:0] fifo_SA_W_1_0_din;
input   fifo_SA_W_1_0_full_n;
output   fifo_SA_W_1_0_write;
output  [31:0] fifo_SA_W_1_1_din;
input   fifo_SA_W_1_1_full_n;
output   fifo_SA_W_1_1_write;
output  [31:0] fifo_SA_W_1_2_din;
input   fifo_SA_W_1_2_full_n;
output   fifo_SA_W_1_2_write;
output  [31:0] fifo_SA_W_1_3_din;
input   fifo_SA_W_1_3_full_n;
output   fifo_SA_W_1_3_write;
output  [31:0] fifo_SA_W_2_0_din;
input   fifo_SA_W_2_0_full_n;
output   fifo_SA_W_2_0_write;
output  [31:0] fifo_SA_W_2_1_din;
input   fifo_SA_W_2_1_full_n;
output   fifo_SA_W_2_1_write;
output  [31:0] fifo_SA_W_2_2_din;
input   fifo_SA_W_2_2_full_n;
output   fifo_SA_W_2_2_write;
output  [31:0] fifo_SA_W_2_3_din;
input   fifo_SA_W_2_3_full_n;
output   fifo_SA_W_2_3_write;
output  [31:0] fifo_SA_W_3_0_din;
input   fifo_SA_W_3_0_full_n;
output   fifo_SA_W_3_0_write;
output  [31:0] fifo_SA_W_3_1_din;
input   fifo_SA_W_3_1_full_n;
output   fifo_SA_W_3_1_write;
output  [31:0] fifo_SA_W_3_2_din;
input   fifo_SA_W_3_2_full_n;
output   fifo_SA_W_3_2_write;
output  [31:0] fifo_SA_W_3_3_din;
input   fifo_SA_W_3_3_full_n;
output   fifo_SA_W_3_3_write;
input  [29:0] num_w_sa;
input  [0:0] mode;

reg ap_idle;
reg MM_SA_W_0_0_read;
reg MM_SA_W_0_1_read;
reg MM_SA_W_0_2_read;
reg MM_SA_W_0_3_read;
reg MM_SA_W_1_0_read;
reg MM_SA_W_1_1_read;
reg MM_SA_W_1_2_read;
reg MM_SA_W_1_3_read;
reg MM_SA_W_2_0_read;
reg MM_SA_W_2_1_read;
reg MM_SA_W_2_2_read;
reg MM_SA_W_2_3_read;
reg MM_SA_W_3_0_read;
reg MM_SA_W_3_1_read;
reg MM_SA_W_3_2_read;
reg MM_SA_W_3_3_read;
reg Conv_SA_W_0_0_read;
reg Conv_SA_W_0_1_read;
reg Conv_SA_W_0_2_read;
reg Conv_SA_W_0_3_read;
reg Conv_SA_W_1_0_read;
reg Conv_SA_W_1_1_read;
reg Conv_SA_W_1_2_read;
reg Conv_SA_W_1_3_read;
reg Conv_SA_W_2_0_read;
reg Conv_SA_W_2_1_read;
reg Conv_SA_W_2_2_read;
reg Conv_SA_W_2_3_read;
reg Conv_SA_W_3_0_read;
reg Conv_SA_W_3_1_read;
reg Conv_SA_W_3_2_read;
reg Conv_SA_W_3_3_read;
reg fifo_SA_W_0_0_write;
reg fifo_SA_W_0_1_write;
reg fifo_SA_W_0_2_write;
reg fifo_SA_W_0_3_write;
reg fifo_SA_W_1_0_write;
reg fifo_SA_W_1_1_write;
reg fifo_SA_W_1_2_write;
reg fifo_SA_W_1_3_write;
reg fifo_SA_W_2_0_write;
reg fifo_SA_W_2_1_write;
reg fifo_SA_W_2_2_write;
reg fifo_SA_W_2_3_write;
reg fifo_SA_W_3_0_write;
reg fifo_SA_W_3_1_write;
reg fifo_SA_W_3_2_write;
reg fifo_SA_W_3_3_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg   [0:0] icmp_ln307_reg_682;
reg    ap_predicate_op67_read_state2;
reg    ap_predicate_op68_read_state2;
reg    ap_predicate_op69_read_state2;
reg    ap_predicate_op70_read_state2;
reg    ap_predicate_op71_read_state2;
reg    ap_predicate_op72_read_state2;
reg    ap_predicate_op73_read_state2;
reg    ap_predicate_op74_read_state2;
reg    ap_predicate_op75_read_state2;
reg    ap_predicate_op76_read_state2;
reg    ap_predicate_op77_read_state2;
reg    ap_predicate_op78_read_state2;
reg    ap_predicate_op79_read_state2;
reg    ap_predicate_op80_read_state2;
reg    ap_predicate_op81_read_state2;
reg    ap_predicate_op82_read_state2;
reg    ap_predicate_op84_read_state2;
reg    ap_predicate_op85_read_state2;
reg    ap_predicate_op86_read_state2;
reg    ap_predicate_op87_read_state2;
reg    ap_predicate_op88_read_state2;
reg    ap_predicate_op89_read_state2;
reg    ap_predicate_op90_read_state2;
reg    ap_predicate_op91_read_state2;
reg    ap_predicate_op92_read_state2;
reg    ap_predicate_op93_read_state2;
reg    ap_predicate_op94_read_state2;
reg    ap_predicate_op95_read_state2;
reg    ap_predicate_op96_read_state2;
reg    ap_predicate_op97_read_state2;
reg    ap_predicate_op98_read_state2;
reg    ap_predicate_op99_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln307_fu_654_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    Conv_SA_W_0_0_blk_n;
wire    ap_block_pp0_stage0;
reg    Conv_SA_W_0_1_blk_n;
reg    Conv_SA_W_0_2_blk_n;
reg    Conv_SA_W_0_3_blk_n;
reg    Conv_SA_W_1_0_blk_n;
reg    Conv_SA_W_1_1_blk_n;
reg    Conv_SA_W_1_2_blk_n;
reg    Conv_SA_W_1_3_blk_n;
reg    Conv_SA_W_2_0_blk_n;
reg    Conv_SA_W_2_1_blk_n;
reg    Conv_SA_W_2_2_blk_n;
reg    Conv_SA_W_2_3_blk_n;
reg    Conv_SA_W_3_0_blk_n;
reg    Conv_SA_W_3_1_blk_n;
reg    Conv_SA_W_3_2_blk_n;
reg    Conv_SA_W_3_3_blk_n;
reg    MM_SA_W_0_0_blk_n;
reg    MM_SA_W_0_1_blk_n;
reg    MM_SA_W_0_2_blk_n;
reg    MM_SA_W_0_3_blk_n;
reg    MM_SA_W_1_0_blk_n;
reg    MM_SA_W_1_1_blk_n;
reg    MM_SA_W_1_2_blk_n;
reg    MM_SA_W_1_3_blk_n;
reg    MM_SA_W_2_0_blk_n;
reg    MM_SA_W_2_1_blk_n;
reg    MM_SA_W_2_2_blk_n;
reg    MM_SA_W_2_3_blk_n;
reg    MM_SA_W_3_0_blk_n;
reg    MM_SA_W_3_1_blk_n;
reg    MM_SA_W_3_2_blk_n;
reg    MM_SA_W_3_3_blk_n;
reg    fifo_SA_W_0_0_blk_n;
reg    fifo_SA_W_0_1_blk_n;
reg    fifo_SA_W_0_2_blk_n;
reg    fifo_SA_W_0_3_blk_n;
reg    fifo_SA_W_1_0_blk_n;
reg    fifo_SA_W_1_1_blk_n;
reg    fifo_SA_W_1_2_blk_n;
reg    fifo_SA_W_1_3_blk_n;
reg    fifo_SA_W_2_0_blk_n;
reg    fifo_SA_W_2_1_blk_n;
reg    fifo_SA_W_2_2_blk_n;
reg    fifo_SA_W_2_3_blk_n;
reg    fifo_SA_W_3_0_blk_n;
reg    fifo_SA_W_3_1_blk_n;
reg    fifo_SA_W_3_2_blk_n;
reg    fifo_SA_W_3_3_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] ap_phi_mux_temp_0_335109_phi_fu_457_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_0_335109_reg_454;
reg   [31:0] ap_phi_mux_temp_0_1139597107_phi_fu_469_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_0_1139597107_reg_466;
reg   [31:0] ap_phi_mux_temp_0399399105_phi_fu_481_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_0399399105_reg_478;
reg   [31:0] ap_phi_mux_temp_0_224101103_phi_fu_493_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_0_224101103_reg_490;
reg   [31:0] ap_phi_mux_temp_0_1_391_phi_fu_505_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_0_1_391_reg_502;
reg   [31:0] ap_phi_mux_temp_0_1_1777989_phi_fu_517_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_0_1_1777989_reg_514;
reg   [31:0] ap_phi_mux_temp_0_141758187_phi_fu_529_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_0_141758187_reg_526;
reg   [31:0] ap_phi_mux_temp_0_1_28385_phi_fu_541_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_0_1_28385_reg_538;
reg   [31:0] ap_phi_mux_temp_0_2_373_phi_fu_553_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_0_2_373_reg_550;
reg   [31:0] ap_phi_mux_temp_0_2_1596171_phi_fu_565_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_0_2_1596171_reg_562;
reg   [31:0] ap_phi_mux_temp_0_243576369_phi_fu_577_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_0_243576369_reg_574;
reg   [31:0] ap_phi_mux_temp_0_2_26567_phi_fu_589_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_0_2_26567_reg_586;
reg   [31:0] ap_phi_mux_temp_0_3_255_phi_fu_601_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_0_3_255_reg_598;
reg   [31:0] ap_phi_mux_temp_0_3454753_phi_fu_613_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_0_3454753_reg_610;
reg   [31:0] ap_phi_mux_temp_0_3_14951_phi_fu_625_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_0_3_14951_reg_622;
reg   [31:0] ap_phi_mux_temp_phi_fu_637_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_reg_634;
reg   [29:0] i_fu_134;
wire   [29:0] i_4_fu_660_p2;
wire    ap_loop_init;
reg   [29:0] ap_sig_allocacmp_i_3;
reg    ap_block_pp0_stage0_01001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 i_fu_134 = 30'd0;
#0 ap_done_reg = 1'b0;
end

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln307_fu_654_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_134 <= i_4_fu_660_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_134 <= 30'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln307_reg_682 <= icmp_ln307_fu_654_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op84_read_state2 == 1'b1))) begin
        Conv_SA_W_0_0_blk_n = Conv_SA_W_0_0_empty_n;
    end else begin
        Conv_SA_W_0_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op84_read_state2 == 1'b1))) begin
        Conv_SA_W_0_0_read = 1'b1;
    end else begin
        Conv_SA_W_0_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op85_read_state2 == 1'b1))) begin
        Conv_SA_W_0_1_blk_n = Conv_SA_W_0_1_empty_n;
    end else begin
        Conv_SA_W_0_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op85_read_state2 == 1'b1))) begin
        Conv_SA_W_0_1_read = 1'b1;
    end else begin
        Conv_SA_W_0_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op86_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_0_2_blk_n = Conv_SA_W_0_2_empty_n;
    end else begin
        Conv_SA_W_0_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op86_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_0_2_read = 1'b1;
    end else begin
        Conv_SA_W_0_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op87_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_0_3_blk_n = Conv_SA_W_0_3_empty_n;
    end else begin
        Conv_SA_W_0_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op87_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_0_3_read = 1'b1;
    end else begin
        Conv_SA_W_0_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op88_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_1_0_blk_n = Conv_SA_W_1_0_empty_n;
    end else begin
        Conv_SA_W_1_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op88_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_1_0_read = 1'b1;
    end else begin
        Conv_SA_W_1_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op89_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_1_1_blk_n = Conv_SA_W_1_1_empty_n;
    end else begin
        Conv_SA_W_1_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op89_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_1_1_read = 1'b1;
    end else begin
        Conv_SA_W_1_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op90_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_1_2_blk_n = Conv_SA_W_1_2_empty_n;
    end else begin
        Conv_SA_W_1_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op90_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_1_2_read = 1'b1;
    end else begin
        Conv_SA_W_1_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op91_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_1_3_blk_n = Conv_SA_W_1_3_empty_n;
    end else begin
        Conv_SA_W_1_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op91_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_1_3_read = 1'b1;
    end else begin
        Conv_SA_W_1_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op92_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_2_0_blk_n = Conv_SA_W_2_0_empty_n;
    end else begin
        Conv_SA_W_2_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op92_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_2_0_read = 1'b1;
    end else begin
        Conv_SA_W_2_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op93_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_2_1_blk_n = Conv_SA_W_2_1_empty_n;
    end else begin
        Conv_SA_W_2_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op93_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_2_1_read = 1'b1;
    end else begin
        Conv_SA_W_2_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op94_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_2_2_blk_n = Conv_SA_W_2_2_empty_n;
    end else begin
        Conv_SA_W_2_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op94_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_2_2_read = 1'b1;
    end else begin
        Conv_SA_W_2_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op95_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_2_3_blk_n = Conv_SA_W_2_3_empty_n;
    end else begin
        Conv_SA_W_2_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op95_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_2_3_read = 1'b1;
    end else begin
        Conv_SA_W_2_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op96_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_3_0_blk_n = Conv_SA_W_3_0_empty_n;
    end else begin
        Conv_SA_W_3_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op96_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_3_0_read = 1'b1;
    end else begin
        Conv_SA_W_3_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op97_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_3_1_blk_n = Conv_SA_W_3_1_empty_n;
    end else begin
        Conv_SA_W_3_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op97_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_3_1_read = 1'b1;
    end else begin
        Conv_SA_W_3_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op98_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_3_2_blk_n = Conv_SA_W_3_2_empty_n;
    end else begin
        Conv_SA_W_3_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op98_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_3_2_read = 1'b1;
    end else begin
        Conv_SA_W_3_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op99_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_3_3_blk_n = Conv_SA_W_3_3_empty_n;
    end else begin
        Conv_SA_W_3_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op99_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Conv_SA_W_3_3_read = 1'b1;
    end else begin
        Conv_SA_W_3_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op67_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MM_SA_W_0_0_blk_n = MM_SA_W_0_0_empty_n;
    end else begin
        MM_SA_W_0_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op67_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MM_SA_W_0_0_read = 1'b1;
    end else begin
        MM_SA_W_0_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op68_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MM_SA_W_0_1_blk_n = MM_SA_W_0_1_empty_n;
    end else begin
        MM_SA_W_0_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op68_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MM_SA_W_0_1_read = 1'b1;
    end else begin
        MM_SA_W_0_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op69_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MM_SA_W_0_2_blk_n = MM_SA_W_0_2_empty_n;
    end else begin
        MM_SA_W_0_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op69_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MM_SA_W_0_2_read = 1'b1;
    end else begin
        MM_SA_W_0_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op70_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MM_SA_W_0_3_blk_n = MM_SA_W_0_3_empty_n;
    end else begin
        MM_SA_W_0_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op70_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MM_SA_W_0_3_read = 1'b1;
    end else begin
        MM_SA_W_0_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op71_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MM_SA_W_1_0_blk_n = MM_SA_W_1_0_empty_n;
    end else begin
        MM_SA_W_1_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op71_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MM_SA_W_1_0_read = 1'b1;
    end else begin
        MM_SA_W_1_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op72_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MM_SA_W_1_1_blk_n = MM_SA_W_1_1_empty_n;
    end else begin
        MM_SA_W_1_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op72_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MM_SA_W_1_1_read = 1'b1;
    end else begin
        MM_SA_W_1_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op73_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MM_SA_W_1_2_blk_n = MM_SA_W_1_2_empty_n;
    end else begin
        MM_SA_W_1_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op73_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MM_SA_W_1_2_read = 1'b1;
    end else begin
        MM_SA_W_1_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op74_read_state2 == 1'b1))) begin
        MM_SA_W_1_3_blk_n = MM_SA_W_1_3_empty_n;
    end else begin
        MM_SA_W_1_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op74_read_state2 == 1'b1))) begin
        MM_SA_W_1_3_read = 1'b1;
    end else begin
        MM_SA_W_1_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op75_read_state2 == 1'b1))) begin
        MM_SA_W_2_0_blk_n = MM_SA_W_2_0_empty_n;
    end else begin
        MM_SA_W_2_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op75_read_state2 == 1'b1))) begin
        MM_SA_W_2_0_read = 1'b1;
    end else begin
        MM_SA_W_2_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op76_read_state2 == 1'b1))) begin
        MM_SA_W_2_1_blk_n = MM_SA_W_2_1_empty_n;
    end else begin
        MM_SA_W_2_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op76_read_state2 == 1'b1))) begin
        MM_SA_W_2_1_read = 1'b1;
    end else begin
        MM_SA_W_2_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op77_read_state2 == 1'b1))) begin
        MM_SA_W_2_2_blk_n = MM_SA_W_2_2_empty_n;
    end else begin
        MM_SA_W_2_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op77_read_state2 == 1'b1))) begin
        MM_SA_W_2_2_read = 1'b1;
    end else begin
        MM_SA_W_2_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op78_read_state2 == 1'b1))) begin
        MM_SA_W_2_3_blk_n = MM_SA_W_2_3_empty_n;
    end else begin
        MM_SA_W_2_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op78_read_state2 == 1'b1))) begin
        MM_SA_W_2_3_read = 1'b1;
    end else begin
        MM_SA_W_2_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op79_read_state2 == 1'b1))) begin
        MM_SA_W_3_0_blk_n = MM_SA_W_3_0_empty_n;
    end else begin
        MM_SA_W_3_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op79_read_state2 == 1'b1))) begin
        MM_SA_W_3_0_read = 1'b1;
    end else begin
        MM_SA_W_3_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op80_read_state2 == 1'b1))) begin
        MM_SA_W_3_1_blk_n = MM_SA_W_3_1_empty_n;
    end else begin
        MM_SA_W_3_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op80_read_state2 == 1'b1))) begin
        MM_SA_W_3_1_read = 1'b1;
    end else begin
        MM_SA_W_3_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op81_read_state2 == 1'b1))) begin
        MM_SA_W_3_2_blk_n = MM_SA_W_3_2_empty_n;
    end else begin
        MM_SA_W_3_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op81_read_state2 == 1'b1))) begin
        MM_SA_W_3_2_read = 1'b1;
    end else begin
        MM_SA_W_3_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op82_read_state2 == 1'b1))) begin
        MM_SA_W_3_3_blk_n = MM_SA_W_3_3_empty_n;
    end else begin
        MM_SA_W_3_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op82_read_state2 == 1'b1))) begin
        MM_SA_W_3_3_read = 1'b1;
    end else begin
        MM_SA_W_3_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln307_fu_654_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln307_reg_682 == 1'd0)) begin
        if ((mode == 1'd1)) begin
            ap_phi_mux_temp_0399399105_phi_fu_481_p4 = Conv_SA_W_0_0_dout;
        end else if ((mode == 1'd0)) begin
            ap_phi_mux_temp_0399399105_phi_fu_481_p4 = MM_SA_W_0_0_dout;
        end else begin
            ap_phi_mux_temp_0399399105_phi_fu_481_p4 = ap_phi_reg_pp0_iter1_temp_0399399105_reg_478;
        end
    end else begin
        ap_phi_mux_temp_0399399105_phi_fu_481_p4 = ap_phi_reg_pp0_iter1_temp_0399399105_reg_478;
    end
end

always @ (*) begin
    if ((icmp_ln307_reg_682 == 1'd0)) begin
        if ((mode == 1'd1)) begin
            ap_phi_mux_temp_0_1139597107_phi_fu_469_p4 = Conv_SA_W_0_1_dout;
        end else if ((mode == 1'd0)) begin
            ap_phi_mux_temp_0_1139597107_phi_fu_469_p4 = MM_SA_W_0_1_dout;
        end else begin
            ap_phi_mux_temp_0_1139597107_phi_fu_469_p4 = ap_phi_reg_pp0_iter1_temp_0_1139597107_reg_466;
        end
    end else begin
        ap_phi_mux_temp_0_1139597107_phi_fu_469_p4 = ap_phi_reg_pp0_iter1_temp_0_1139597107_reg_466;
    end
end

always @ (*) begin
    if ((icmp_ln307_reg_682 == 1'd0)) begin
        if ((mode == 1'd1)) begin
            ap_phi_mux_temp_0_141758187_phi_fu_529_p4 = Conv_SA_W_1_0_dout;
        end else if ((mode == 1'd0)) begin
            ap_phi_mux_temp_0_141758187_phi_fu_529_p4 = MM_SA_W_1_0_dout;
        end else begin
            ap_phi_mux_temp_0_141758187_phi_fu_529_p4 = ap_phi_reg_pp0_iter1_temp_0_141758187_reg_526;
        end
    end else begin
        ap_phi_mux_temp_0_141758187_phi_fu_529_p4 = ap_phi_reg_pp0_iter1_temp_0_141758187_reg_526;
    end
end

always @ (*) begin
    if ((icmp_ln307_reg_682 == 1'd0)) begin
        if ((mode == 1'd1)) begin
            ap_phi_mux_temp_0_1_1777989_phi_fu_517_p4 = Conv_SA_W_1_1_dout;
        end else if ((mode == 1'd0)) begin
            ap_phi_mux_temp_0_1_1777989_phi_fu_517_p4 = MM_SA_W_1_1_dout;
        end else begin
            ap_phi_mux_temp_0_1_1777989_phi_fu_517_p4 = ap_phi_reg_pp0_iter1_temp_0_1_1777989_reg_514;
        end
    end else begin
        ap_phi_mux_temp_0_1_1777989_phi_fu_517_p4 = ap_phi_reg_pp0_iter1_temp_0_1_1777989_reg_514;
    end
end

always @ (*) begin
    if ((icmp_ln307_reg_682 == 1'd0)) begin
        if ((mode == 1'd1)) begin
            ap_phi_mux_temp_0_1_28385_phi_fu_541_p4 = Conv_SA_W_1_2_dout;
        end else if ((mode == 1'd0)) begin
            ap_phi_mux_temp_0_1_28385_phi_fu_541_p4 = MM_SA_W_1_2_dout;
        end else begin
            ap_phi_mux_temp_0_1_28385_phi_fu_541_p4 = ap_phi_reg_pp0_iter1_temp_0_1_28385_reg_538;
        end
    end else begin
        ap_phi_mux_temp_0_1_28385_phi_fu_541_p4 = ap_phi_reg_pp0_iter1_temp_0_1_28385_reg_538;
    end
end

always @ (*) begin
    if ((icmp_ln307_reg_682 == 1'd0)) begin
        if ((mode == 1'd1)) begin
            ap_phi_mux_temp_0_1_391_phi_fu_505_p4 = Conv_SA_W_1_3_dout;
        end else if ((mode == 1'd0)) begin
            ap_phi_mux_temp_0_1_391_phi_fu_505_p4 = MM_SA_W_1_3_dout;
        end else begin
            ap_phi_mux_temp_0_1_391_phi_fu_505_p4 = ap_phi_reg_pp0_iter1_temp_0_1_391_reg_502;
        end
    end else begin
        ap_phi_mux_temp_0_1_391_phi_fu_505_p4 = ap_phi_reg_pp0_iter1_temp_0_1_391_reg_502;
    end
end

always @ (*) begin
    if ((icmp_ln307_reg_682 == 1'd0)) begin
        if ((mode == 1'd1)) begin
            ap_phi_mux_temp_0_224101103_phi_fu_493_p4 = Conv_SA_W_0_2_dout;
        end else if ((mode == 1'd0)) begin
            ap_phi_mux_temp_0_224101103_phi_fu_493_p4 = MM_SA_W_0_2_dout;
        end else begin
            ap_phi_mux_temp_0_224101103_phi_fu_493_p4 = ap_phi_reg_pp0_iter1_temp_0_224101103_reg_490;
        end
    end else begin
        ap_phi_mux_temp_0_224101103_phi_fu_493_p4 = ap_phi_reg_pp0_iter1_temp_0_224101103_reg_490;
    end
end

always @ (*) begin
    if ((icmp_ln307_reg_682 == 1'd0)) begin
        if ((mode == 1'd1)) begin
            ap_phi_mux_temp_0_243576369_phi_fu_577_p4 = Conv_SA_W_2_0_dout;
        end else if ((mode == 1'd0)) begin
            ap_phi_mux_temp_0_243576369_phi_fu_577_p4 = MM_SA_W_2_0_dout;
        end else begin
            ap_phi_mux_temp_0_243576369_phi_fu_577_p4 = ap_phi_reg_pp0_iter1_temp_0_243576369_reg_574;
        end
    end else begin
        ap_phi_mux_temp_0_243576369_phi_fu_577_p4 = ap_phi_reg_pp0_iter1_temp_0_243576369_reg_574;
    end
end

always @ (*) begin
    if ((icmp_ln307_reg_682 == 1'd0)) begin
        if ((mode == 1'd1)) begin
            ap_phi_mux_temp_0_2_1596171_phi_fu_565_p4 = Conv_SA_W_2_1_dout;
        end else if ((mode == 1'd0)) begin
            ap_phi_mux_temp_0_2_1596171_phi_fu_565_p4 = MM_SA_W_2_1_dout;
        end else begin
            ap_phi_mux_temp_0_2_1596171_phi_fu_565_p4 = ap_phi_reg_pp0_iter1_temp_0_2_1596171_reg_562;
        end
    end else begin
        ap_phi_mux_temp_0_2_1596171_phi_fu_565_p4 = ap_phi_reg_pp0_iter1_temp_0_2_1596171_reg_562;
    end
end

always @ (*) begin
    if ((icmp_ln307_reg_682 == 1'd0)) begin
        if ((mode == 1'd1)) begin
            ap_phi_mux_temp_0_2_26567_phi_fu_589_p4 = Conv_SA_W_2_2_dout;
        end else if ((mode == 1'd0)) begin
            ap_phi_mux_temp_0_2_26567_phi_fu_589_p4 = MM_SA_W_2_2_dout;
        end else begin
            ap_phi_mux_temp_0_2_26567_phi_fu_589_p4 = ap_phi_reg_pp0_iter1_temp_0_2_26567_reg_586;
        end
    end else begin
        ap_phi_mux_temp_0_2_26567_phi_fu_589_p4 = ap_phi_reg_pp0_iter1_temp_0_2_26567_reg_586;
    end
end

always @ (*) begin
    if ((icmp_ln307_reg_682 == 1'd0)) begin
        if ((mode == 1'd1)) begin
            ap_phi_mux_temp_0_2_373_phi_fu_553_p4 = Conv_SA_W_2_3_dout;
        end else if ((mode == 1'd0)) begin
            ap_phi_mux_temp_0_2_373_phi_fu_553_p4 = MM_SA_W_2_3_dout;
        end else begin
            ap_phi_mux_temp_0_2_373_phi_fu_553_p4 = ap_phi_reg_pp0_iter1_temp_0_2_373_reg_550;
        end
    end else begin
        ap_phi_mux_temp_0_2_373_phi_fu_553_p4 = ap_phi_reg_pp0_iter1_temp_0_2_373_reg_550;
    end
end

always @ (*) begin
    if ((icmp_ln307_reg_682 == 1'd0)) begin
        if ((mode == 1'd1)) begin
            ap_phi_mux_temp_0_335109_phi_fu_457_p4 = Conv_SA_W_0_3_dout;
        end else if ((mode == 1'd0)) begin
            ap_phi_mux_temp_0_335109_phi_fu_457_p4 = MM_SA_W_0_3_dout;
        end else begin
            ap_phi_mux_temp_0_335109_phi_fu_457_p4 = ap_phi_reg_pp0_iter1_temp_0_335109_reg_454;
        end
    end else begin
        ap_phi_mux_temp_0_335109_phi_fu_457_p4 = ap_phi_reg_pp0_iter1_temp_0_335109_reg_454;
    end
end

always @ (*) begin
    if ((icmp_ln307_reg_682 == 1'd0)) begin
        if ((mode == 1'd1)) begin
            ap_phi_mux_temp_0_3454753_phi_fu_613_p4 = Conv_SA_W_3_0_dout;
        end else if ((mode == 1'd0)) begin
            ap_phi_mux_temp_0_3454753_phi_fu_613_p4 = MM_SA_W_3_0_dout;
        end else begin
            ap_phi_mux_temp_0_3454753_phi_fu_613_p4 = ap_phi_reg_pp0_iter1_temp_0_3454753_reg_610;
        end
    end else begin
        ap_phi_mux_temp_0_3454753_phi_fu_613_p4 = ap_phi_reg_pp0_iter1_temp_0_3454753_reg_610;
    end
end

always @ (*) begin
    if ((icmp_ln307_reg_682 == 1'd0)) begin
        if ((mode == 1'd1)) begin
            ap_phi_mux_temp_0_3_14951_phi_fu_625_p4 = Conv_SA_W_3_1_dout;
        end else if ((mode == 1'd0)) begin
            ap_phi_mux_temp_0_3_14951_phi_fu_625_p4 = MM_SA_W_3_1_dout;
        end else begin
            ap_phi_mux_temp_0_3_14951_phi_fu_625_p4 = ap_phi_reg_pp0_iter1_temp_0_3_14951_reg_622;
        end
    end else begin
        ap_phi_mux_temp_0_3_14951_phi_fu_625_p4 = ap_phi_reg_pp0_iter1_temp_0_3_14951_reg_622;
    end
end

always @ (*) begin
    if ((icmp_ln307_reg_682 == 1'd0)) begin
        if ((mode == 1'd1)) begin
            ap_phi_mux_temp_0_3_255_phi_fu_601_p4 = Conv_SA_W_3_2_dout;
        end else if ((mode == 1'd0)) begin
            ap_phi_mux_temp_0_3_255_phi_fu_601_p4 = MM_SA_W_3_2_dout;
        end else begin
            ap_phi_mux_temp_0_3_255_phi_fu_601_p4 = ap_phi_reg_pp0_iter1_temp_0_3_255_reg_598;
        end
    end else begin
        ap_phi_mux_temp_0_3_255_phi_fu_601_p4 = ap_phi_reg_pp0_iter1_temp_0_3_255_reg_598;
    end
end

always @ (*) begin
    if ((icmp_ln307_reg_682 == 1'd0)) begin
        if ((mode == 1'd1)) begin
            ap_phi_mux_temp_phi_fu_637_p4 = Conv_SA_W_3_3_dout;
        end else if ((mode == 1'd0)) begin
            ap_phi_mux_temp_phi_fu_637_p4 = MM_SA_W_3_3_dout;
        end else begin
            ap_phi_mux_temp_phi_fu_637_p4 = ap_phi_reg_pp0_iter1_temp_reg_634;
        end
    end else begin
        ap_phi_mux_temp_phi_fu_637_p4 = ap_phi_reg_pp0_iter1_temp_reg_634;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_3 = 30'd0;
    end else begin
        ap_sig_allocacmp_i_3 = i_fu_134;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_0_0_blk_n = fifo_SA_W_0_0_full_n;
    end else begin
        fifo_SA_W_0_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_0_0_write = 1'b1;
    end else begin
        fifo_SA_W_0_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_0_1_blk_n = fifo_SA_W_0_1_full_n;
    end else begin
        fifo_SA_W_0_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_0_1_write = 1'b1;
    end else begin
        fifo_SA_W_0_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_0_2_blk_n = fifo_SA_W_0_2_full_n;
    end else begin
        fifo_SA_W_0_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_0_2_write = 1'b1;
    end else begin
        fifo_SA_W_0_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_0_3_blk_n = fifo_SA_W_0_3_full_n;
    end else begin
        fifo_SA_W_0_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_0_3_write = 1'b1;
    end else begin
        fifo_SA_W_0_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_1_0_blk_n = fifo_SA_W_1_0_full_n;
    end else begin
        fifo_SA_W_1_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_1_0_write = 1'b1;
    end else begin
        fifo_SA_W_1_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_1_1_blk_n = fifo_SA_W_1_1_full_n;
    end else begin
        fifo_SA_W_1_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_1_1_write = 1'b1;
    end else begin
        fifo_SA_W_1_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_1_2_blk_n = fifo_SA_W_1_2_full_n;
    end else begin
        fifo_SA_W_1_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_1_2_write = 1'b1;
    end else begin
        fifo_SA_W_1_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_1_3_blk_n = fifo_SA_W_1_3_full_n;
    end else begin
        fifo_SA_W_1_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_1_3_write = 1'b1;
    end else begin
        fifo_SA_W_1_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_2_0_blk_n = fifo_SA_W_2_0_full_n;
    end else begin
        fifo_SA_W_2_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_2_0_write = 1'b1;
    end else begin
        fifo_SA_W_2_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_2_1_blk_n = fifo_SA_W_2_1_full_n;
    end else begin
        fifo_SA_W_2_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_2_1_write = 1'b1;
    end else begin
        fifo_SA_W_2_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_2_2_blk_n = fifo_SA_W_2_2_full_n;
    end else begin
        fifo_SA_W_2_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_2_2_write = 1'b1;
    end else begin
        fifo_SA_W_2_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_2_3_blk_n = fifo_SA_W_2_3_full_n;
    end else begin
        fifo_SA_W_2_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_2_3_write = 1'b1;
    end else begin
        fifo_SA_W_2_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_3_0_blk_n = fifo_SA_W_3_0_full_n;
    end else begin
        fifo_SA_W_3_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_3_0_write = 1'b1;
    end else begin
        fifo_SA_W_3_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_3_1_blk_n = fifo_SA_W_3_1_full_n;
    end else begin
        fifo_SA_W_3_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_3_1_write = 1'b1;
    end else begin
        fifo_SA_W_3_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_3_2_blk_n = fifo_SA_W_3_2_full_n;
    end else begin
        fifo_SA_W_3_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_3_2_write = 1'b1;
    end else begin
        fifo_SA_W_3_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_3_3_blk_n = fifo_SA_W_3_3_full_n;
    end else begin
        fifo_SA_W_3_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_SA_W_3_3_write = 1'b1;
    end else begin
        fifo_SA_W_3_3_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((fifo_SA_W_3_3_full_n == 1'b0) | (fifo_SA_W_3_2_full_n == 1'b0) | (fifo_SA_W_3_1_full_n == 1'b0) | (fifo_SA_W_3_0_full_n == 1'b0) | (fifo_SA_W_2_3_full_n == 1'b0) | (fifo_SA_W_2_2_full_n == 1'b0) | (fifo_SA_W_2_1_full_n == 1'b0) | (fifo_SA_W_2_0_full_n == 1'b0) | (fifo_SA_W_1_3_full_n == 1'b0) | (fifo_SA_W_1_2_full_n == 1'b0) | (fifo_SA_W_1_1_full_n == 1'b0) | (fifo_SA_W_1_0_full_n == 1'b0) | (fifo_SA_W_0_3_full_n == 1'b0) | (fifo_SA_W_0_2_full_n == 1'b0) | (fifo_SA_W_0_1_full_n == 1'b0) | (fifo_SA_W_0_0_full_n == 1'b0) | ((ap_predicate_op73_read_state2 == 1'b1) & (1'b0 == MM_SA_W_1_2_empty_n)) | ((ap_predicate_op72_read_state2 == 1'b1) & (1'b0 == MM_SA_W_1_1_empty_n)) | ((ap_predicate_op71_read_state2 == 1'b1) & (1'b0 == MM_SA_W_1_0_empty_n)) | ((ap_predicate_op70_read_state2 == 1'b1) & (1'b0 == MM_SA_W_0_3_empty_n)) | ((ap_predicate_op69_read_state2 == 1'b1) & (1'b0 == MM_SA_W_0_2_empty_n)) | ((ap_predicate_op68_read_state2 == 1'b1) & (1'b0 == MM_SA_W_0_1_empty_n)) | ((ap_predicate_op67_read_state2 == 1'b1) 
    & (1'b0 == MM_SA_W_0_0_empty_n)) | ((ap_predicate_op99_read_state2 == 1'b1) & (1'b0 == Conv_SA_W_3_3_empty_n)) | ((ap_predicate_op98_read_state2 == 1'b1) & (1'b0 == Conv_SA_W_3_2_empty_n)) | ((ap_predicate_op97_read_state2 == 1'b1) & (1'b0 == Conv_SA_W_3_1_empty_n)) | ((1'b0 == Conv_SA_W_3_0_empty_n) & (ap_predicate_op96_read_state2 == 1'b1)) | ((1'b0 == Conv_SA_W_2_3_empty_n) & (ap_predicate_op95_read_state2 == 1'b1)) | ((1'b0 == Conv_SA_W_2_2_empty_n) & (ap_predicate_op94_read_state2 == 1'b1)) | ((1'b0 == Conv_SA_W_2_1_empty_n) & (ap_predicate_op93_read_state2 == 1'b1)) | ((1'b0 == Conv_SA_W_2_0_empty_n) & (ap_predicate_op92_read_state2 == 1'b1)) | ((1'b0 == Conv_SA_W_1_3_empty_n) & (ap_predicate_op91_read_state2 == 1'b1)) | ((1'b0 == Conv_SA_W_1_2_empty_n) & (ap_predicate_op90_read_state2 == 1'b1)) | ((1'b0 == Conv_SA_W_1_1_empty_n) & (ap_predicate_op89_read_state2 == 1'b1)) | ((1'b0 == Conv_SA_W_1_0_empty_n) & (ap_predicate_op88_read_state2 == 1'b1)) | ((1'b0 == Conv_SA_W_0_3_empty_n) & (ap_predicate_op87_read_state2 
    == 1'b1)) | ((1'b0 == Conv_SA_W_0_2_empty_n) & (ap_predicate_op86_read_state2 == 1'b1)) | ((1'b0 == Conv_SA_W_0_1_empty_n) & (ap_predicate_op85_read_state2 == 1'b1)) | ((1'b0 == Conv_SA_W_0_0_empty_n) & (ap_predicate_op84_read_state2 == 1'b1)) | ((1'b0 == MM_SA_W_3_3_empty_n) & (ap_predicate_op82_read_state2 == 1'b1)) | ((1'b0 == MM_SA_W_3_2_empty_n) & (ap_predicate_op81_read_state2 == 1'b1)) | ((1'b0 == MM_SA_W_3_1_empty_n) & (ap_predicate_op80_read_state2 == 1'b1)) | ((1'b0 == MM_SA_W_3_0_empty_n) & (ap_predicate_op79_read_state2 == 1'b1)) | ((1'b0 == MM_SA_W_2_3_empty_n) & (ap_predicate_op78_read_state2 == 1'b1)) | ((1'b0 == MM_SA_W_2_2_empty_n) & (ap_predicate_op77_read_state2 == 1'b1)) | ((1'b0 == MM_SA_W_2_1_empty_n) & (ap_predicate_op76_read_state2 == 1'b1)) | ((1'b0 == MM_SA_W_2_0_empty_n) & (ap_predicate_op75_read_state2 == 1'b1)) | ((1'b0 == MM_SA_W_1_3_empty_n) & (ap_predicate_op74_read_state2 == 1'b1)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter1_temp_0399399105_reg_478 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_0_1139597107_reg_466 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_0_141758187_reg_526 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_0_1_1777989_reg_514 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_0_1_28385_reg_538 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_0_1_391_reg_502 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_0_224101103_reg_490 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_0_243576369_reg_574 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_0_2_1596171_reg_562 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_0_2_26567_reg_586 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_0_2_373_reg_550 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_0_335109_reg_454 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_0_3454753_reg_610 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_0_3_14951_reg_622 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_0_3_255_reg_598 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_reg_634 = 'bx;

always @ (*) begin
    ap_predicate_op67_read_state2 = ((mode == 1'd0) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op68_read_state2 = ((mode == 1'd0) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op69_read_state2 = ((mode == 1'd0) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op70_read_state2 = ((mode == 1'd0) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op71_read_state2 = ((mode == 1'd0) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op72_read_state2 = ((mode == 1'd0) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op73_read_state2 = ((mode == 1'd0) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op74_read_state2 = ((mode == 1'd0) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op75_read_state2 = ((mode == 1'd0) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op76_read_state2 = ((mode == 1'd0) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op77_read_state2 = ((mode == 1'd0) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op78_read_state2 = ((mode == 1'd0) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op79_read_state2 = ((mode == 1'd0) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op80_read_state2 = ((mode == 1'd0) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op81_read_state2 = ((mode == 1'd0) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op82_read_state2 = ((mode == 1'd0) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op84_read_state2 = ((mode == 1'd1) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op85_read_state2 = ((mode == 1'd1) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op86_read_state2 = ((mode == 1'd1) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op87_read_state2 = ((mode == 1'd1) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op88_read_state2 = ((mode == 1'd1) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op89_read_state2 = ((mode == 1'd1) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op90_read_state2 = ((mode == 1'd1) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op91_read_state2 = ((mode == 1'd1) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op92_read_state2 = ((mode == 1'd1) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op93_read_state2 = ((mode == 1'd1) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op94_read_state2 = ((mode == 1'd1) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op95_read_state2 = ((mode == 1'd1) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op96_read_state2 = ((mode == 1'd1) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op97_read_state2 = ((mode == 1'd1) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op98_read_state2 = ((mode == 1'd1) & (icmp_ln307_reg_682 == 1'd0));
end

always @ (*) begin
    ap_predicate_op99_read_state2 = ((mode == 1'd1) & (icmp_ln307_reg_682 == 1'd0));
end

assign fifo_SA_W_0_0_din = ap_phi_mux_temp_0399399105_phi_fu_481_p4;

assign fifo_SA_W_0_1_din = ap_phi_mux_temp_0_1139597107_phi_fu_469_p4;

assign fifo_SA_W_0_2_din = ap_phi_mux_temp_0_224101103_phi_fu_493_p4;

assign fifo_SA_W_0_3_din = ap_phi_mux_temp_0_335109_phi_fu_457_p4;

assign fifo_SA_W_1_0_din = ap_phi_mux_temp_0_141758187_phi_fu_529_p4;

assign fifo_SA_W_1_1_din = ap_phi_mux_temp_0_1_1777989_phi_fu_517_p4;

assign fifo_SA_W_1_2_din = ap_phi_mux_temp_0_1_28385_phi_fu_541_p4;

assign fifo_SA_W_1_3_din = ap_phi_mux_temp_0_1_391_phi_fu_505_p4;

assign fifo_SA_W_2_0_din = ap_phi_mux_temp_0_243576369_phi_fu_577_p4;

assign fifo_SA_W_2_1_din = ap_phi_mux_temp_0_2_1596171_phi_fu_565_p4;

assign fifo_SA_W_2_2_din = ap_phi_mux_temp_0_2_26567_phi_fu_589_p4;

assign fifo_SA_W_2_3_din = ap_phi_mux_temp_0_2_373_phi_fu_553_p4;

assign fifo_SA_W_3_0_din = ap_phi_mux_temp_0_3454753_phi_fu_613_p4;

assign fifo_SA_W_3_1_din = ap_phi_mux_temp_0_3_14951_phi_fu_625_p4;

assign fifo_SA_W_3_2_din = ap_phi_mux_temp_0_3_255_phi_fu_601_p4;

assign fifo_SA_W_3_3_din = ap_phi_mux_temp_phi_fu_637_p4;

assign i_4_fu_660_p2 = (ap_sig_allocacmp_i_3 + 30'd1);

assign icmp_ln307_fu_654_p2 = ((ap_sig_allocacmp_i_3 == num_w_sa) ? 1'b1 : 1'b0);

endmodule //top_MuxWeightStream
