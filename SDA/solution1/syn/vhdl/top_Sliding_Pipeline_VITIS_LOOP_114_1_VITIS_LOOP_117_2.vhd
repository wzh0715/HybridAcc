-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_Sliding_Pipeline_VITIS_LOOP_114_1_VITIS_LOOP_117_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv3_samepad_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    conv3_samepad_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    conv3_samepad_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    conv3_samepad_empty_n : IN STD_LOGIC;
    conv3_samepad_read : OUT STD_LOGIC;
    conv3_sild_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    conv3_sild_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    conv3_sild_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    conv3_sild_full_n : IN STD_LOGIC;
    conv3_sild_write : OUT STD_LOGIC;
    mul_ln93 : IN STD_LOGIC_VECTOR (59 downto 0);
    sub143 : IN STD_LOGIC_VECTOR (31 downto 0);
    div42_cast : IN STD_LOGIC_VECTOR (11 downto 0);
    empty_48 : IN STD_LOGIC_VECTOR (27 downto 0);
    baseIter : IN STD_LOGIC_VECTOR (31 downto 0);
    zext_ln98 : IN STD_LOGIC_VECTOR (27 downto 0);
    add_ln95 : IN STD_LOGIC_VECTOR (31 downto 0);
    max_cycles : IN STD_LOGIC_VECTOR (31 downto 0);
    cycles_read_block : IN STD_LOGIC_VECTOR (31 downto 0);
    add_ln98 : IN STD_LOGIC_VECTOR (31 downto 0);
    cycles_write_block : IN STD_LOGIC_VECTOR (31 downto 0);
    add63 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_49 : IN STD_LOGIC_VECTOR (11 downto 0);
    add_ln95_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    K_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_50 : IN STD_LOGIC_VECTOR (3 downto 0);
    empty : IN STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of top_Sliding_Pipeline_VITIS_LOOP_114_1_VITIS_LOOP_117_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv60_0 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv60_1 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln121_reg_1260 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_reg_1260_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_1285 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_1285_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op246_read_state9 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal icmp_ln121_reg_1260_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_reg_1264 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_reg_1264_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op255_write_state10 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln114_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal conv3_samepad_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal conv3_sild_blk_n : STD_LOGIC;
    signal reg_324 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln121_reg_1260_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_1285_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln98_cast_fu_328_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln98_cast_reg_1227 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_cast_fu_332_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_cast_reg_1232 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln117_fu_456_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln117_reg_1243 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln117_reg_1243_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln117_3_fu_468_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln117_3_reg_1248 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln117_3_reg_1248_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln117_4_fu_472_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln121_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_reg_1260_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_reg_1260_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_reg_1260_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_reg_1260_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_reg_1264_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_reg_1264_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_reg_1264_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_reg_1264_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_reg_1264_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_reg_1264_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_1285_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_1285_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_1285_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_1285_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1289 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1289_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln171_reg_1293 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln171_reg_1293_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_reg_1297 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_reg_1297_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln128_reg_1301 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln128_reg_1301_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln187_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln187_reg_1305 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln187_reg_1305_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_998_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln143_reg_1310 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln143_reg_1310_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln143_reg_1310_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln143_reg_1310_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln166_1_fu_946_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln166_1_fu_946_p2 : signal is "no";
    signal add_ln166_1_reg_1315 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln166_1_reg_1315_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln166_1_reg_1315_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln166_1_reg_1315_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln123_1_fu_961_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of add_ln123_1_fu_961_p2 : signal is "no";
    signal add_ln123_1_reg_1320 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln123_1_reg_1320_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln123_1_reg_1320_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln123_1_reg_1320_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal row_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal row_buffer_ce0 : STD_LOGIC;
    signal row_buffer_we0 : STD_LOGIC;
    signal row_buffer_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal row_buffer_ce1 : STD_LOGIC;
    signal row_buffer_q1 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln143_fu_985_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln166_fu_990_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln123_fu_994_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal rep_fu_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rep_1_fu_852_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal indvar_flatten_fu_94 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000000";
    signal add_ln114_fu_419_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal current_block_read_fu_98 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal current_block_read_3_fu_650_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal current_block_read_5_fu_828_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln144_fu_525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln147_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln150_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln153_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_current_block_read_4 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_y_fu_102 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal k_y_1_fu_591_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ofm_x_fu_106 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ofm_x_1_fu_562_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_block_write_fu_110 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal current_block_write_4_fu_903_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_318_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal current_block_write_6_fu_924_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_current_block_write_5 : STD_LOGIC_VECTOR (3 downto 0);
    signal count_simd_fu_114 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal count_simd_1_fu_538_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_block_fu_118 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal grp_fu_307_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_block_8_fu_844_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_read_block_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal cnt_fu_122 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cnt_1_fu_519_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter_internal_block_fu_126 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal counter_internal_block_5_fu_744_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_line_w_fu_130 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal grp_fu_296_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp_fu_134 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal inp_4_fu_757_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp_6_fu_836_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_inp_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_line_simd_fu_138 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal current_line_simd_2_fu_697_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_line_simd_1_fu_763_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln117_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln140_fu_495_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal block_read_K_fu_499_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_509_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln143_fu_514_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal current_block_read_1_fu_625_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln157_fu_630_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln157_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln157_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal current_block_read_2_fu_645_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln164_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln164_1_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal counter_internal_block_4_fu_733_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln182_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln103_fu_448_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln177_fu_883_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln177_fu_887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln177_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal current_block_write_3_fu_898_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln1_fu_936_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln166_1_fu_946_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1006_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln_fu_951_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln123_1_fu_961_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1013_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_509_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln105_fu_966_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_fu_970_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln143_1_fu_980_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of add_ln143_1_fu_980_p2 : signal is "no";
    signal grp_fu_998_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln143_fu_514_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_509_ce : STD_LOGIC;
    signal grp_fu_998_ce : STD_LOGIC;
    signal grp_fu_1006_ce : STD_LOGIC;
    signal grp_fu_1013_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_509_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_condition_399 : BOOLEAN;
    signal ap_condition_407 : BOOLEAN;
    signal ap_condition_958 : BOOLEAN;
    signal ap_condition_967 : BOOLEAN;
    signal ap_condition_974 : BOOLEAN;
    signal ap_condition_979 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component top_urem_4ns_32ns_4_8_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component top_mul_12s_12s_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component top_ama_addmuladd_12ns_12ns_12s_12ns_12_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        din3 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component top_mac_muladd_12s_12s_12ns_12_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component top_Sliding_Pipeline_VITIS_LOOP_114_1_VITIS_LOOP_117_2_row_buffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (511 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (511 downto 0) );
    end component;


    component top_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    row_buffer_U : component top_Sliding_Pipeline_VITIS_LOOP_114_1_VITIS_LOOP_117_2_row_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 512,
        AddressRange => 2720,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => row_buffer_address0,
        ce0 => row_buffer_ce0,
        we0 => row_buffer_we0,
        d0 => conv3_samepad_dout,
        address1 => row_buffer_address1,
        ce1 => row_buffer_ce1,
        q1 => row_buffer_q1);

    urem_4ns_32ns_4_8_1_U620 : component top_urem_4ns_32ns_4_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 4,
        din1_WIDTH => 32,
        dout_WIDTH => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_509_p0,
        din1 => add63,
        ce => grp_fu_509_ce,
        dout => grp_fu_509_p2);

    mul_12s_12s_12_1_1_U621 : component top_mul_12s_12s_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        din0 => mul_ln143_fu_514_p0,
        din1 => empty_49,
        dout => mul_ln143_fu_514_p2);

    ama_addmuladd_12ns_12ns_12s_12ns_12_4_1_U622 : component top_ama_addmuladd_12ns_12ns_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_998_p0,
        din1 => mul_ln143_fu_514_p2,
        din2 => div42_cast,
        din3 => trunc_ln117_reg_1243_pp0_iter2_reg,
        ce => grp_fu_998_ce,
        dout => grp_fu_998_p4);

    mac_muladd_12s_12s_12ns_12_4_1_U623 : component top_mac_muladd_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln117_4_fu_472_p1,
        din1 => div42_cast,
        din2 => trunc_ln117_3_reg_1248_pp0_iter2_reg,
        ce => grp_fu_1006_ce,
        dout => grp_fu_1006_p3);

    mac_muladd_12s_12s_12ns_12_4_1_U624 : component top_mac_muladd_12s_12s_12ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln117_4_fu_472_p1,
        din1 => div42_cast,
        din2 => trunc_ln117_3_reg_1248_pp0_iter2_reg,
        ce => grp_fu_1013_ce,
        dout => grp_fu_1013_p3);

    flow_control_loop_pipe_sequential_init_U : component top_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    cnt_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln147_fu_544_p2 = ap_const_lv1_0) and (icmp_ln144_fu_525_p2 = ap_const_lv1_1) and (icmp_ln138_fu_481_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln150_fu_568_p2 = ap_const_lv1_0) and (icmp_ln147_fu_544_p2 = ap_const_lv1_1) and (icmp_ln144_fu_525_p2 = ap_const_lv1_1) and (icmp_ln138_fu_481_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln153_fu_597_p2 = ap_const_lv1_0) and (icmp_ln150_fu_568_p2 = ap_const_lv1_1) and (icmp_ln147_fu_544_p2 = ap_const_lv1_1) and (icmp_ln144_fu_525_p2 = ap_const_lv1_1) and (icmp_ln138_fu_481_p2 
    = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln153_fu_597_p2 = ap_const_lv1_1) and (icmp_ln150_fu_568_p2 = ap_const_lv1_1) and (icmp_ln147_fu_544_p2 = ap_const_lv1_1) and (icmp_ln144_fu_525_p2 = ap_const_lv1_1) and (icmp_ln138_fu_481_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                cnt_fu_122 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln144_fu_525_p2 = ap_const_lv1_0) and (icmp_ln138_fu_481_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0))) then 
                cnt_fu_122 <= cnt_1_fu_519_p2;
            end if; 
        end if;
    end process;

    count_simd_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln150_fu_568_p2 = ap_const_lv1_0) and (icmp_ln147_fu_544_p2 = ap_const_lv1_1) and (icmp_ln144_fu_525_p2 = ap_const_lv1_1) and (icmp_ln138_fu_481_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln153_fu_597_p2 = ap_const_lv1_0) and (icmp_ln150_fu_568_p2 = ap_const_lv1_1) and (icmp_ln147_fu_544_p2 = ap_const_lv1_1) and (icmp_ln144_fu_525_p2 = ap_const_lv1_1) and (icmp_ln138_fu_481_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln153_fu_597_p2 = ap_const_lv1_1) and (icmp_ln150_fu_568_p2 = ap_const_lv1_1) and (icmp_ln147_fu_544_p2 
    = ap_const_lv1_1) and (icmp_ln144_fu_525_p2 = ap_const_lv1_1) and (icmp_ln138_fu_481_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                count_simd_fu_114 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln147_fu_544_p2 = ap_const_lv1_0) and (icmp_ln144_fu_525_p2 = ap_const_lv1_1) and (icmp_ln138_fu_481_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0))) then 
                count_simd_fu_114 <= count_simd_1_fu_538_p2;
            end if; 
        end if;
    end process;

    counter_internal_block_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    counter_internal_block_fu_126 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_958)) then 
                    counter_internal_block_fu_126 <= counter_internal_block_5_fu_744_p3;
                end if;
            end if; 
        end if;
    end process;

    current_block_read_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    current_block_read_fu_98 <= ap_const_lv4_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0))) then 
                    current_block_read_fu_98 <= current_block_read_5_fu_828_p3;
                elsif ((ap_const_boolean_1 = ap_condition_967)) then 
                    current_block_read_fu_98 <= current_block_read_3_fu_650_p3;
                end if;
            end if; 
        end if;
    end process;

    current_block_write_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    current_block_write_fu_110 <= ap_const_lv4_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    current_block_write_fu_110 <= current_block_write_6_fu_924_p3;
                elsif ((ap_const_boolean_1 = ap_condition_979)) then 
                    current_block_write_fu_110 <= grp_fu_318_p2;
                elsif ((ap_const_boolean_1 = ap_condition_974)) then 
                    current_block_write_fu_110 <= current_block_write_4_fu_903_p3;
                end if;
            end if; 
        end if;
    end process;

    current_line_simd_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln125_fu_769_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0))) then 
                current_line_simd_fu_138 <= current_line_simd_1_fu_763_p2;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln125_fu_769_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln164_fu_688_p2) and (icmp_ln168_fu_703_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                current_line_simd_fu_138 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln164_fu_688_p2) and (icmp_ln168_fu_703_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0))) then 
                current_line_simd_fu_138 <= current_line_simd_2_fu_697_p2;
            end if; 
        end if;
    end process;

    current_line_w_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln125_fu_769_p2 = ap_const_lv1_1) and (grp_fu_302_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln164_fu_688_p2) and (grp_fu_302_p2 = ap_const_lv1_1) and (icmp_ln168_fu_703_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                current_line_w_fu_130 <= ap_const_lv32_0;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln125_fu_769_p2 = ap_const_lv1_1) and (grp_fu_302_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln164_fu_688_p2) and (grp_fu_302_p2 = ap_const_lv1_0) and (icmp_ln168_fu_703_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)))) then 
                current_line_w_fu_130 <= grp_fu_296_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_94 <= ap_const_lv60_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0))) then 
                    indvar_flatten_fu_94 <= add_ln114_fu_419_p2;
                end if;
            end if; 
        end if;
    end process;

    inp_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inp_fu_134 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0))) then 
                inp_fu_134 <= inp_6_fu_836_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln125_fu_769_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln125_fu_769_p2 = ap_const_lv1_1) and (grp_fu_302_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln125_fu_769_p2 = ap_const_lv1_1) and (grp_fu_302_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)))) then 
                inp_fu_134 <= inp_4_fu_757_p2;
            end if; 
        end if;
    end process;

    k_y_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln153_fu_597_p2 = ap_const_lv1_1) and (icmp_ln150_fu_568_p2 = ap_const_lv1_1) and (icmp_ln147_fu_544_p2 = ap_const_lv1_1) and (icmp_ln144_fu_525_p2 = ap_const_lv1_1) and (icmp_ln138_fu_481_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                k_y_fu_102 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln153_fu_597_p2 = ap_const_lv1_0) and (icmp_ln150_fu_568_p2 = ap_const_lv1_1) and (icmp_ln147_fu_544_p2 = ap_const_lv1_1) and (icmp_ln144_fu_525_p2 = ap_const_lv1_1) and (icmp_ln138_fu_481_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0))) then 
                k_y_fu_102 <= k_y_1_fu_591_p2;
            end if; 
        end if;
    end process;

    ofm_x_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln150_fu_568_p2 = ap_const_lv1_1) and (icmp_ln147_fu_544_p2 = ap_const_lv1_1) and (icmp_ln144_fu_525_p2 = ap_const_lv1_1) and (icmp_ln138_fu_481_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                ofm_x_fu_106 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln150_fu_568_p2 = ap_const_lv1_0) and (icmp_ln147_fu_544_p2 = ap_const_lv1_1) and (icmp_ln144_fu_525_p2 = ap_const_lv1_1) and (icmp_ln138_fu_481_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0))) then 
                ofm_x_fu_106 <= ofm_x_1_fu_562_p2;
            end if; 
        end if;
    end process;

    read_block_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                read_block_fu_118 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0))) then 
                read_block_fu_118 <= read_block_8_fu_844_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln125_fu_769_p2 = ap_const_lv1_1) and (grp_fu_302_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln164_fu_688_p2) and (grp_fu_302_p2 = ap_const_lv1_1) and (icmp_ln168_fu_703_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)))) then 
                read_block_fu_118 <= grp_fu_307_p2;
            end if; 
        end if;
    end process;

    rep_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    rep_fu_90 <= ap_const_lv32_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0))) then 
                    rep_fu_90 <= rep_1_fu_852_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln123_1_reg_1320 <= add_ln123_1_fu_961_p2;
                add_ln123_1_reg_1320_pp0_iter5_reg <= add_ln123_1_reg_1320;
                add_ln123_1_reg_1320_pp0_iter6_reg <= add_ln123_1_reg_1320_pp0_iter5_reg;
                add_ln123_1_reg_1320_pp0_iter7_reg <= add_ln123_1_reg_1320_pp0_iter6_reg;
                add_ln143_reg_1310_pp0_iter5_reg <= add_ln143_reg_1310;
                add_ln143_reg_1310_pp0_iter6_reg <= add_ln143_reg_1310_pp0_iter5_reg;
                add_ln143_reg_1310_pp0_iter7_reg <= add_ln143_reg_1310_pp0_iter6_reg;
                add_ln166_1_reg_1315 <= add_ln166_1_fu_946_p2;
                add_ln166_1_reg_1315_pp0_iter5_reg <= add_ln166_1_reg_1315;
                add_ln166_1_reg_1315_pp0_iter6_reg <= add_ln166_1_reg_1315_pp0_iter5_reg;
                add_ln166_1_reg_1315_pp0_iter7_reg <= add_ln166_1_reg_1315_pp0_iter6_reg;
                and_ln164_reg_1285_pp0_iter2_reg <= and_ln164_reg_1285;
                and_ln164_reg_1285_pp0_iter3_reg <= and_ln164_reg_1285_pp0_iter2_reg;
                and_ln164_reg_1285_pp0_iter4_reg <= and_ln164_reg_1285_pp0_iter3_reg;
                and_ln164_reg_1285_pp0_iter5_reg <= and_ln164_reg_1285_pp0_iter4_reg;
                and_ln164_reg_1285_pp0_iter6_reg <= and_ln164_reg_1285_pp0_iter5_reg;
                and_ln164_reg_1285_pp0_iter7_reg <= and_ln164_reg_1285_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                icmp_ln121_reg_1260_pp0_iter2_reg <= icmp_ln121_reg_1260;
                icmp_ln121_reg_1260_pp0_iter3_reg <= icmp_ln121_reg_1260_pp0_iter2_reg;
                icmp_ln121_reg_1260_pp0_iter4_reg <= icmp_ln121_reg_1260_pp0_iter3_reg;
                icmp_ln121_reg_1260_pp0_iter5_reg <= icmp_ln121_reg_1260_pp0_iter4_reg;
                icmp_ln121_reg_1260_pp0_iter6_reg <= icmp_ln121_reg_1260_pp0_iter5_reg;
                icmp_ln121_reg_1260_pp0_iter7_reg <= icmp_ln121_reg_1260_pp0_iter6_reg;
                icmp_ln121_reg_1260_pp0_iter8_reg <= icmp_ln121_reg_1260_pp0_iter7_reg;
                icmp_ln125_reg_1297_pp0_iter2_reg <= icmp_ln125_reg_1297;
                icmp_ln128_reg_1301_pp0_iter2_reg <= icmp_ln128_reg_1301;
                icmp_ln138_reg_1264_pp0_iter2_reg <= icmp_ln138_reg_1264;
                icmp_ln138_reg_1264_pp0_iter3_reg <= icmp_ln138_reg_1264_pp0_iter2_reg;
                icmp_ln138_reg_1264_pp0_iter4_reg <= icmp_ln138_reg_1264_pp0_iter3_reg;
                icmp_ln138_reg_1264_pp0_iter5_reg <= icmp_ln138_reg_1264_pp0_iter4_reg;
                icmp_ln138_reg_1264_pp0_iter6_reg <= icmp_ln138_reg_1264_pp0_iter5_reg;
                icmp_ln138_reg_1264_pp0_iter7_reg <= icmp_ln138_reg_1264_pp0_iter6_reg;
                icmp_ln138_reg_1264_pp0_iter8_reg <= icmp_ln138_reg_1264_pp0_iter7_reg;
                icmp_ln168_reg_1289_pp0_iter2_reg <= icmp_ln168_reg_1289;
                icmp_ln171_reg_1293_pp0_iter2_reg <= icmp_ln171_reg_1293;
                icmp_ln187_reg_1305_pp0_iter2_reg <= icmp_ln187_reg_1305;
                trunc_ln117_3_reg_1248_pp0_iter2_reg <= trunc_ln117_3_reg_1248;
                trunc_ln117_reg_1243_pp0_iter2_reg <= trunc_ln117_reg_1243;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                add_ln143_reg_1310 <= grp_fu_998_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln164_reg_1285 <= and_ln164_fu_688_p2;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                icmp_ln121_reg_1260 <= icmp_ln121_fu_476_p2;
                icmp_ln125_reg_1297 <= icmp_ln125_fu_769_p2;
                icmp_ln138_reg_1264 <= icmp_ln138_fu_481_p2;
                icmp_ln168_reg_1289 <= icmp_ln168_fu_703_p2;
                icmp_ln187_reg_1305 <= icmp_ln187_fu_823_p2;
                    p_cast_reg_1232(27 downto 0) <= p_cast_fu_332_p1(27 downto 0);
                trunc_ln117_3_reg_1248 <= trunc_ln117_3_fu_468_p1;
                trunc_ln117_reg_1243 <= trunc_ln117_fu_456_p1;
                    zext_ln98_cast_reg_1227(27 downto 0) <= zext_ln98_cast_fu_328_p1(27 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln128_reg_1301 <= grp_fu_302_p2;
                icmp_ln171_reg_1293 <= grp_fu_302_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln164_reg_1285_pp0_iter2_reg) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln121_reg_1260_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln121_reg_1260_pp0_iter2_reg = ap_const_lv1_1)))) then
                reg_324 <= current_block_write_fu_110;
            end if;
        end if;
    end process;
    zext_ln98_cast_reg_1227(31 downto 28) <= "0000";
    p_cast_reg_1232(31 downto 28) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln114_fu_419_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_94) + unsigned(ap_const_lv60_1));
    add_ln123_1_fu_961_p1 <= grp_fu_1013_p3;
    add_ln123_1_fu_961_p2 <= std_logic_vector(unsigned(or_ln_fu_951_p4) + unsigned(add_ln123_1_fu_961_p1));
    add_ln143_1_fu_980_p2 <= std_logic_vector(unsigned(tmp_5_fu_970_p4) + unsigned(add_ln143_reg_1310_pp0_iter7_reg));
    add_ln166_1_fu_946_p1 <= grp_fu_1006_p3;
    add_ln166_1_fu_946_p2 <= std_logic_vector(unsigned(or_ln1_fu_936_p4) + unsigned(add_ln166_1_fu_946_p1));
    and_ln164_fu_688_p2 <= (icmp_ln164_fu_678_p2 and icmp_ln164_1_fu_683_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_block_state9_pp0_stage0_iter8, ap_block_state10_pp0_stage0_iter9)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage0_iter8)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage0_iter9)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_block_state9_pp0_stage0_iter8, ap_block_state10_pp0_stage0_iter9)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage0_iter8)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage0_iter9)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_block_state9_pp0_stage0_iter8, ap_block_state10_pp0_stage0_iter9)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage0_iter8)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage0_iter9)));
    end process;


    ap_block_state10_pp0_stage0_iter9_assign_proc : process(conv3_sild_full_n, ap_predicate_op255_write_state10)
    begin
                ap_block_state10_pp0_stage0_iter9 <= ((ap_predicate_op255_write_state10 = ap_const_boolean_1) and (conv3_sild_full_n = ap_const_logic_0));
    end process;


    ap_block_state9_pp0_stage0_iter8_assign_proc : process(conv3_samepad_empty_n, icmp_ln121_reg_1260_pp0_iter7_reg, ap_predicate_op246_read_state9)
    begin
                ap_block_state9_pp0_stage0_iter8 <= (((icmp_ln121_reg_1260_pp0_iter7_reg = ap_const_lv1_1) and (conv3_samepad_empty_n = ap_const_logic_0)) or ((ap_predicate_op246_read_state9 = ap_const_boolean_1) and (conv3_samepad_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_399_assign_proc : process(icmp_ln121_reg_1260_pp0_iter2_reg, and_ln164_reg_1285_pp0_iter2_reg, icmp_ln168_reg_1289_pp0_iter2_reg, icmp_ln171_reg_1293_pp0_iter2_reg)
    begin
                ap_condition_399 <= ((ap_const_lv1_1 = and_ln164_reg_1285_pp0_iter2_reg) and (icmp_ln171_reg_1293_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln168_reg_1289_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln121_reg_1260_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_condition_407_assign_proc : process(icmp_ln121_reg_1260_pp0_iter2_reg, icmp_ln125_reg_1297_pp0_iter2_reg, icmp_ln128_reg_1301_pp0_iter2_reg)
    begin
                ap_condition_407 <= ((icmp_ln128_reg_1301_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln125_reg_1297_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln121_reg_1260_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_958_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln114_fu_414_p2, icmp_ln121_fu_476_p2)
    begin
                ap_condition_958 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0));
    end process;


    ap_condition_967_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln114_fu_414_p2, icmp_ln121_fu_476_p2, icmp_ln138_fu_481_p2, icmp_ln144_fu_525_p2, icmp_ln147_fu_544_p2, icmp_ln150_fu_568_p2, icmp_ln153_fu_597_p2)
    begin
                ap_condition_967 <= ((icmp_ln153_fu_597_p2 = ap_const_lv1_1) and (icmp_ln150_fu_568_p2 = ap_const_lv1_1) and (icmp_ln147_fu_544_p2 = ap_const_lv1_1) and (icmp_ln144_fu_525_p2 = ap_const_lv1_1) and (icmp_ln138_fu_481_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0));
    end process;


    ap_condition_974_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln121_reg_1260_pp0_iter2_reg, and_ln164_reg_1285_pp0_iter2_reg, icmp_ln168_reg_1289_pp0_iter2_reg, icmp_ln171_reg_1293_pp0_iter2_reg)
    begin
                ap_condition_974 <= ((ap_const_lv1_1 = and_ln164_reg_1285_pp0_iter2_reg) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln171_reg_1293_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln168_reg_1289_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln121_reg_1260_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_condition_979_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln121_reg_1260_pp0_iter2_reg, icmp_ln125_reg_1297_pp0_iter2_reg, icmp_ln128_reg_1301_pp0_iter2_reg)
    begin
                ap_condition_979 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln128_reg_1301_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln125_reg_1297_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln121_reg_1260_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln114_fu_414_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter8_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_predicate_op246_read_state9_assign_proc : process(icmp_ln121_reg_1260_pp0_iter7_reg, and_ln164_reg_1285_pp0_iter7_reg)
    begin
                ap_predicate_op246_read_state9 <= ((ap_const_lv1_1 = and_ln164_reg_1285_pp0_iter7_reg) and (icmp_ln121_reg_1260_pp0_iter7_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op255_write_state10_assign_proc : process(icmp_ln121_reg_1260_pp0_iter8_reg, icmp_ln138_reg_1264_pp0_iter8_reg)
    begin
                ap_predicate_op255_write_state10 <= ((icmp_ln138_reg_1264_pp0_iter8_reg = ap_const_lv1_1) and (icmp_ln121_reg_1260_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_current_block_read_4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln114_fu_414_p2, ap_block_pp0_stage0, icmp_ln121_fu_476_p2, icmp_ln138_fu_481_p2, current_block_read_fu_98, current_block_read_3_fu_650_p3, icmp_ln144_fu_525_p2, icmp_ln147_fu_544_p2, icmp_ln150_fu_568_p2, icmp_ln153_fu_597_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln153_fu_597_p2 = ap_const_lv1_1) and (icmp_ln150_fu_568_p2 = ap_const_lv1_1) and (icmp_ln147_fu_544_p2 = ap_const_lv1_1) and (icmp_ln144_fu_525_p2 = ap_const_lv1_1) and (icmp_ln138_fu_481_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0))) then 
            ap_sig_allocacmp_current_block_read_4 <= current_block_read_3_fu_650_p3;
        else 
            ap_sig_allocacmp_current_block_read_4 <= current_block_read_fu_98;
        end if; 
    end process;


    ap_sig_allocacmp_current_block_write_5_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, current_block_write_fu_110, current_block_write_4_fu_903_p3, grp_fu_318_p2, ap_condition_399, ap_condition_407)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_407)) then 
                ap_sig_allocacmp_current_block_write_5 <= grp_fu_318_p2;
            elsif ((ap_const_boolean_1 = ap_condition_399)) then 
                ap_sig_allocacmp_current_block_write_5 <= current_block_write_4_fu_903_p3;
            else 
                ap_sig_allocacmp_current_block_write_5 <= current_block_write_fu_110;
            end if;
        else 
            ap_sig_allocacmp_current_block_write_5 <= current_block_write_fu_110;
        end if; 
    end process;


    ap_sig_allocacmp_inp_5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln114_fu_414_p2, ap_block_pp0_stage0, icmp_ln121_fu_476_p2, grp_fu_302_p2, icmp_ln125_fu_769_p2, inp_fu_134, inp_4_fu_757_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln125_fu_769_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln125_fu_769_p2 = ap_const_lv1_1) and (grp_fu_302_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln125_fu_769_p2 = ap_const_lv1_1) and (grp_fu_302_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)))) then 
            ap_sig_allocacmp_inp_5 <= inp_4_fu_757_p2;
        else 
            ap_sig_allocacmp_inp_5 <= inp_fu_134;
        end if; 
    end process;


    ap_sig_allocacmp_read_block_7_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln114_fu_414_p2, ap_block_pp0_stage0, icmp_ln121_fu_476_p2, and_ln164_fu_688_p2, icmp_ln168_fu_703_p2, grp_fu_302_p2, icmp_ln125_fu_769_p2, read_block_fu_118, grp_fu_307_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln125_fu_769_p2 = ap_const_lv1_1) and (grp_fu_302_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_lv1_1 = and_ln164_fu_688_p2) and (grp_fu_302_p2 = ap_const_lv1_1) and (icmp_ln168_fu_703_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln121_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln114_fu_414_p2 = ap_const_lv1_0)))) then 
            ap_sig_allocacmp_read_block_7 <= grp_fu_307_p2;
        else 
            ap_sig_allocacmp_read_block_7 <= read_block_fu_118;
        end if; 
    end process;

    block_read_K_fu_499_p2 <= std_logic_vector(unsigned(current_block_read_fu_98) + unsigned(trunc_ln140_fu_495_p1));
    cnt_1_fu_519_p2 <= std_logic_vector(unsigned(cnt_fu_122) + unsigned(ap_const_lv32_1));

    conv3_samepad_blk_n_assign_proc : process(ap_enable_reg_pp0_iter8, conv3_samepad_empty_n, icmp_ln121_reg_1260_pp0_iter7_reg, ap_predicate_op246_read_state9, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln121_reg_1260_pp0_iter7_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op246_read_state9 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)))) then 
            conv3_samepad_blk_n <= conv3_samepad_empty_n;
        else 
            conv3_samepad_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    conv3_samepad_read_assign_proc : process(ap_enable_reg_pp0_iter8, icmp_ln121_reg_1260_pp0_iter7_reg, ap_predicate_op246_read_state9, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1260_pp0_iter7_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op246_read_state9 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)))) then 
            conv3_samepad_read <= ap_const_logic_1;
        else 
            conv3_samepad_read <= ap_const_logic_0;
        end if; 
    end process;


    conv3_sild_blk_n_assign_proc : process(ap_enable_reg_pp0_iter9, conv3_sild_full_n, ap_predicate_op255_write_state10, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op255_write_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            conv3_sild_blk_n <= conv3_sild_full_n;
        else 
            conv3_sild_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    conv3_sild_din <= row_buffer_q1;

    conv3_sild_write_assign_proc : process(ap_enable_reg_pp0_iter9, ap_predicate_op255_write_state10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op255_write_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            conv3_sild_write <= ap_const_logic_1;
        else 
            conv3_sild_write <= ap_const_logic_0;
        end if; 
    end process;

    count_simd_1_fu_538_p2 <= std_logic_vector(unsigned(count_simd_fu_114) + unsigned(ap_const_lv32_1));
    counter_internal_block_4_fu_733_p2 <= std_logic_vector(unsigned(counter_internal_block_fu_126) + unsigned(ap_const_lv32_1));
    counter_internal_block_5_fu_744_p3 <= 
        ap_const_lv32_0 when (icmp_ln182_fu_739_p2(0) = '1') else 
        counter_internal_block_4_fu_733_p2;
    current_block_read_1_fu_625_p2 <= std_logic_vector(unsigned(current_block_read_fu_98) + unsigned(empty_50));
    current_block_read_2_fu_645_p2 <= std_logic_vector(unsigned(current_block_read_1_fu_625_p2) - unsigned(empty));
    current_block_read_3_fu_650_p3 <= 
        current_block_read_2_fu_645_p2 when (xor_ln157_fu_639_p2(0) = '1') else 
        current_block_read_1_fu_625_p2;
    current_block_read_5_fu_828_p3 <= 
        ap_const_lv4_0 when (icmp_ln187_fu_823_p2(0) = '1') else 
        ap_sig_allocacmp_current_block_read_4;
    current_block_write_3_fu_898_p2 <= std_logic_vector(unsigned(grp_fu_318_p2) - unsigned(empty));
    current_block_write_4_fu_903_p3 <= 
        current_block_write_3_fu_898_p2 when (xor_ln177_fu_892_p2(0) = '1') else 
        grp_fu_318_p2;
    current_block_write_6_fu_924_p3 <= 
        ap_const_lv4_0 when (icmp_ln187_reg_1305_pp0_iter2_reg(0) = '1') else 
        ap_sig_allocacmp_current_block_write_5;
    current_line_simd_1_fu_763_p2 <= std_logic_vector(unsigned(current_line_simd_fu_138) + unsigned(ap_const_lv32_1));
    current_line_simd_2_fu_697_p2 <= std_logic_vector(unsigned(current_line_simd_fu_138) + unsigned(ap_const_lv32_1));

    grp_fu_1006_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1006_ce <= ap_const_logic_1;
        else 
            grp_fu_1006_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1013_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1013_ce <= ap_const_logic_1;
        else 
            grp_fu_1013_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_296_p2 <= std_logic_vector(unsigned(current_line_w_fu_130) + unsigned(ap_const_lv32_1));
    grp_fu_302_p2 <= "1" when (grp_fu_296_p2 = add_ln95) else "0";
    grp_fu_307_p2 <= std_logic_vector(unsigned(read_block_fu_118) + unsigned(ap_const_lv32_1));
    grp_fu_318_p2 <= std_logic_vector(unsigned(current_block_write_fu_110) + unsigned(ap_const_lv4_1));

    grp_fu_509_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_509_ce <= ap_const_logic_1;
        else 
            grp_fu_509_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_509_p0 <= grp_fu_509_p00(4 - 1 downto 0);
    grp_fu_509_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(block_read_K_fu_499_p2),32));

    grp_fu_998_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_998_ce <= ap_const_logic_1;
        else 
            grp_fu_998_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_998_p0 <= ofm_x_fu_106(12 - 1 downto 0);
    icmp_ln114_fu_414_p2 <= "1" when (indvar_flatten_fu_94 = mul_ln93) else "0";
    icmp_ln117_fu_443_p2 <= "1" when (unsigned(rep_fu_90) < unsigned(baseIter)) else "0";
    icmp_ln121_fu_476_p2 <= "1" when (unsigned(inp_fu_134) < unsigned(zext_ln98_cast_reg_1227)) else "0";
    icmp_ln125_fu_769_p2 <= "1" when (current_line_simd_1_fu_763_p2 = p_cast_reg_1232) else "0";
    icmp_ln138_fu_481_p2 <= "1" when (unsigned(counter_internal_block_fu_126) < unsigned(cycles_write_block)) else "0";
    icmp_ln144_fu_525_p2 <= "1" when (cnt_1_fu_519_p2 = add_ln95_1) else "0";
    icmp_ln147_fu_544_p2 <= "1" when (count_simd_1_fu_538_p2 = p_cast_reg_1232) else "0";
    icmp_ln150_fu_568_p2 <= "1" when (ofm_x_1_fu_562_p2 = K_1) else "0";
    icmp_ln153_fu_597_p2 <= "1" when (k_y_1_fu_591_p2 = K_1) else "0";
    icmp_ln157_fu_634_p2 <= "1" when (unsigned(zext_ln157_fu_630_p1) < unsigned(add63)) else "0";
    icmp_ln164_1_fu_683_p2 <= "1" when (unsigned(read_block_fu_118) < unsigned(add_ln98)) else "0";
    icmp_ln164_fu_678_p2 <= "1" when (unsigned(counter_internal_block_fu_126) < unsigned(cycles_read_block)) else "0";
    icmp_ln168_fu_703_p2 <= "1" when (current_line_simd_2_fu_697_p2 = p_cast_reg_1232) else "0";
    icmp_ln177_fu_887_p2 <= "1" when (unsigned(zext_ln177_fu_883_p1) < unsigned(add63)) else "0";
    icmp_ln182_fu_739_p2 <= "1" when (counter_internal_block_4_fu_733_p2 = max_cycles) else "0";
    icmp_ln187_fu_823_p2 <= "1" when (select_ln103_fu_448_p3 = sub143) else "0";
    inp_4_fu_757_p2 <= std_logic_vector(unsigned(inp_fu_134) + unsigned(ap_const_lv32_1));
    inp_6_fu_836_p3 <= 
        ap_const_lv32_0 when (icmp_ln187_fu_823_p2(0) = '1') else 
        ap_sig_allocacmp_inp_5;
    k_y_1_fu_591_p2 <= std_logic_vector(unsigned(k_y_fu_102) + unsigned(ap_const_lv32_1));
    mul_ln143_fu_514_p0 <= cnt_fu_122(12 - 1 downto 0);
    ofm_x_1_fu_562_p2 <= std_logic_vector(unsigned(ofm_x_fu_106) + unsigned(ap_const_lv32_1));
    or_ln1_fu_936_p4 <= ((reg_324 & reg_324) & ap_const_lv4_0);
    or_ln_fu_951_p4 <= ((reg_324 & reg_324) & ap_const_lv4_0);
    p_cast_fu_332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_48),32));
    read_block_8_fu_844_p3 <= 
        ap_const_lv32_0 when (icmp_ln187_fu_823_p2(0) = '1') else 
        ap_sig_allocacmp_read_block_7;
    rep_1_fu_852_p2 <= std_logic_vector(unsigned(select_ln103_fu_448_p3) + unsigned(ap_const_lv32_1));

    row_buffer_address0_assign_proc : process(ap_enable_reg_pp0_iter8, icmp_ln121_reg_1260_pp0_iter7_reg, and_ln164_reg_1285_pp0_iter7_reg, ap_block_pp0_stage0, zext_ln166_fu_990_p1, zext_ln123_fu_994_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then
            if ((icmp_ln121_reg_1260_pp0_iter7_reg = ap_const_lv1_1)) then 
                row_buffer_address0 <= zext_ln123_fu_994_p1(12 - 1 downto 0);
            elsif (((ap_const_lv1_1 = and_ln164_reg_1285_pp0_iter7_reg) and (icmp_ln121_reg_1260_pp0_iter7_reg = ap_const_lv1_0))) then 
                row_buffer_address0 <= zext_ln166_fu_990_p1(12 - 1 downto 0);
            else 
                row_buffer_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            row_buffer_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    row_buffer_address1 <= zext_ln143_fu_985_p1(12 - 1 downto 0);

    row_buffer_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, icmp_ln121_reg_1260_pp0_iter7_reg, and_ln164_reg_1285_pp0_iter7_reg, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1260_pp0_iter7_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln164_reg_1285_pp0_iter7_reg) and (icmp_ln121_reg_1260_pp0_iter7_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)))) then 
            row_buffer_ce0 <= ap_const_logic_1;
        else 
            row_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    row_buffer_ce1_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            row_buffer_ce1 <= ap_const_logic_1;
        else 
            row_buffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    row_buffer_we0_assign_proc : process(ap_enable_reg_pp0_iter8, icmp_ln121_reg_1260_pp0_iter7_reg, and_ln164_reg_1285_pp0_iter7_reg, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1260_pp0_iter7_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln164_reg_1285_pp0_iter7_reg) and (icmp_ln121_reg_1260_pp0_iter7_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)))) then 
            row_buffer_we0 <= ap_const_logic_1;
        else 
            row_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln103_fu_448_p3 <= 
        rep_fu_90 when (icmp_ln117_fu_443_p2(0) = '1') else 
        ap_const_lv32_0;
    tmp_5_fu_970_p4 <= ((trunc_ln105_fu_966_p1 & trunc_ln105_fu_966_p1) & ap_const_lv4_0);
    trunc_ln105_fu_966_p1 <= grp_fu_509_p2(4 - 1 downto 0);
    trunc_ln117_3_fu_468_p1 <= current_line_simd_fu_138(12 - 1 downto 0);
    trunc_ln117_4_fu_472_p1 <= current_line_w_fu_130(12 - 1 downto 0);
    trunc_ln117_fu_456_p1 <= count_simd_fu_114(12 - 1 downto 0);
    trunc_ln140_fu_495_p1 <= k_y_fu_102(4 - 1 downto 0);
    xor_ln157_fu_639_p2 <= (icmp_ln157_fu_634_p2 xor ap_const_lv1_1);
    xor_ln177_fu_892_p2 <= (icmp_ln177_fu_887_p2 xor ap_const_lv1_1);
    zext_ln123_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_1_reg_1320_pp0_iter7_reg),64));
    zext_ln143_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln143_1_fu_980_p2),64));
    zext_ln157_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(current_block_read_1_fu_625_p2),32));
    zext_ln166_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln166_1_reg_1315_pp0_iter7_reg),64));
    zext_ln177_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_318_p2),32));
    zext_ln98_cast_fu_328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln98),32));
end behav;
