// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_ConvertInputToArray_Pipeline_VITIS_LOOP_201_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        mm_a_dout,
        mm_a_num_data_valid,
        mm_a_fifo_cap,
        mm_a_empty_n,
        mm_a_read,
        conv3_sild_dout,
        conv3_sild_num_data_valid,
        conv3_sild_fifo_cap,
        conv3_sild_empty_n,
        conv3_sild_read,
        fifo_SA_A_din,
        fifo_SA_A_num_data_valid,
        fifo_SA_A_fifo_cap,
        fifo_SA_A_full_n,
        fifo_SA_A_write,
        fifo_SA_A_1_din,
        fifo_SA_A_1_num_data_valid,
        fifo_SA_A_1_fifo_cap,
        fifo_SA_A_1_full_n,
        fifo_SA_A_1_write,
        fifo_SA_A_2_din,
        fifo_SA_A_2_num_data_valid,
        fifo_SA_A_2_fifo_cap,
        fifo_SA_A_2_full_n,
        fifo_SA_A_2_write,
        fifo_SA_A_3_din,
        fifo_SA_A_3_num_data_valid,
        fifo_SA_A_3_fifo_cap,
        fifo_SA_A_3_full_n,
        fifo_SA_A_3_write,
        fifo_SA_A_4_din,
        fifo_SA_A_4_num_data_valid,
        fifo_SA_A_4_fifo_cap,
        fifo_SA_A_4_full_n,
        fifo_SA_A_4_write,
        fifo_SA_A_5_din,
        fifo_SA_A_5_num_data_valid,
        fifo_SA_A_5_fifo_cap,
        fifo_SA_A_5_full_n,
        fifo_SA_A_5_write,
        fifo_SA_A_6_din,
        fifo_SA_A_6_num_data_valid,
        fifo_SA_A_6_fifo_cap,
        fifo_SA_A_6_full_n,
        fifo_SA_A_6_write,
        fifo_SA_A_7_din,
        fifo_SA_A_7_num_data_valid,
        fifo_SA_A_7_fifo_cap,
        fifo_SA_A_7_full_n,
        fifo_SA_A_7_write,
        fifo_SA_A_8_din,
        fifo_SA_A_8_num_data_valid,
        fifo_SA_A_8_fifo_cap,
        fifo_SA_A_8_full_n,
        fifo_SA_A_8_write,
        fifo_SA_A_9_din,
        fifo_SA_A_9_num_data_valid,
        fifo_SA_A_9_fifo_cap,
        fifo_SA_A_9_full_n,
        fifo_SA_A_9_write,
        fifo_SA_A_10_din,
        fifo_SA_A_10_num_data_valid,
        fifo_SA_A_10_fifo_cap,
        fifo_SA_A_10_full_n,
        fifo_SA_A_10_write,
        fifo_SA_A_11_din,
        fifo_SA_A_11_num_data_valid,
        fifo_SA_A_11_fifo_cap,
        fifo_SA_A_11_full_n,
        fifo_SA_A_11_write,
        fifo_SA_A_12_din,
        fifo_SA_A_12_num_data_valid,
        fifo_SA_A_12_fifo_cap,
        fifo_SA_A_12_full_n,
        fifo_SA_A_12_write,
        fifo_SA_A_13_din,
        fifo_SA_A_13_num_data_valid,
        fifo_SA_A_13_fifo_cap,
        fifo_SA_A_13_full_n,
        fifo_SA_A_13_write,
        fifo_SA_A_14_din,
        fifo_SA_A_14_num_data_valid,
        fifo_SA_A_14_fifo_cap,
        fifo_SA_A_14_full_n,
        fifo_SA_A_14_write,
        fifo_SA_A_15_din,
        fifo_SA_A_15_num_data_valid,
        fifo_SA_A_15_fifo_cap,
        fifo_SA_A_15_full_n,
        fifo_SA_A_15_write,
        p_read,
        mode_7
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [511:0] mm_a_dout;
input  [7:0] mm_a_num_data_valid;
input  [7:0] mm_a_fifo_cap;
input   mm_a_empty_n;
output   mm_a_read;
input  [511:0] conv3_sild_dout;
input  [2:0] conv3_sild_num_data_valid;
input  [2:0] conv3_sild_fifo_cap;
input   conv3_sild_empty_n;
output   conv3_sild_read;
output  [127:0] fifo_SA_A_din;
input  [2:0] fifo_SA_A_num_data_valid;
input  [2:0] fifo_SA_A_fifo_cap;
input   fifo_SA_A_full_n;
output   fifo_SA_A_write;
output  [127:0] fifo_SA_A_1_din;
input  [2:0] fifo_SA_A_1_num_data_valid;
input  [2:0] fifo_SA_A_1_fifo_cap;
input   fifo_SA_A_1_full_n;
output   fifo_SA_A_1_write;
output  [127:0] fifo_SA_A_2_din;
input  [2:0] fifo_SA_A_2_num_data_valid;
input  [2:0] fifo_SA_A_2_fifo_cap;
input   fifo_SA_A_2_full_n;
output   fifo_SA_A_2_write;
output  [127:0] fifo_SA_A_3_din;
input  [2:0] fifo_SA_A_3_num_data_valid;
input  [2:0] fifo_SA_A_3_fifo_cap;
input   fifo_SA_A_3_full_n;
output   fifo_SA_A_3_write;
output  [127:0] fifo_SA_A_4_din;
input  [2:0] fifo_SA_A_4_num_data_valid;
input  [2:0] fifo_SA_A_4_fifo_cap;
input   fifo_SA_A_4_full_n;
output   fifo_SA_A_4_write;
output  [127:0] fifo_SA_A_5_din;
input  [2:0] fifo_SA_A_5_num_data_valid;
input  [2:0] fifo_SA_A_5_fifo_cap;
input   fifo_SA_A_5_full_n;
output   fifo_SA_A_5_write;
output  [127:0] fifo_SA_A_6_din;
input  [2:0] fifo_SA_A_6_num_data_valid;
input  [2:0] fifo_SA_A_6_fifo_cap;
input   fifo_SA_A_6_full_n;
output   fifo_SA_A_6_write;
output  [127:0] fifo_SA_A_7_din;
input  [2:0] fifo_SA_A_7_num_data_valid;
input  [2:0] fifo_SA_A_7_fifo_cap;
input   fifo_SA_A_7_full_n;
output   fifo_SA_A_7_write;
output  [127:0] fifo_SA_A_8_din;
input  [2:0] fifo_SA_A_8_num_data_valid;
input  [2:0] fifo_SA_A_8_fifo_cap;
input   fifo_SA_A_8_full_n;
output   fifo_SA_A_8_write;
output  [127:0] fifo_SA_A_9_din;
input  [2:0] fifo_SA_A_9_num_data_valid;
input  [2:0] fifo_SA_A_9_fifo_cap;
input   fifo_SA_A_9_full_n;
output   fifo_SA_A_9_write;
output  [127:0] fifo_SA_A_10_din;
input  [2:0] fifo_SA_A_10_num_data_valid;
input  [2:0] fifo_SA_A_10_fifo_cap;
input   fifo_SA_A_10_full_n;
output   fifo_SA_A_10_write;
output  [127:0] fifo_SA_A_11_din;
input  [2:0] fifo_SA_A_11_num_data_valid;
input  [2:0] fifo_SA_A_11_fifo_cap;
input   fifo_SA_A_11_full_n;
output   fifo_SA_A_11_write;
output  [127:0] fifo_SA_A_12_din;
input  [2:0] fifo_SA_A_12_num_data_valid;
input  [2:0] fifo_SA_A_12_fifo_cap;
input   fifo_SA_A_12_full_n;
output   fifo_SA_A_12_write;
output  [127:0] fifo_SA_A_13_din;
input  [2:0] fifo_SA_A_13_num_data_valid;
input  [2:0] fifo_SA_A_13_fifo_cap;
input   fifo_SA_A_13_full_n;
output   fifo_SA_A_13_write;
output  [127:0] fifo_SA_A_14_din;
input  [2:0] fifo_SA_A_14_num_data_valid;
input  [2:0] fifo_SA_A_14_fifo_cap;
input   fifo_SA_A_14_full_n;
output   fifo_SA_A_14_write;
output  [127:0] fifo_SA_A_15_din;
input  [2:0] fifo_SA_A_15_num_data_valid;
input  [2:0] fifo_SA_A_15_fifo_cap;
input   fifo_SA_A_15_full_n;
output   fifo_SA_A_15_write;
input  [31:0] p_read;
input  [0:0] mode_7;

reg ap_idle;
reg mm_a_read;
reg conv3_sild_read;
reg fifo_SA_A_write;
reg fifo_SA_A_1_write;
reg fifo_SA_A_2_write;
reg fifo_SA_A_3_write;
reg fifo_SA_A_4_write;
reg fifo_SA_A_5_write;
reg fifo_SA_A_6_write;
reg fifo_SA_A_7_write;
reg fifo_SA_A_8_write;
reg fifo_SA_A_9_write;
reg fifo_SA_A_10_write;
reg fifo_SA_A_11_write;
reg fifo_SA_A_12_write;
reg fifo_SA_A_13_write;
reg fifo_SA_A_14_write;
reg fifo_SA_A_15_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg   [0:0] icmp_ln201_reg_321;
reg    ap_predicate_op37_read_state2;
reg    ap_predicate_op39_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln201_fu_243_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fifo_SA_A_blk_n;
wire    ap_block_pp0_stage0;
reg    fifo_SA_A_1_blk_n;
reg    fifo_SA_A_2_blk_n;
reg    fifo_SA_A_3_blk_n;
reg    fifo_SA_A_4_blk_n;
reg    fifo_SA_A_5_blk_n;
reg    fifo_SA_A_6_blk_n;
reg    fifo_SA_A_7_blk_n;
reg    fifo_SA_A_8_blk_n;
reg    fifo_SA_A_9_blk_n;
reg    fifo_SA_A_10_blk_n;
reg    fifo_SA_A_11_blk_n;
reg    fifo_SA_A_12_blk_n;
reg    fifo_SA_A_13_blk_n;
reg    fifo_SA_A_14_blk_n;
reg    fifo_SA_A_15_blk_n;
reg    conv3_sild_blk_n;
reg    mm_a_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [511:0] ap_phi_mux_temp_2_phi_fu_227_p4;
wire   [511:0] ap_phi_reg_pp0_iter1_temp_2_reg_224;
reg   [31:0] rep_fu_84;
wire   [31:0] rep_7_fu_249_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_rep_6;
wire   [127:0] trunc_ln215_fu_260_p1;
reg    ap_block_pp0_stage0_01001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 rep_fu_84 = 32'd0;
#0 ap_done_reg = 1'b0;
end

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln201_fu_243_p2 == 1'd0))) begin
            rep_fu_84 <= rep_7_fu_249_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            rep_fu_84 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln201_reg_321 <= icmp_ln201_fu_243_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln201_fu_243_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln201_reg_321 == 1'd0)) begin
        if ((mode_7 == 1'd0)) begin
            ap_phi_mux_temp_2_phi_fu_227_p4 = mm_a_dout;
        end else if ((mode_7 == 1'd1)) begin
            ap_phi_mux_temp_2_phi_fu_227_p4 = conv3_sild_dout;
        end else begin
            ap_phi_mux_temp_2_phi_fu_227_p4 = ap_phi_reg_pp0_iter1_temp_2_reg_224;
        end
    end else begin
        ap_phi_mux_temp_2_phi_fu_227_p4 = ap_phi_reg_pp0_iter1_temp_2_reg_224;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_rep_6 = 32'd0;
    end else begin
        ap_sig_allocacmp_rep_6 = rep_fu_84;
    end
end

always @ (*) begin
    if (((ap_predicate_op39_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        conv3_sild_blk_n = conv3_sild_empty_n;
    end else begin
        conv3_sild_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op39_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv3_sild_read = 1'b1;
    end else begin
        conv3_sild_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_SA_A_10_blk_n = fifo_SA_A_10_full_n;
    end else begin
        fifo_SA_A_10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_SA_A_10_write = 1'b1;
    end else begin
        fifo_SA_A_10_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_SA_A_11_blk_n = fifo_SA_A_11_full_n;
    end else begin
        fifo_SA_A_11_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_SA_A_11_write = 1'b1;
    end else begin
        fifo_SA_A_11_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_SA_A_12_blk_n = fifo_SA_A_12_full_n;
    end else begin
        fifo_SA_A_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_SA_A_12_write = 1'b1;
    end else begin
        fifo_SA_A_12_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_SA_A_13_blk_n = fifo_SA_A_13_full_n;
    end else begin
        fifo_SA_A_13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_SA_A_13_write = 1'b1;
    end else begin
        fifo_SA_A_13_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_SA_A_14_blk_n = fifo_SA_A_14_full_n;
    end else begin
        fifo_SA_A_14_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_SA_A_14_write = 1'b1;
    end else begin
        fifo_SA_A_14_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_SA_A_15_blk_n = fifo_SA_A_15_full_n;
    end else begin
        fifo_SA_A_15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_SA_A_15_write = 1'b1;
    end else begin
        fifo_SA_A_15_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_SA_A_1_blk_n = fifo_SA_A_1_full_n;
    end else begin
        fifo_SA_A_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_SA_A_1_write = 1'b1;
    end else begin
        fifo_SA_A_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_SA_A_2_blk_n = fifo_SA_A_2_full_n;
    end else begin
        fifo_SA_A_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_SA_A_2_write = 1'b1;
    end else begin
        fifo_SA_A_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_SA_A_3_blk_n = fifo_SA_A_3_full_n;
    end else begin
        fifo_SA_A_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_SA_A_3_write = 1'b1;
    end else begin
        fifo_SA_A_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_SA_A_4_blk_n = fifo_SA_A_4_full_n;
    end else begin
        fifo_SA_A_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_SA_A_4_write = 1'b1;
    end else begin
        fifo_SA_A_4_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_SA_A_5_blk_n = fifo_SA_A_5_full_n;
    end else begin
        fifo_SA_A_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_SA_A_5_write = 1'b1;
    end else begin
        fifo_SA_A_5_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_SA_A_6_blk_n = fifo_SA_A_6_full_n;
    end else begin
        fifo_SA_A_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_SA_A_6_write = 1'b1;
    end else begin
        fifo_SA_A_6_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_SA_A_7_blk_n = fifo_SA_A_7_full_n;
    end else begin
        fifo_SA_A_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_SA_A_7_write = 1'b1;
    end else begin
        fifo_SA_A_7_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_SA_A_8_blk_n = fifo_SA_A_8_full_n;
    end else begin
        fifo_SA_A_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_SA_A_8_write = 1'b1;
    end else begin
        fifo_SA_A_8_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_SA_A_9_blk_n = fifo_SA_A_9_full_n;
    end else begin
        fifo_SA_A_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_SA_A_9_write = 1'b1;
    end else begin
        fifo_SA_A_9_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_SA_A_blk_n = fifo_SA_A_full_n;
    end else begin
        fifo_SA_A_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_SA_A_write = 1'b1;
    end else begin
        fifo_SA_A_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op37_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mm_a_blk_n = mm_a_empty_n;
    end else begin
        mm_a_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op37_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mm_a_read = 1'b1;
    end else begin
        mm_a_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((fifo_SA_A_4_full_n == 1'b0) | (fifo_SA_A_3_full_n == 1'b0) | (fifo_SA_A_2_full_n == 1'b0) | (fifo_SA_A_1_full_n == 1'b0) | (fifo_SA_A_full_n == 1'b0) | (fifo_SA_A_15_full_n == 1'b0) | (fifo_SA_A_14_full_n == 1'b0) | (fifo_SA_A_13_full_n == 1'b0) | (fifo_SA_A_12_full_n == 1'b0) | (fifo_SA_A_11_full_n == 1'b0) | (fifo_SA_A_10_full_n == 1'b0) | (fifo_SA_A_9_full_n == 1'b0) | (fifo_SA_A_8_full_n == 1'b0) | (fifo_SA_A_7_full_n == 1'b0) | (fifo_SA_A_6_full_n == 1'b0) | (fifo_SA_A_5_full_n == 1'b0) | ((ap_predicate_op39_read_state2 == 1'b1) & (conv3_sild_empty_n == 1'b0)) | ((ap_predicate_op37_read_state2 == 1'b1) & (mm_a_empty_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter1_temp_2_reg_224 = 'bx;

always @ (*) begin
    ap_predicate_op37_read_state2 = ((mode_7 == 1'd0) & (icmp_ln201_reg_321 == 1'd0));
end

always @ (*) begin
    ap_predicate_op39_read_state2 = ((mode_7 == 1'd1) & (icmp_ln201_reg_321 == 1'd0));
end

assign fifo_SA_A_10_din = {{ap_phi_mux_temp_2_phi_fu_227_p4[383:256]}};

assign fifo_SA_A_11_din = {{ap_phi_mux_temp_2_phi_fu_227_p4[383:256]}};

assign fifo_SA_A_12_din = {{ap_phi_mux_temp_2_phi_fu_227_p4[511:384]}};

assign fifo_SA_A_13_din = {{ap_phi_mux_temp_2_phi_fu_227_p4[511:384]}};

assign fifo_SA_A_14_din = {{ap_phi_mux_temp_2_phi_fu_227_p4[511:384]}};

assign fifo_SA_A_15_din = {{ap_phi_mux_temp_2_phi_fu_227_p4[511:384]}};

assign fifo_SA_A_1_din = trunc_ln215_fu_260_p1;

assign fifo_SA_A_2_din = trunc_ln215_fu_260_p1;

assign fifo_SA_A_3_din = trunc_ln215_fu_260_p1;

assign fifo_SA_A_4_din = {{ap_phi_mux_temp_2_phi_fu_227_p4[255:128]}};

assign fifo_SA_A_5_din = {{ap_phi_mux_temp_2_phi_fu_227_p4[255:128]}};

assign fifo_SA_A_6_din = {{ap_phi_mux_temp_2_phi_fu_227_p4[255:128]}};

assign fifo_SA_A_7_din = {{ap_phi_mux_temp_2_phi_fu_227_p4[255:128]}};

assign fifo_SA_A_8_din = {{ap_phi_mux_temp_2_phi_fu_227_p4[383:256]}};

assign fifo_SA_A_9_din = {{ap_phi_mux_temp_2_phi_fu_227_p4[383:256]}};

assign fifo_SA_A_din = trunc_ln215_fu_260_p1;

assign icmp_ln201_fu_243_p2 = ((ap_sig_allocacmp_rep_6 == p_read) ? 1'b1 : 1'b0);

assign rep_7_fu_249_p2 = (ap_sig_allocacmp_rep_6 + 32'd1);

assign trunc_ln215_fu_260_p1 = ap_phi_mux_temp_2_phi_fu_227_p4[127:0];

endmodule //top_ConvertInputToArray_Pipeline_VITIS_LOOP_201_1
