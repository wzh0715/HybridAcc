// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_top_Pipeline_VITIS_LOOP_53_1_VITIS_LOOP_56_2_VITIS_LOOP_59_3_VITIS_LOOP_62_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_a_dout,
        conv_a_empty_n,
        conv_a_read,
        conv3_samepad_din,
        conv3_samepad_full_n,
        conv3_samepad_write,
        bound78,
        bound65,
        div12_i_cast,
        bound58,
        add22_i,
        add17_i
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [127:0] conv_a_dout;
input   conv_a_empty_n;
output   conv_a_read;
output  [127:0] conv3_samepad_din;
input   conv3_samepad_full_n;
output   conv3_samepad_write;
input  [119:0] bound78;
input  [91:0] bound65;
input  [27:0] div12_i_cast;
input  [59:0] bound58;
input  [31:0] add22_i;
input  [31:0] add17_i;

reg ap_idle;
reg conv_a_read;
reg conv3_samepad_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg   [0:0] icmp_ln53_reg_526;
reg   [0:0] brmerge10_i_reg_530;
reg    ap_predicate_op77_read_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln53_fu_200_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    conv3_samepad_blk_n;
wire    ap_block_pp0_stage0;
reg    conv_a_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] brmerge10_i_fu_362_p2;
reg   [127:0] ap_phi_mux_outData_phi_fu_149_p4;
reg   [127:0] ap_phi_reg_pp0_iter2_outData_reg_145;
wire   [127:0] ap_phi_reg_pp0_iter0_outData_reg_145;
reg   [127:0] ap_phi_reg_pp0_iter1_outData_reg_145;
reg   [27:0] k_fu_72;
wire   [27:0] k_3_fu_386_p3;
wire    ap_loop_init;
reg   [31:0] x_fu_76;
wire   [31:0] select_ln59_fu_308_p3;
reg   [59:0] indvar_flatten60_fu_80;
wire   [59:0] select_ln59_1_fu_400_p3;
reg   [31:0] y_fu_84;
wire   [31:0] select_ln56_2_fu_294_p3;
reg   [91:0] indvar_flatten73_fu_88;
wire   [91:0] select_ln56_3_fu_414_p3;
reg   [119:0] indvar_flatten94_fu_92;
wire   [119:0] add_ln53_fu_205_p2;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln56_fu_217_p2;
wire   [0:0] icmp_ln62_fu_230_p2;
wire   [0:0] icmp_ln62_1_fu_235_p2;
wire   [0:0] icmp_ln59_fu_248_p2;
wire   [0:0] icmp_ln59_1_fu_253_p2;
wire   [31:0] select_ln53_fu_222_p3;
wire   [0:0] select_ln53_2_fu_258_p3;
wire   [0:0] or_ln56_fu_272_p2;
wire   [0:0] select_ln53_1_fu_240_p3;
wire   [31:0] y_2_fu_266_p2;
wire   [31:0] select_ln56_fu_278_p3;
wire   [0:0] select_ln56_1_fu_286_p3;
wire   [31:0] x_2_fu_302_p2;
wire   [0:0] ult_fu_322_p2;
wire   [0:0] cmp20_i_fu_316_p2;
wire   [0:0] rev_fu_327_p2;
wire   [0:0] ult11_fu_345_p2;
wire   [0:0] rev12_fu_350_p2;
wire   [0:0] cmp16_i_fu_339_p2;
wire   [0:0] tmp9_fu_356_p2;
wire   [0:0] tmp10_fu_333_p2;
wire   [0:0] or_ln62_fu_374_p2;
wire   [0:0] or_ln62_1_fu_380_p2;
wire   [27:0] add_ln62_fu_368_p2;
wire   [59:0] add_ln59_1_fu_394_p2;
wire   [91:0] add_ln56_1_fu_408_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_119;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 k_fu_72 = 28'd0;
#0 x_fu_76 = 32'd0;
#0 indvar_flatten60_fu_80 = 60'd0;
#0 y_fu_84 = 32'd0;
#0 indvar_flatten73_fu_88 = 92'd0;
#0 indvar_flatten94_fu_92 = 120'd0;
#0 ap_done_reg = 1'b0;
end

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_119)) begin
        if (((icmp_ln53_fu_200_p2 == 1'd0) & (brmerge10_i_fu_362_p2 == 1'd1))) begin
            ap_phi_reg_pp0_iter2_outData_reg_145 <= 128'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_outData_reg_145 <= ap_phi_reg_pp0_iter1_outData_reg_145;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten60_fu_80 <= 60'd0;
        end else if (((icmp_ln53_fu_200_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten60_fu_80 <= select_ln59_1_fu_400_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten73_fu_88 <= 92'd0;
        end else if (((icmp_ln53_fu_200_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten73_fu_88 <= select_ln56_3_fu_414_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten94_fu_92 <= 120'd0;
        end else if (((icmp_ln53_fu_200_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten94_fu_92 <= add_ln53_fu_205_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_fu_72 <= 28'd0;
        end else if (((icmp_ln53_fu_200_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_fu_72 <= k_3_fu_386_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            x_fu_76 <= 32'd0;
        end else if (((icmp_ln53_fu_200_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            x_fu_76 <= select_ln59_fu_308_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            y_fu_84 <= 32'd0;
        end else if (((icmp_ln53_fu_200_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            y_fu_84 <= select_ln56_2_fu_294_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_outData_reg_145 <= ap_phi_reg_pp0_iter0_outData_reg_145;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        brmerge10_i_reg_530 <= brmerge10_i_fu_362_p2;
        icmp_ln53_reg_526 <= icmp_ln53_fu_200_p2;
    end
end

always @ (*) begin
    if (((icmp_ln53_fu_200_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((brmerge10_i_reg_530 == 1'd0) & (icmp_ln53_reg_526 == 1'd0))) begin
        ap_phi_mux_outData_phi_fu_149_p4 = conv_a_dout;
    end else begin
        ap_phi_mux_outData_phi_fu_149_p4 = ap_phi_reg_pp0_iter2_outData_reg_145;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv3_samepad_blk_n = conv3_samepad_full_n;
    end else begin
        conv3_samepad_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv3_samepad_write = 1'b1;
    end else begin
        conv3_samepad_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op77_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_a_blk_n = conv_a_empty_n;
    end else begin
        conv_a_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op77_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_a_read = 1'b1;
    end else begin
        conv_a_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln53_fu_205_p2 = (indvar_flatten94_fu_92 + 120'd1);

assign add_ln56_1_fu_408_p2 = (indvar_flatten73_fu_88 + 92'd1);

assign add_ln59_1_fu_394_p2 = (indvar_flatten60_fu_80 + 60'd1);

assign add_ln62_fu_368_p2 = (k_fu_72 + 28'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((conv3_samepad_full_n == 1'b0) | ((ap_predicate_op77_read_state3 == 1'b1) & (conv_a_empty_n == 1'b0)));
end

always @ (*) begin
    ap_condition_119 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_phi_reg_pp0_iter0_outData_reg_145 = 'bx;

always @ (*) begin
    ap_predicate_op77_read_state3 = ((brmerge10_i_reg_530 == 1'd0) & (icmp_ln53_reg_526 == 1'd0));
end

assign brmerge10_i_fu_362_p2 = (tmp9_fu_356_p2 | tmp10_fu_333_p2);

assign cmp16_i_fu_339_p2 = ((select_ln59_fu_308_p3 == 32'd0) ? 1'b1 : 1'b0);

assign cmp20_i_fu_316_p2 = ((select_ln56_2_fu_294_p3 == 32'd0) ? 1'b1 : 1'b0);

assign conv3_samepad_din = ap_phi_mux_outData_phi_fu_149_p4;

assign icmp_ln53_fu_200_p2 = ((indvar_flatten94_fu_92 == bound78) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_217_p2 = ((indvar_flatten73_fu_88 == bound65) ? 1'b1 : 1'b0);

assign icmp_ln59_1_fu_253_p2 = ((indvar_flatten60_fu_80 == bound58) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_248_p2 = ((bound58 == 60'd0) ? 1'b1 : 1'b0);

assign icmp_ln62_1_fu_235_p2 = ((k_fu_72 == div12_i_cast) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_230_p2 = ((div12_i_cast == 28'd0) ? 1'b1 : 1'b0);

assign k_3_fu_386_p3 = ((or_ln62_1_fu_380_p2[0:0] == 1'b1) ? 28'd1 : add_ln62_fu_368_p2);

assign or_ln56_fu_272_p2 = (select_ln53_2_fu_258_p3 | icmp_ln56_fu_217_p2);

assign or_ln62_1_fu_380_p2 = (or_ln62_fu_374_p2 | icmp_ln56_fu_217_p2);

assign or_ln62_fu_374_p2 = (select_ln56_1_fu_286_p3 | select_ln53_2_fu_258_p3);

assign rev12_fu_350_p2 = (ult11_fu_345_p2 ^ 1'd1);

assign rev_fu_327_p2 = (ult_fu_322_p2 ^ 1'd1);

assign select_ln53_1_fu_240_p3 = ((icmp_ln56_fu_217_p2[0:0] == 1'b1) ? icmp_ln62_fu_230_p2 : icmp_ln62_1_fu_235_p2);

assign select_ln53_2_fu_258_p3 = ((icmp_ln56_fu_217_p2[0:0] == 1'b1) ? icmp_ln59_fu_248_p2 : icmp_ln59_1_fu_253_p2);

assign select_ln53_fu_222_p3 = ((icmp_ln56_fu_217_p2[0:0] == 1'b1) ? 32'd0 : y_fu_84);

assign select_ln56_1_fu_286_p3 = ((select_ln53_2_fu_258_p3[0:0] == 1'b1) ? icmp_ln62_fu_230_p2 : select_ln53_1_fu_240_p3);

assign select_ln56_2_fu_294_p3 = ((select_ln53_2_fu_258_p3[0:0] == 1'b1) ? y_2_fu_266_p2 : select_ln53_fu_222_p3);

assign select_ln56_3_fu_414_p3 = ((icmp_ln56_fu_217_p2[0:0] == 1'b1) ? 92'd1 : add_ln56_1_fu_408_p2);

assign select_ln56_fu_278_p3 = ((or_ln56_fu_272_p2[0:0] == 1'b1) ? 32'd0 : x_fu_76);

assign select_ln59_1_fu_400_p3 = ((or_ln56_fu_272_p2[0:0] == 1'b1) ? 60'd1 : add_ln59_1_fu_394_p2);

assign select_ln59_fu_308_p3 = ((select_ln56_1_fu_286_p3[0:0] == 1'b1) ? x_2_fu_302_p2 : select_ln56_fu_278_p3);

assign tmp10_fu_333_p2 = (rev_fu_327_p2 | cmp20_i_fu_316_p2);

assign tmp9_fu_356_p2 = (rev12_fu_350_p2 | cmp16_i_fu_339_p2);

assign ult11_fu_345_p2 = ((select_ln59_fu_308_p3 < add17_i) ? 1'b1 : 1'b0);

assign ult_fu_322_p2 = ((select_ln56_2_fu_294_p3 < add22_i) ? 1'b1 : 1'b0);

assign x_2_fu_302_p2 = (select_ln56_fu_278_p3 + 32'd1);

assign y_2_fu_266_p2 = (select_ln53_fu_222_p3 + 32'd1);

endmodule //top_top_Pipeline_VITIS_LOOP_53_1_VITIS_LOOP_56_2_VITIS_LOOP_59_3_VITIS_LOOP_62_4
